# -- 0010000c bc 80 68 10 00                         mov esp, 0x106880
 0: esp<32> := 0x00106880;
 1: goto (00100011, 0) 


# -- 00100011 e8 ca 00 00 00                         call 0x1000e0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x00100016;
 2: goto (001000e0, 0) #call with return address @ (00100016, 0)


# -- 00100016 fa                                     unsupported cli
 0: #unsupported fa


# -- 00100017 f4                                     hlt
 0: OK


# -- 00100018 eb fd                                  jmp 0x100017
 0: goto (00100017, 0) 


# -- 0010001a 60                                     pushal
 0: temp32<32> := esp<32>;
 1: @[(ss_base<32> + (esp<32> - 4<32>)),4] := eax<32>;
 2: esp<32> := (esp<32> - 4<32>);
 3: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ecx<32>;
 4: esp<32> := (esp<32> - 4<32>);
 5: @[(ss_base<32> + (esp<32> - 4<32>)),4] := edx<32>;
 6: esp<32> := (esp<32> - 4<32>);
 7: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ebx<32>;
 8: esp<32> := (esp<32> - 4<32>);
 9: @[(ss_base<32> + (esp<32> - 4<32>)),4] := temp32<32>;
10: esp<32> := (esp<32> - 4<32>);
11: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ebp<32>;
12: esp<32> := (esp<32> - 4<32>);
13: @[(ss_base<32> + (esp<32> - 4<32>)),4] := esi<32>;
14: esp<32> := (esp<32> - 4<32>);
15: @[(ss_base<32> + (esp<32> - 4<32>)),4] := edi<32>;
16: esp<32> := (esp<32> - 4<32>);
17: goto (0010001b, 0) 


# -- 0010001b fc                                     cld
 0: DF<1> := 0<1>;
 1: goto (0010001c, 0) 


# -- 0010001c 61                                     popa
 0: edi<32> := @[(ss_base<32> + esp<32>),4];
 1: esi<32> := @[(ss_base<32> + (4<32> + esp<32>)),4];
 2: ebp<32> := @[(ss_base<32> + (8<32> + esp<32>)),4];
 3: ebx<32> := @[(ss_base<32> + (16<32> + esp<32>)),4];
 4: edx<32> := @[(ss_base<32> + (20<32> + esp<32>)),4];
 5: ecx<32> := @[(ss_base<32> + (24<32> + esp<32>)),4];
 6: eax<32> := @[(ss_base<32> + (28<32> + esp<32>)),4];
 7: esp<32> := (32<32> + esp<32>);
 8: goto (0010001d, 0) 


# -- 0010001d cf                                     unsupported iret/iretd
 0: #unsupported cf


# -- 0010001e 90                                     nop
 0: goto (0010001f, 0) 


# -- 0010001f eb 01                                  jmp 0x100022
 0: goto (00100022, 0) 


# -- 00100021 90                                     nop
 0: goto (00100022, 0) 


# -- 00100022 f4                                     hlt
 0: OK


# -- 00100023 66 90                                  nop
 0: goto (00100025, 0) 


# -- 00100025 66 90                                  nop
 0: goto (00100027, 0) 


# -- 00100027 66 90                                  nop
 0: goto (00100029, 0) 


# -- 00100029 66 90                                  nop
 0: goto (0010002b, 0) 


# -- 0010002b 66 90                                  nop
 0: goto (0010002d, 0) 


# -- 0010002d 66 90                                  nop
 0: goto (0010002f, 0) 


# -- 0010002f 90                                     nop
 0: goto (00100030, 0) 


# -- 00100030 53                                     push ebx
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ebx<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100031, 0) 


# -- 00100031 bb 03 00 00 00                         mov ebx, 0x3
 0: ebx<32> := 3<32>;
 1: goto (00100036, 0) 


# -- 00100036 83 ec 08                               sub esp, 0x8
 0: res32<32> := (esp<32> - 8<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u -8<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 8<32>);
 7: esp<32> := res32<32>;
 8: goto (00100039, 0) 


# -- 00100039 83 ec 0c                               sub esp, 0xc
 0: res32<32> := (esp<32> - 12<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u -4<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 12<32>);
 7: esp<32> := res32<32>;
 8: goto (0010003c, 0) 


# -- 0010003c 68 08 04 10 00                         push 0x100408
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x00100408;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100041, 0) 


# -- 00100041 e8 6a 03 00 00                         call 0x1003b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x00100046;
 2: goto (001003b0, 0) #call with return address @ (00100046, 0)


# -- 00100046 cd 27                                  unsupported int 39
 0: #unsupported cd 27


# -- 00100048 c7 04 24 1e 04 10 00                   mov [esp], 0x10041e
 0: @[(ss_base<32> + esp<32>),4] := 0x0010041e;
 1: goto (0010004f, 0) 


# -- 0010004f e8 5c 03 00 00                         call 0x1003b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x00100054;
 2: goto (001003b0, 0) #call with return address @ (00100054, 0)


# -- 00100054 83 c4 10                               add esp, 0x10
 0: res32<32> := (16<32> + esp<32>);
 1: OF<1> := ((esp<32>{31} = 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (extu esp<32>{0,3} 5){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (16<33> + (extu esp<32> 33)){32};
 7: esp<32> := res32<32>;
 8: goto (00100057, 0) 


# -- 00100057 83 eb 01                               sub ebx, 0x1
 0: res32<32> := (ebx<32> - 1<32>);
 1: OF<1> := ((ebx<32>{31} != 0<1>) & (ebx<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (ebx<32>{0,3} <u 1<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (ebx<32> <u 1<32>);
 7: ebx<32> := res32<32>;
 8: goto (0010005a, 0) 


# -- 0010005a 75 dd                                  jnz 0x100039
 0: if ! (ZF<1>) goto (00100039, 0) else goto 1
 1: goto (0010005c, 0) 


# -- 0010005c eb fe                                  jmp 0x10005c
 0: goto (0010005c, 0) 


# -- 0010005e 66 90                                  nop
 0: goto (00100060, 0) 


# -- 00100060 56                                     push esi
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := esi<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100061, 0) 


# -- 00100061 31 c0                                  xor eax, eax
 0: res32<32> := 0<32>;
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: eax<32> := res32<32>;
 8: goto (00100063, 0) 


# -- 00100063 53                                     push ebx
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ebx<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100064, 0) 


# -- 00100064 bb 1a 00 10 00                         mov ebx, 0x10001a
 0: ebx<32> := 0x0010001a;
 1: goto (00100069, 0) 


# -- 00100069 89 de                                  mov esi, ebx
 0: esi<32> := ebx<32>;
 1: goto (0010006b, 0) 


# -- 0010006b 0f b7 db                               movzx ebx, bx
 0: ebx<32> := (extu ebx<32>{0,15} 32);
 1: goto (0010006e, 0) 


# -- 0010006e 66 31 f6                               xor si, si
 0: res16<16> := 0<16>;
 1: OF<1> := 0<1>;
 2: SF<1> := (res16<16> <s 0<16>);
 3: ZF<1> := (res16<16> = 0<16>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res16<16>{0} ^ res16<16>{1}) ^ res16<16>{2}) ^ res16<16>{3}) ^
          res16<16>{4}) ^ res16<16>{5}) ^ res16<16>{6}) ^ res16<16>{7}));
 6: CF<1> := 0<1>;
 7: esi<32>{0, 15} := res16<16>;
 8: goto (00100071, 0) 


# -- 00100071 89 d9                                  mov ecx, ebx
 0: ecx<32> := ebx<32>;
 1: goto (00100073, 0) 


# -- 00100073 89 f2                                  mov edx, esi
 0: edx<32> := esi<32>;
 1: goto (00100075, 0) 


# -- 00100075 83 ec 14                               sub esp, 0x14
 0: res32<32> := (esp<32> - 20<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u 4<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 20<32>);
 7: esp<32> := res32<32>;
 8: goto (00100078, 0) 


# -- 00100078 81 c9 00 00 08 00                      or ecx, 0x80000
 0: res32<32> := (0x00080000 | ecx<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: ecx<32> := res32<32>;
 8: goto (0010007e, 0) 


# -- 0010007e 80 ce 8e                               or dh, 0xffffff8e
 0: res8<8> := (-114<8> | edx<32>{8,15});
 1: OF<1> := 0<1>;
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := 0<1>;
 7: edx<32>{8, 15} := res8<8>;
 8: goto (00100081, 0) 


# -- 00100081 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (00100088, 0) 


# -- 00100088 89 0c c5 80 68 10 00                   mov [8 * eax + 0x106880], ecx
 0: @[(ds_base<32> + (0x00106880 + (8<32> * eax<32>))),4] := ecx<32>;
 1: goto (0010008f, 0) 


# -- 0010008f 89 14 c5 84 68 10 00                   mov [8 * eax + 0x106884], edx
 0: @[(ds_base<32> + (0x00106884 + (8<32> * eax<32>))),4] := edx<32>;
 1: goto (00100096, 0) 


# -- 00100096 83 c0 01                               add eax, 0x1
 0: res32<32> := (1<32> + eax<32>);
 1: OF<1> := ((eax<32>{31} = 0<1>) & (eax<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (1<5> + (extu eax<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (1<33> + (extu eax<32> 33)){32};
 7: eax<32> := res32<32>;
 8: goto (00100099, 0) 


# -- 00100099 3d 00 01 00 00                         cmp eax, 0x100
 0: res32<32> := (eax<32> - 256<32>);
 1: OF<1> := ((eax<32>{31} != 0<1>) & (eax<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (eax<32>{0,3} <u 0<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (eax<32> <u 256<32>);
 7: goto (0010009e, 0) 


# -- 0010009e 75 e8                                  jnz 0x100088
 0: if ! (ZF<1>) goto (00100088, 0) else goto 1
 1: goto (001000a0, 0) 


# -- 001000a0 81 cb 00 00 08 00                      or ebx, 0x80000
 0: res32<32> := (0x00080000 | ebx<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: ebx<32> := res32<32>;
 8: goto (001000a6, 0) 


# -- 001000a6 81 ce 00 ee 00 00                      or esi, 0xee00
 0: res32<32> := (0x0000ee00 | esi<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: esi<32> := res32<32>;
 8: goto (001000ac, 0) 


# -- 001000ac b8 00 08 00 00                         mov eax, 0x800
 0: eax<32> := 2048<32>;
 1: goto (001000b1, 0) 


# -- 001000b1 c7 44 24 0a 80 68 10 00                mov [esp + 0xa], 0x106880
 0: @[(ss_base<32> + (10<32> + esp<32>)),4] := 0x00106880;
 1: goto (001000b9, 0) 


# -- 001000b9 89 1d b8 69 10 00                      mov [0x1069b8], ebx
 0: @[(0x001069b8 + ds_base<32>),4] := ebx<32>;
 1: goto (001000bf, 0) 


# -- 001000bf 89 35 bc 69 10 00                      mov [0x1069bc], esi
 0: @[(0x001069bc + ds_base<32>),4] := esi<32>;
 1: goto (001000c5, 0) 


# -- 001000c5 66 89 44 24 08                         mov [esp + 0x8], ax
 0: @[(ss_base<32> + (8<32> + esp<32>)),2] := eax<32>{0,15};
 1: goto (001000ca, 0) 


# -- 001000ca 0f 01 5c 24 08 83 c4 14 5b 5e          unsupported 0x0f 01 5c 3
 0: #unsupported 0f 01 5c 24 08 83 c4 14 5b 5e


# -- 001000d4 c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 001000d5 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (001000dc, 0) 


# -- 001000dc 8d 74 26 00                            lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (001000e0, 0) 


# -- 001000e0 56                                     push esi
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := esi<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001000e1, 0) 


# -- 001000e1 53                                     push ebx
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ebx<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001000e2, 0) 


# -- 001000e2 83 ec 14                               sub esp, 0x14
 0: res32<32> := (esp<32> - 20<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u 4<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 20<32>);
 7: esp<32> := res32<32>;
 8: goto (001000e5, 0) 


# -- 001000e5 e8 66 01 00 00                         call 0x100250
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x001000ea;
 2: goto (00100250, 0) #call with return address @ (001000ea, 0)


# -- 001000ea 83 ec 0c                               sub esp, 0xc
 0: res32<32> := (esp<32> - 12<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u -4<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 12<32>);
 7: esp<32> := res32<32>;
 8: goto (001000ed, 0) 


# -- 001000ed 68 23 04 10 00                         push 0x100423
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x00100423;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001000f2, 0) 


# -- 001000f2 e8 b9 02 00 00                         call 0x1003b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x001000f7;
 2: goto (001003b0, 0) #call with return address @ (001000f7, 0)


# -- 001000f7 ba 38 00 00 00                         mov edx, 0x38
 0: edx<32> := 56<32>;
 1: goto (001000fc, 0) 


# -- 001000fc c7 44 24 1a 00 10 10 00                mov [esp + 0x1a], 0x101000
 0: @[(ss_base<32> + (26<32> + esp<32>)),4] := 0x00101000;
 1: goto (00100104, 0) 


# -- 00100104 66 89 54 24 18                         mov [esp + 0x18], dx
 0: @[(ss_base<32> + (24<32> + esp<32>)),2] := edx<32>{0,15};
 1: goto (00100109, 0) 


# -- 00100109 0f 01 54 24 18 c7                      unsupported 0x0f 01 54 2
 0: #unsupported 0f 01 54 24 18 c7


# -- 0010010f 04 24                                  add al, 0x24
 0: res8<8> := (36<8> + eax<32>{0,7});
 1: OF<1> := ((eax<32>{7} = 0<1>) & (eax<32>{7} != res8<8>{7}));
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := (4<5> + (extu eax<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := (36<9> + (extu eax<32>{0,7} 9)){8};
 7: eax<32>{0, 7} := res8<8>;
 8: goto (00100111, 0) 


# -- 00100111 31 04 10                               xor [eax + edx], eax
 0: res32<32> := (@[(ds_base<32> + (eax<32> + edx<32>)),4] ^ eax<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: @[(ds_base<32> + (eax<32> + edx<32>)),4] := res32<32>;
 8: goto (00100114, 0) 


# -- 00100114 00 e8                                  add al, ch
 0: res8<8> := (eax<32>{0,7} + ecx<32>{8,15});
 1: OF<1> := ((eax<32>{7} = ecx<32>{15}) & (eax<32>{7} != res8<8>{7}));
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := ((extu eax<32>{0,3} 5) + (extu ecx<32>{8,11} 5)){4};
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := ((extu eax<32>{0,7} 9) + (extu ecx<32>{8,15} 9)){8};
 7: eax<32>{0, 7} := res8<8>;
 8: goto (00100116, 0) 


# -- 00100116 96                                     xchg32
 0: temp1_32<32> := esi<32>;
 1: temp2_32<32> := eax<32>;
 2: esi<32> := temp2_32<32>;
 3: eax<32> := temp1_32<32>;
 4: goto (00100117, 0) 


# -- 00100117 02 00                                  add al, [eax]
 0: res8<8> := (eax<32>{0,7} + @[(ds_base<32> + eax<32>),1]);
 1: OF<1> :=
     ((eax<32>{7} = @[(ds_base<32> + eax<32>),1]{7}) &
      (eax<32>{7} != res8<8>{7}));
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> :=
     ((extu eax<32>{0,3} 5) + (extu @[(ds_base<32> + eax<32>),1]{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> :=
     ((extu eax<32>{0,7} 9) + (extu @[(ds_base<32> + eax<32>),1] 9)){8};
 7: eax<32>{0, 7} := res8<8>;
 8: goto (00100119, 0) 


# -- 00100119 00 ea                                  add dl, ch
 0: res8<8> := (edx<32>{0,7} + ecx<32>{8,15});
 1: OF<1> := ((edx<32>{7} = ecx<32>{15}) & (edx<32>{7} != res8<8>{7}));
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := ((extu edx<32>{0,3} 5) + (extu ecx<32>{8,11} 5)){4};
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := ((extu edx<32>{0,7} 9) + (extu ecx<32>{8,15} 9)){8};
 7: edx<32>{0, 7} := res8<8>;
 8: goto (0010011b, 0) 


# -- 0010011b 21 01                                  and [ecx], eax
 0: res32<32> := (@[(ds_base<32> + ecx<32>),4] & eax<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: @[(ds_base<32> + ecx<32>),4] := res32<32>;
 8: goto (0010011d, 0) 


# -- 0010011d 10 00                                  adc [eax], al
 0: res8<8> :=
     (@[(ds_base<32> + eax<32>),1] + (eax<32>{0,7} + (extu CF<1> 8)));
 1: OF<1> :=
     ((@[(ds_base<32> + eax<32>),1]{7} = eax<32>{7}) &
      (@[(ds_base<32> + eax<32>),1]{7} != res8<8>{7}));
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> :=
     ((extu @[(ds_base<32> + eax<32>),1]{0,3} 5) +
      ((extu eax<32>{0,3} 5) + (extu AF<1> 5))){4};
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> :=
     (((extu @[(ds_base<32> + eax<32>),1] 9) + (extu eax<32>{0,7} 9)) +
      (extu CF<1> 9)){8};
 7: @[(ds_base<32> + eax<32>),1] := res8<8>;
 8: goto (0010011f, 0) 


# -- 0010011f 08 00                                  or [eax], al
 0: res8<8> := (@[(ds_base<32> + eax<32>),1] | eax<32>{0,7});
 1: OF<1> := 0<1>;
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := 0<1>;
 7: @[(ds_base<32> + eax<32>),1] := res8<8>;
 8: goto (00100121, 0) 


# -- 00100121 c7 04 24 3d 04 10 00                   mov [esp], 0x10043d
 0: @[(ss_base<32> + esp<32>),4] := 0x0010043d;
 1: goto (00100128, 0) 


# -- 00100128 e8 83 02 00 00                         call 0x1003b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x0010012d;
 2: goto (001003b0, 0) #call with return address @ (0010012d, 0)


# -- 0010012d 66 b8 10 00                            mov ax, 0x10
 0: eax<32>{0, 15} := 16<16>;
 1: goto (00100131, 0) 


# -- 00100131 8e d0                                  mov ss, ax
 0: ss<16> := eax<32>{0,15};
 1: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 2: ss_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 3: goto (00100133, 0) 


# -- 00100133 8e d8                                  mov ds, ax
 0: ds<16> := eax<32>{0,15};
 1: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 2: ds_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 3: goto (00100135, 0) 


# -- 00100135 8e c0                                  mov es, ax
 0: es<16> := eax<32>{0,15};
 1: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 2: es_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 3: goto (00100137, 0) 


# -- 00100137 8e e0                                  mov fs, ax
 0: fs<16> := eax<32>{0,15};
 1: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 2: fs_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 3: goto (00100139, 0) 


# -- 00100139 8e e8                                  mov gs, ax
 0: gs<16> := eax<32>{0,15};
 1: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 2: gs_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 3: goto (0010013b, 0) 


# -- 0010013b c7 04 24 4c 04 10 00                   mov [esp], 0x10044c
 0: @[(ss_base<32> + esp<32>),4] := 0x0010044c;
 1: goto (00100142, 0) 


# -- 00100142 e8 69 02 00 00                         call 0x1003b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x00100147;
 2: goto (001003b0, 0) #call with return address @ (00100147, 0)


# -- 00100147 ba 80 70 10 00                         mov edx, 0x107080
 0: edx<32> := 0x00107080;
 1: goto (0010014c, 0) 


# -- 0010014c c7 05 88 70 10 00 10 00 00 00          mov [0x107088], 0x10
 0: @[(0x00107088 + ds_base<32>),4] := 16<32>;
 1: goto (00100156, 0) 


# -- 00100156 c7 05 84 70 10 00 7c 28 10 00          mov [0x107084], 0x10287c
 0: @[(0x00107084 + ds_base<32>),4] := 0x0010287c;
 1: goto (00100160, 0) 


# -- 00100160 89 d0                                  mov eax, edx
 0: eax<32> := edx<32>;
 1: goto (00100162, 0) 


# -- 00100162 89 d1                                  mov ecx, edx
 0: ecx<32> := edx<32>;
 1: goto (00100164, 0) 


# -- 00100164 c1 e2 10                               shl edx, 0x10
 0: res32<32> := (edx<32> << 16<32>);
 1: OF<1> := \undef;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: CF<1> := edx<32>{16};
 5: edx<32> := res32<32>;
 6: goto (00100167, 0) 


# -- 00100167 c1 e8 10                               shr eax, 0x10
 0: res32<32> := (eax<32> >>u 16<32>);
 1: OF<1> := \undef;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: CF<1> := eax<32>{15};
 5: eax<32> := res32<32>;
 6: goto (0010016a, 0) 


# -- 0010016a 81 e1 00 00 00 ff                      and ecx, 0xff000000
 0: res32<32> := (0xff000000 & ecx<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: ecx<32> := res32<32>;
 8: goto (00100170, 0) 


# -- 00100170 83 ca 68                               or edx, 0x68
 0: res32<32> := (104<32> | edx<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: edx<32> := res32<32>;
 8: goto (00100173, 0) 


# -- 00100173 0f b6 c0                               movzx eax, al
 0: eax<32> := (extu eax<32>{0,7} 32);
 1: goto (00100176, 0) 


# -- 00100176 89 15 28 10 10 00                      mov [0x101028], edx
 0: @[(0x00101028 + ds_base<32>),4] := edx<32>;
 1: goto (0010017c, 0) 


# -- 0010017c 09 c8                                  or eax, ecx
 0: res32<32> := (eax<32> | ecx<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: eax<32> := res32<32>;
 8: goto (0010017e, 0) 


# -- 0010017e 80 cc e9                               or ah, 0xffffffe9
 0: res8<8> := (-23<8> | eax<32>{8,15});
 1: OF<1> := 0<1>;
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := 0<1>;
 7: eax<32>{8, 15} := res8<8>;
 8: goto (00100181, 0) 


# -- 00100181 a3 2c 10 10 00                         mov [0x10102c], eax
 0: @[(0x0010102c + ds_base<32>),4] := eax<32>;
 1: goto (00100186, 0) 


# -- 00100186 b8 28 00 00 00                         mov eax, 0x28
 0: eax<32> := 40<32>;
 1: goto (0010018b, 0) 


# -- 0010018b 0f 00 d8                               unsupported ltr
 0: #unsupported 0f 00 d8


# -- 0010018e bb 1a 00 10 00                         mov ebx, 0x10001a
 0: ebx<32> := 0x0010001a;
 1: goto (00100193, 0) 


# -- 00100193 83 c4 10                               add esp, 0x10
 0: res32<32> := (16<32> + esp<32>);
 1: OF<1> := ((esp<32>{31} = 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (extu esp<32>{0,3} 5){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (16<33> + (extu esp<32> 33)){32};
 7: esp<32> := res32<32>;
 8: goto (00100196, 0) 


# -- 00100196 31 c0                                  xor eax, eax
 0: res32<32> := 0<32>;
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: eax<32> := res32<32>;
 8: goto (00100198, 0) 


# -- 00100198 89 de                                  mov esi, ebx
 0: esi<32> := ebx<32>;
 1: goto (0010019a, 0) 


# -- 0010019a 0f b7 db                               movzx ebx, bx
 0: ebx<32> := (extu ebx<32>{0,15} 32);
 1: goto (0010019d, 0) 


# -- 0010019d 66 31 f6                               xor si, si
 0: res16<16> := 0<16>;
 1: OF<1> := 0<1>;
 2: SF<1> := (res16<16> <s 0<16>);
 3: ZF<1> := (res16<16> = 0<16>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res16<16>{0} ^ res16<16>{1}) ^ res16<16>{2}) ^ res16<16>{3}) ^
          res16<16>{4}) ^ res16<16>{5}) ^ res16<16>{6}) ^ res16<16>{7}));
 6: CF<1> := 0<1>;
 7: esi<32>{0, 15} := res16<16>;
 8: goto (001001a0, 0) 


# -- 001001a0 89 d9                                  mov ecx, ebx
 0: ecx<32> := ebx<32>;
 1: goto (001001a2, 0) 


# -- 001001a2 89 f2                                  mov edx, esi
 0: edx<32> := esi<32>;
 1: goto (001001a4, 0) 


# -- 001001a4 81 c9 00 00 08 00                      or ecx, 0x80000
 0: res32<32> := (0x00080000 | ecx<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: ecx<32> := res32<32>;
 8: goto (001001aa, 0) 


# -- 001001aa 80 ce 8e                               or dh, 0xffffff8e
 0: res8<8> := (-114<8> | edx<32>{8,15});
 1: OF<1> := 0<1>;
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := 0<1>;
 7: edx<32>{8, 15} := res8<8>;
 8: goto (001001ad, 0) 


# -- 001001ad 8d 76 00                               lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (001001b0, 0) 


# -- 001001b0 89 0c c5 80 68 10 00                   mov [8 * eax + 0x106880], ecx
 0: @[(ds_base<32> + (0x00106880 + (8<32> * eax<32>))),4] := ecx<32>;
 1: goto (001001b7, 0) 


# -- 001001b7 89 14 c5 84 68 10 00                   mov [8 * eax + 0x106884], edx
 0: @[(ds_base<32> + (0x00106884 + (8<32> * eax<32>))),4] := edx<32>;
 1: goto (001001be, 0) 


# -- 001001be 83 c0 01                               add eax, 0x1
 0: res32<32> := (1<32> + eax<32>);
 1: OF<1> := ((eax<32>{31} = 0<1>) & (eax<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (1<5> + (extu eax<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (1<33> + (extu eax<32> 33)){32};
 7: eax<32> := res32<32>;
 8: goto (001001c1, 0) 


# -- 001001c1 3d 00 01 00 00                         cmp eax, 0x100
 0: res32<32> := (eax<32> - 256<32>);
 1: OF<1> := ((eax<32>{31} != 0<1>) & (eax<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (eax<32>{0,3} <u 0<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (eax<32> <u 256<32>);
 7: goto (001001c6, 0) 


# -- 001001c6 75 e8                                  jnz 0x1001b0
 0: if ! (ZF<1>) goto (001001b0, 0) else goto 1
 1: goto (001001c8, 0) 


# -- 001001c8 81 cb 00 00 08 00                      or ebx, 0x80000
 0: res32<32> := (0x00080000 | ebx<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: ebx<32> := res32<32>;
 8: goto (001001ce, 0) 


# -- 001001ce 81 ce 00 ee 00 00                      or esi, 0xee00
 0: res32<32> := (0x0000ee00 | esi<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: esi<32> := res32<32>;
 8: goto (001001d4, 0) 


# -- 001001d4 b8 00 08 00 00                         mov eax, 0x800
 0: eax<32> := 2048<32>;
 1: goto (001001d9, 0) 


# -- 001001d9 c7 44 24 0a 80 68 10 00                mov [esp + 0xa], 0x106880
 0: @[(ss_base<32> + (10<32> + esp<32>)),4] := 0x00106880;
 1: goto (001001e1, 0) 


# -- 001001e1 89 1d b8 69 10 00                      mov [0x1069b8], ebx
 0: @[(0x001069b8 + ds_base<32>),4] := ebx<32>;
 1: goto (001001e7, 0) 


# -- 001001e7 89 35 bc 69 10 00                      mov [0x1069bc], esi
 0: @[(0x001069bc + ds_base<32>),4] := esi<32>;
 1: goto (001001ed, 0) 


# -- 001001ed 66 89 44 24 08                         mov [esp + 0x8], ax
 0: @[(ss_base<32> + (8<32> + esp<32>)),2] := eax<32>{0,15};
 1: goto (001001f2, 0) 


# -- 001001f2 0f 01 5c 24 08 ba fc 23 10 00          unsupported 0x0f 01 5c 3
 0: #unsupported 0f 01 5c 24 08 ba fc 23 10 00


# -- 001001fc b9 30 00 10 00                         mov ecx, 0x100030
 0: ecx<32> := 0x00100030;
 1: goto (00100201, 0) 


# -- 00100201 66 b8 23 00                            mov ax, 0x23
 0: eax<32>{0, 15} := 35<16>;
 1: goto (00100205, 0) 


# -- 00100205 8e c0                                  mov es, ax
 0: es<16> := eax<32>{0,15};
 1: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 2: es_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 3: goto (00100207, 0) 


# -- 00100207 8e e0                                  mov fs, ax
 0: fs<16> := eax<32>{0,15};
 1: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 2: fs_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 3: goto (00100209, 0) 


# -- 00100209 8e e8                                  mov gs, ax
 0: gs<16> := eax<32>{0,15};
 1: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 2: gs_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 3: goto (0010020b, 0) 


# -- 0010020b 8e d8                                  mov ds, ax
 0: ds<16> := eax<32>{0,15};
 1: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 2: ds_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 3: goto (0010020d, 0) 


# -- 0010020d 6a 23                                  push 0x23
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 35<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (0010020f, 0) 


# -- 0010020f 52                                     push edx
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := edx<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100210, 0) 


# -- 00100210 9c                                     pushfd
 0: temp32<32> :=
     (extu ((((((((((OF<1> :: DF<1>) :: 0<2>) :: SF<1>) :: ZF<1>) :: 0<1>) ::
                AF<1>) :: 0<1>) :: PF<1>) :: -1<1>) :: CF<1>) 32);
 1: @[(ss_base<32> + (esp<32> - 4<32>)),4] := temp32<32>;
 2: esp<32> := (esp<32> - 4<32>);
 3: goto (00100211, 0) 


# -- 00100211 6a 1b                                  push 0x1b
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 27<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100213, 0) 


# -- 00100213 51                                     push ecx
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ecx<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100214, 0) 


# -- 00100214 cf                                     unsupported iret/iretd
 0: #unsupported cf


# -- 00100215 83 c4 14                               add esp, 0x14
 0: res32<32> := (20<32> + esp<32>);
 1: OF<1> := ((esp<32>{31} = 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (4<5> + (extu esp<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (20<33> + (extu esp<32> 33)){32};
 7: esp<32> := res32<32>;
 8: goto (00100218, 0) 


# -- 00100218 5b                                     pop ebx
 0: ebx<32> := @[(ss_base<32> + esp<32>),4];
 1: esp<32> := (4<32> + esp<32>);
 2: goto (00100219, 0) 


# -- 00100219 5e                                     pop esi
 0: esi<32> := @[(ss_base<32> + esp<32>),4];
 1: esp<32> := (4<32> + esp<32>);
 2: goto (0010021a, 0) 


# -- 0010021a c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 0010021b 66 90                                  nop
 0: goto (0010021d, 0) 


# -- 0010021d 66 90                                  nop
 0: goto (0010021f, 0) 


# -- 0010021f 90                                     nop
 0: goto (00100220, 0) 


# -- 00100220 8b 54 24 04                            mov edx, [esp + 0x4]
 0: edx<32> := @[(ss_base<32> + (4<32> + esp<32>)),4];
 1: goto (00100224, 0) 


# -- 00100224 31 c0                                  xor eax, eax
 0: res32<32> := 0<32>;
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: eax<32> := res32<32>;
 8: goto (00100226, 0) 


# -- 00100226 80 3a 00                               cmp [edx], 0x0
 0: res8<8> := @[(ds_base<32> + edx<32>),1];
 1: OF<1> :=
     ((@[(ds_base<32> + edx<32>),1]{7} != 0<1>) &
      (@[(ds_base<32> + edx<32>),1]{7} != res8<8>{7}));
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := (@[(ds_base<32> + edx<32>),1]{0,3} <u 0<4>);
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := (@[(ds_base<32> + edx<32>),1] <u 0<8>);
 7: goto (00100229, 0) 


# -- 00100229 74 15                                  jz 0x100240
 0: if ZF<1> goto (00100240, 0) else goto 1
 1: goto (0010022b, 0) 


# -- 0010022b 8d 74 26 00                            lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (0010022f, 0) 


# -- 0010022f 90                                     nop
 0: goto (00100230, 0) 


# -- 00100230 83 c0 01                               add eax, 0x1
 0: res32<32> := (1<32> + eax<32>);
 1: OF<1> := ((eax<32>{31} = 0<1>) & (eax<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (1<5> + (extu eax<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (1<33> + (extu eax<32> 33)){32};
 7: eax<32> := res32<32>;
 8: goto (00100233, 0) 


# -- 00100233 80 3c 02 00                            cmp [edx + eax], 0x0
 0: res8<8> := @[(ds_base<32> + (edx<32> + eax<32>)),1];
 1: OF<1> :=
     ((@[(ds_base<32> + (edx<32> + eax<32>)),1]{7} != 0<1>) &
      (@[(ds_base<32> + (edx<32> + eax<32>)),1]{7} != res8<8>{7}));
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := (@[(ds_base<32> + (edx<32> + eax<32>)),1]{0,3} <u 0<4>);
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := (@[(ds_base<32> + (edx<32> + eax<32>)),1] <u 0<8>);
 7: goto (00100237, 0) 


# -- 00100237 75 f7                                  jnz 0x100230
 0: if ! (ZF<1>) goto (00100230, 0) else goto 1
 1: goto (00100239, 0) 


# -- 00100239 c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 0010023a 8d b6 00 00 00 00                      lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (00100240, 0) 


# -- 00100240 c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 00100241 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (00100248, 0) 


# -- 00100248 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (0010024f, 0) 


# -- 0010024f 90                                     nop
 0: goto (00100250, 0) 


# -- 00100250 c7 05 f0 70 10 00 00 00 00 00          mov [0x1070f0], 0x0
 0: @[(0x001070f0 + ds_base<32>),4] := 0<32>;
 1: goto (0010025a, 0) 


# -- 0010025a ba a0 80 0b 00                         mov edx, 0xb80a0
 0: edx<32> := 0x000b80a0;
 1: goto (0010025f, 0) 


# -- 0010025f c7 05 ec 70 10 00 00 00 00 00          mov [0x1070ec], 0x0
 0: @[(0x001070ec + ds_base<32>),4] := 0<32>;
 1: goto (00100269, 0) 


# -- 00100269 c6 05 e8 70 10 00 07                   mov [0x1070e8], 0x7
 0: @[(0x001070e8 + ds_base<32>),1] := 7<8>;
 1: goto (00100270, 0) 


# -- 00100270 8d 82 60 ff ff ff                      lea eax, [edx + 0xffffff60]
 0: eax<32> := (ds_base<32> + (-160<32> + edx<32>));
 1: goto (00100276, 0) 


# -- 00100276 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (0010027d, 0) 


# -- 0010027d 8d 76 00                               lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (00100280, 0) 


# -- 00100280 b9 20 07 00 00                         mov ecx, 0x720
 0: ecx<32> := 1824<32>;
 1: goto (00100285, 0) 


# -- 00100285 83 c0 02                               add eax, 0x2
 0: res32<32> := (2<32> + eax<32>);
 1: OF<1> := ((eax<32>{31} = 0<1>) & (eax<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (2<5> + (extu eax<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (2<33> + (extu eax<32> 33)){32};
 7: eax<32> := res32<32>;
 8: goto (00100288, 0) 


# -- 00100288 66 89 48 fe                            mov [eax + 0xfffffffe], cx
 0: @[(ds_base<32> + (-2<32> + eax<32>)),2] := ecx<32>{0,15};
 1: goto (0010028c, 0) 


# -- 0010028c 39 d0                                  cmp eax, edx
 0: res32<32> := (eax<32> - edx<32>);
 1: OF<1> := ((eax<32>{31} != edx<32>{31}) & (eax<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (eax<32>{0,3} <u edx<32>{0,3});
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (eax<32> <u edx<32>);
 7: goto (0010028e, 0) 


# -- 0010028e 75 f0                                  jnz 0x100280
 0: if ! (ZF<1>) goto (00100280, 0) else goto 1
 1: goto (00100290, 0) 


# -- 00100290 8d 90 a0 00 00 00                      lea edx, [eax + 0xa0]
 0: edx<32> := (ds_base<32> + (160<32> + eax<32>));
 1: goto (00100296, 0) 


# -- 00100296 3d a0 8f 0b 00                         cmp eax, 0xb8fa0
 0: res32<32> := (eax<32> - 0x000b8fa0);
 1: OF<1> := ((eax<32>{31} != 0<1>) & (eax<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (eax<32>{0,3} <u 0<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (eax<32> <u 0x000b8fa0);
 7: goto (0010029b, 0) 


# -- 0010029b 75 d3                                  jnz 0x100270
 0: if ! (ZF<1>) goto (00100270, 0) else goto 1
 1: goto (0010029d, 0) 


# -- 0010029d c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 0010029e 66 90                                  nop
 0: goto (001002a0, 0) 


# -- 001002a0 8b 44 24 04                            mov eax, [esp + 0x4]
 0: eax<32> := @[(ss_base<32> + (4<32> + esp<32>)),4];
 1: goto (001002a4, 0) 


# -- 001002a4 a2 e8 70 10 00                         mov [0x1070e8], eax
 0: @[(0x001070e8 + ds_base<32>),4] := eax<32>;
 1: goto (001002a9, 0) 


# -- 001002a9 c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 001002aa 8d b6 00 00 00 00                      lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (001002b0, 0) 


# -- 001002b0 0f b6 54 24 08                         movzx edx, [esp + 0x8]
 0: edx<32> := (extu @[(ss_base<32> + (8<32> + esp<32>)),1] 32);
 1: goto (001002b5, 0) 


# -- 001002b5 8b 44 24 10                            mov eax, [esp + 0x10]
 0: eax<32> := @[(ss_base<32> + (16<32> + esp<32>)),4];
 1: goto (001002b9, 0) 


# -- 001002b9 89 d1                                  mov ecx, edx
 0: ecx<32> := edx<32>;
 1: goto (001002bb, 0) 


# -- 001002bb 0f b6 54 24 04                         movzx edx, [esp + 0x4]
 0: edx<32> := (extu @[(ss_base<32> + (4<32> + esp<32>)),1] 32);
 1: goto (001002c0, 0) 


# -- 001002c0 8d 04 80                               lea eax, [eax + 4 * eax]
 0: eax<32> := (ds_base<32> + (eax<32> + (4<32> * eax<32>)));
 1: goto (001002c3, 0) 


# -- 001002c3 c1 e1 08                               shl ecx, 0x8
 0: res32<32> := (ecx<32> << 8<32>);
 1: OF<1> := \undef;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: CF<1> := ecx<32>{24};
 5: ecx<32> := res32<32>;
 6: goto (001002c6, 0) 


# -- 001002c6 c1 e0 04                               shl eax, 0x4
 0: res32<32> := (eax<32> << 4<32>);
 1: OF<1> := \undef;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: CF<1> := eax<32>{28};
 5: eax<32> := res32<32>;
 6: goto (001002c9, 0) 


# -- 001002c9 03 44 24 0c                            add eax, [esp + 0xc]
 0: res32<32> := (eax<32> + @[(ss_base<32> + (12<32> + esp<32>)),4]);
 1: OF<1> :=
     ((eax<32>{31} = @[(ss_base<32> + (12<32> + esp<32>)),4]{31}) &
      (eax<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> :=
     ((extu eax<32>{0,3} 5) +
      (extu @[(ss_base<32> + (12<32> + esp<32>)),4]{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> :=
     ((extu eax<32> 33) + (extu @[(ss_base<32> + (12<32> + esp<32>)),4] 33)){32}
     ;
 7: eax<32> := res32<32>;
 8: goto (001002cd, 0) 


# -- 001002cd 09 ca                                  or edx, ecx
 0: res32<32> := (edx<32> | ecx<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: edx<32> := res32<32>;
 8: goto (001002cf, 0) 


# -- 001002cf 66 89 94 00 00 80 0b 00                mov [eax + eax + 0xb8000], dx
 0: @[(ds_base<32> + (eax<32> + (0x000b8000 + eax<32>))),2] := edx<32>{0,15};
 1: goto (001002d7, 0) 


# -- 001002d7 c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 001002d8 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (001002df, 0) 


# -- 001002df 90                                     nop
 0: goto (001002e0, 0) 


# -- 001002e0 8b 15 f0 70 10 00                      mov edx, [0x1070f0]
 0: edx<32> := @[(0x001070f0 + ds_base<32>),4];
 1: goto (001002e6, 0) 


# -- 001002e6 c7 05 ec 70 10 00 00 00 00 00          mov [0x1070ec], 0x0
 0: @[(0x001070ec + ds_base<32>),4] := 0<32>;
 1: goto (001002f0, 0) 


# -- 001002f0 8d 42 01                               lea eax, [edx + 0x1]
 0: eax<32> := (ds_base<32> + (1<32> + edx<32>));
 1: goto (001002f3, 0) 


# -- 001002f3 83 fa 18                               cmp edx, 0x18
 0: res32<32> := (edx<32> - 24<32>);
 1: OF<1> := ((edx<32>{31} != 0<1>) & (edx<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (edx<32>{0,3} <u -8<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (edx<32> <u 24<32>);
 7: goto (001002f6, 0) 


# -- 001002f6 ba 00 00 00 00                         mov edx, 0x0
 0: edx<32> := 0<32>;
 1: goto (001002fb, 0) 


# -- 001002fb 0f 44 c2                               cmovz eax, edx
 0: eax<32> := ZF<1> ? edx<32> : eax<32>;
 1: goto (001002fe, 0) 


# -- 001002fe a3 f0 70 10 00                         mov [0x1070f0], eax
 0: @[(0x001070f0 + ds_base<32>),4] := eax<32>;
 1: goto (00100303, 0) 


# -- 00100303 c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 00100304 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (0010030b, 0) 


# -- 0010030b 8d 74 26 00                            lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (0010030f, 0) 


# -- 0010030f 90                                     nop
 0: goto (00100310, 0) 


# -- 00100310 56                                     push esi
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := esi<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100311, 0) 


# -- 00100311 8b 15 f0 70 10 00                      mov edx, [0x1070f0]
 0: edx<32> := @[(0x001070f0 + ds_base<32>),4];
 1: goto (00100317, 0) 


# -- 00100317 53                                     push ebx
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ebx<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100318, 0) 


# -- 00100318 8b 44 24 0c                            mov eax, [esp + 0xc]
 0: eax<32> := @[(ss_base<32> + (12<32> + esp<32>)),4];
 1: goto (0010031c, 0) 


# -- 0010031c 3c 0a                                  cmp al, 0xa
 0: res8<8> := (eax<32>{0,7} - 10<8>);
 1: OF<1> := ((eax<32>{7} != 0<1>) & (eax<32>{7} != res8<8>{7}));
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := (eax<32>{0,3} <u -6<4>);
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := (eax<32>{0,7} <u 10<8>);
 7: goto (0010031e, 0) 


# -- 0010031e 74 38                                  jz 0x100358
 0: if ZF<1> goto (00100358, 0) else goto 1
 1: goto (00100320, 0) 


# -- 00100320 0f b6 35 e8 70 10 00                   movzx esi, [0x1070e8]
 0: esi<32> := (extu @[(0x001070e8 + ds_base<32>),1] 32);
 1: goto (00100327, 0) 


# -- 00100327 8b 1d ec 70 10 00                      mov ebx, [0x1070ec]
 0: ebx<32> := @[(0x001070ec + ds_base<32>),4];
 1: goto (0010032d, 0) 


# -- 0010032d 8d 0c 92                               lea ecx, [edx + 4 * edx]
 0: ecx<32> := (ds_base<32> + (edx<32> + (4<32> * edx<32>)));
 1: goto (00100330, 0) 


# -- 00100330 0f b6 c0                               movzx eax, al
 0: eax<32> := (extu eax<32>{0,7} 32);
 1: goto (00100333, 0) 


# -- 00100333 c1 e1 04                               shl ecx, 0x4
 0: res32<32> := (ecx<32> << 4<32>);
 1: OF<1> := \undef;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: CF<1> := ecx<32>{28};
 5: ecx<32> := res32<32>;
 6: goto (00100336, 0) 


# -- 00100336 c1 e6 08                               shl esi, 0x8
 0: res32<32> := (esi<32> << 8<32>);
 1: OF<1> := \undef;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: CF<1> := esi<32>{24};
 5: esi<32> := res32<32>;
 6: goto (00100339, 0) 


# -- 00100339 01 d9                                  add ecx, ebx
 0: res32<32> := (ecx<32> + ebx<32>);
 1: OF<1> := ((ecx<32>{31} = ebx<32>{31}) & (ecx<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := ((extu ecx<32>{0,3} 5) + (extu ebx<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := ((extu ecx<32> 33) + (extu ebx<32> 33)){32};
 7: ecx<32> := res32<32>;
 8: goto (0010033b, 0) 


# -- 0010033b 09 f0                                  or eax, esi
 0: res32<32> := (eax<32> | esi<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: eax<32> := res32<32>;
 8: goto (0010033d, 0) 


# -- 0010033d 66 89 84 09 00 80 0b 00                mov [ecx + ecx + 0xb8000], ax
 0: @[(ds_base<32> + (ecx<32> + (0x000b8000 + ecx<32>))),2] := eax<32>{0,15};
 1: goto (00100345, 0) 


# -- 00100345 8d 43 01                               lea eax, [ebx + 0x1]
 0: eax<32> := (ds_base<32> + (1<32> + ebx<32>));
 1: goto (00100348, 0) 


# -- 00100348 83 fb 4f                               cmp ebx, 0x4f
 0: res32<32> := (ebx<32> - 79<32>);
 1: OF<1> := ((ebx<32>{31} != 0<1>) & (ebx<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (ebx<32>{0,3} <u -1<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (ebx<32> <u 79<32>);
 7: goto (0010034b, 0) 


# -- 0010034b 74 0b                                  jz 0x100358
 0: if ZF<1> goto (00100358, 0) else goto 1
 1: goto (0010034d, 0) 


# -- 0010034d a3 ec 70 10 00                         mov [0x1070ec], eax
 0: @[(0x001070ec + ds_base<32>),4] := eax<32>;
 1: goto (00100352, 0) 


# -- 00100352 5b                                     pop ebx
 0: ebx<32> := @[(ss_base<32> + esp<32>),4];
 1: esp<32> := (4<32> + esp<32>);
 2: goto (00100353, 0) 


# -- 00100353 5e                                     pop esi
 0: esi<32> := @[(ss_base<32> + esp<32>),4];
 1: esp<32> := (4<32> + esp<32>);
 2: goto (00100354, 0) 


# -- 00100354 c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 00100355 8d 76 00                               lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (00100358, 0) 


# -- 00100358 c7 05 ec 70 10 00 00 00 00 00          mov [0x1070ec], 0x0
 0: @[(0x001070ec + ds_base<32>),4] := 0<32>;
 1: goto (00100362, 0) 


# -- 00100362 83 c2 01                               add edx, 0x1
 0: res32<32> := (1<32> + edx<32>);
 1: OF<1> := ((edx<32>{31} = 0<1>) & (edx<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (1<5> + (extu edx<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (1<33> + (extu edx<32> 33)){32};
 7: edx<32> := res32<32>;
 8: goto (00100365, 0) 


# -- 00100365 89 15 f0 70 10 00                      mov [0x1070f0], edx
 0: @[(0x001070f0 + ds_base<32>),4] := edx<32>;
 1: goto (0010036b, 0) 


# -- 0010036b 83 fa 19                               cmp edx, 0x19
 0: res32<32> := (edx<32> - 25<32>);
 1: OF<1> := ((edx<32>{31} != 0<1>) & (edx<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (edx<32>{0,3} <u -7<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (edx<32> <u 25<32>);
 7: goto (0010036e, 0) 


# -- 0010036e 75 e2                                  jnz 0x100352
 0: if ! (ZF<1>) goto (00100352, 0) else goto 1
 1: goto (00100370, 0) 


# -- 00100370 c7 05 f0 70 10 00 00 00 00 00          mov [0x1070f0], 0x0
 0: @[(0x001070f0 + ds_base<32>),4] := 0<32>;
 1: goto (0010037a, 0) 


# -- 0010037a 5b                                     pop ebx
 0: ebx<32> := @[(ss_base<32> + esp<32>),4];
 1: esp<32> := (4<32> + esp<32>);
 2: goto (0010037b, 0) 


# -- 0010037b 5e                                     pop esi
 0: esi<32> := @[(ss_base<32> + esp<32>),4];
 1: esp<32> := (4<32> + esp<32>);
 2: goto (0010037c, 0) 


# -- 0010037c c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 0010037d 8d 76 00                               lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (00100380, 0) 


# -- 00100380 56                                     push esi
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := esi<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100381, 0) 


# -- 00100381 53                                     push ebx
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ebx<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100382, 0) 


# -- 00100382 8b 74 24 10                            mov esi, [esp + 0x10]
 0: esi<32> := @[(ss_base<32> + (16<32> + esp<32>)),4];
 1: goto (00100386, 0) 


# -- 00100386 85 f6                                  test esi, esi
 0: res32<32> := (esi<32> & esi<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: AF<1> := \undef;
 4: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 5: ZF<1> := (res32<32> = 0<32>);
 6: CF<1> := 0<1>;
 7: goto (00100388, 0) 


# -- 00100388 74 17                                  jz 0x1003a1
 0: if ZF<1> goto (001003a1, 0) else goto 1
 1: goto (0010038a, 0) 


# -- 0010038a 8b 5c 24 0c                            mov ebx, [esp + 0xc]
 0: ebx<32> := @[(ss_base<32> + (12<32> + esp<32>)),4];
 1: goto (0010038e, 0) 


# -- 0010038e 01 de                                  add esi, ebx
 0: res32<32> := (esi<32> + ebx<32>);
 1: OF<1> := ((esi<32>{31} = ebx<32>{31}) & (esi<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := ((extu esi<32>{0,3} 5) + (extu ebx<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := ((extu esi<32> 33) + (extu ebx<32> 33)){32};
 7: esi<32> := res32<32>;
 8: goto (00100390, 0) 


# -- 00100390 0f be 03                               movsx eax, [ebx]
 0: eax<32> := (exts @[(ds_base<32> + ebx<32>),1] 32);
 1: goto (00100393, 0) 


# -- 00100393 83 c3 01                               add ebx, 0x1
 0: res32<32> := (1<32> + ebx<32>);
 1: OF<1> := ((ebx<32>{31} = 0<1>) & (ebx<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (1<5> + (extu ebx<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (1<33> + (extu ebx<32> 33)){32};
 7: ebx<32> := res32<32>;
 8: goto (00100396, 0) 


# -- 00100396 50                                     push eax
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := eax<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100397, 0) 


# -- 00100397 e8 74 ff ff ff                         call 0x100310
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x0010039c;
 2: goto (00100310, 0) #call with return address @ (0010039c, 0)


# -- 0010039c 58                                     pop eax
 0: eax<32> := @[(ss_base<32> + esp<32>),4];
 1: esp<32> := (4<32> + esp<32>);
 2: goto (0010039d, 0) 


# -- 0010039d 39 de                                  cmp esi, ebx
 0: res32<32> := (esi<32> - ebx<32>);
 1: OF<1> := ((esi<32>{31} != ebx<32>{31}) & (esi<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esi<32>{0,3} <u ebx<32>{0,3});
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esi<32> <u ebx<32>);
 7: goto (0010039f, 0) 


# -- 0010039f 75 ef                                  jnz 0x100390
 0: if ! (ZF<1>) goto (00100390, 0) else goto 1
 1: goto (001003a1, 0) 


# -- 001003a1 5b                                     pop ebx
 0: ebx<32> := @[(ss_base<32> + esp<32>),4];
 1: esp<32> := (4<32> + esp<32>);
 2: goto (001003a2, 0) 


# -- 001003a2 5e                                     pop esi
 0: esi<32> := @[(ss_base<32> + esp<32>),4];
 1: esp<32> := (4<32> + esp<32>);
 2: goto (001003a3, 0) 


# -- 001003a3 c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 001003a4 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (001003ab, 0) 


# -- 001003ab 8d 74 26 00                            lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (001003af, 0) 


# -- 001003af 90                                     nop
 0: goto (001003b0, 0) 


# -- 001003b0 56                                     push esi
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := esi<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001003b1, 0) 


# -- 001003b1 53                                     push ebx
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ebx<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001003b2, 0) 


# -- 001003b2 8b 4c 24 0c                            mov ecx, [esp + 0xc]
 0: ecx<32> := @[(ss_base<32> + (12<32> + esp<32>)),4];
 1: goto (001003b6, 0) 


# -- 001003b6 0f be 01                               movsx eax, [ecx]
 0: eax<32> := (exts @[(ds_base<32> + ecx<32>),1] 32);
 1: goto (001003b9, 0) 


# -- 001003b9 84 c0                                  test al, al
 0: res8<8> := (eax<32>{0,7} & eax<32>{0,7});
 1: OF<1> := 0<1>;
 2: SF<1> := (res8<8> <s 0<8>);
 3: AF<1> := \undef;
 4: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 5: ZF<1> := (res8<8> = 0<8>);
 6: CF<1> := 0<1>;
 7: goto (001003bb, 0) 


# -- 001003bb 74 2c                                  jz 0x1003e9
 0: if ZF<1> goto (001003e9, 0) else goto 1
 1: goto (001003bd, 0) 


# -- 001003bd 31 d2                                  xor edx, edx
 0: res32<32> := 0<32>;
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: edx<32> := res32<32>;
 8: goto (001003bf, 0) 


# -- 001003bf 90                                     nop
 0: goto (001003c0, 0) 


# -- 001003c0 83 c2 01                               add edx, 0x1
 0: res32<32> := (1<32> + edx<32>);
 1: OF<1> := ((edx<32>{31} = 0<1>) & (edx<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (1<5> + (extu edx<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (1<33> + (extu edx<32> 33)){32};
 7: edx<32> := res32<32>;
 8: goto (001003c3, 0) 


# -- 001003c3 80 3c 11 00                            cmp [ecx + edx], 0x0
 0: res8<8> := @[(ds_base<32> + (ecx<32> + edx<32>)),1];
 1: OF<1> :=
     ((@[(ds_base<32> + (ecx<32> + edx<32>)),1]{7} != 0<1>) &
      (@[(ds_base<32> + (ecx<32> + edx<32>)),1]{7} != res8<8>{7}));
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := (@[(ds_base<32> + (ecx<32> + edx<32>)),1]{0,3} <u 0<4>);
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := (@[(ds_base<32> + (ecx<32> + edx<32>)),1] <u 0<8>);
 7: goto (001003c7, 0) 


# -- 001003c7 75 f7                                  jnz 0x1003c0
 0: if ! (ZF<1>) goto (001003c0, 0) else goto 1
 1: goto (001003c9, 0) 


# -- 001003c9 8d 59 01                               lea ebx, [ecx + 0x1]
 0: ebx<32> := (ds_base<32> + (1<32> + ecx<32>));
 1: goto (001003cc, 0) 


# -- 001003cc 8d 34 11                               lea esi, [ecx + edx]
 0: esi<32> := (ds_base<32> + (ecx<32> + edx<32>));
 1: goto (001003cf, 0) 


# -- 001003cf eb 0d                                  jmp 0x1003de
 0: goto (001003de, 0) 


# -- 001003d1 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (001003d8, 0) 


# -- 001003d8 0f be 03                               movsx eax, [ebx]
 0: eax<32> := (exts @[(ds_base<32> + ebx<32>),1] 32);
 1: goto (001003db, 0) 


# -- 001003db 83 c3 01                               add ebx, 0x1
 0: res32<32> := (1<32> + ebx<32>);
 1: OF<1> := ((ebx<32>{31} = 0<1>) & (ebx<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (1<5> + (extu ebx<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (1<33> + (extu ebx<32> 33)){32};
 7: ebx<32> := res32<32>;
 8: goto (001003de, 0) 


# -- 001003de 50                                     push eax
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := eax<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001003df, 0) 


# -- 001003df e8 2c ff ff ff                         call 0x100310
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x001003e4;
 2: goto (00100310, 0) #call with return address @ (001003e4, 0)


# -- 001003e4 58                                     pop eax
 0: eax<32> := @[(ss_base<32> + esp<32>),4];
 1: esp<32> := (4<32> + esp<32>);
 2: goto (001003e5, 0) 


# -- 001003e5 39 de                                  cmp esi, ebx
 0: res32<32> := (esi<32> - ebx<32>);
 1: OF<1> := ((esi<32>{31} != ebx<32>{31}) & (esi<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esi<32>{0,3} <u ebx<32>{0,3});
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esi<32> <u ebx<32>);
 7: goto (001003e7, 0) 


# -- 001003e7 75 ef                                  jnz 0x1003d8
 0: if ! (ZF<1>) goto (001003d8, 0) else goto 1
 1: goto (001003e9, 0) 


# -- 001003e9 5b                                     pop ebx
 0: ebx<32> := @[(ss_base<32> + esp<32>),4];
 1: esp<32> := (4<32> + esp<32>);
 2: goto (001003ea, 0) 


# -- 001003ea 5e                                     pop esi
 0: esi<32> := @[(ss_base<32> + esp<32>),4];
 1: esp<32> := (4<32> + esp<32>);
 2: goto (001003eb, 0) 


# -- 001003eb c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 001003ec                                        unsupported
 0: OK


