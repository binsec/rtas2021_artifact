# -- 00100270 bc f0 2c 10 00                         mov esp, 0x102cf0
 0: esp<32> := 0x00102cf0;
 1: goto (00100275, 0) 


# -- 00100275 e8 e6 00 00 00                         call 0x100360
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x0010027a;
 2: goto (00100360, 0) #call with return address @ (0010027a, 0)


# -- 0010027a eb 00                                  jmp 0x10027c
 0: goto (0010027c, 0) 


# -- 0010027c fa                                     unsupported cli
 0: #unsupported fa


# -- 0010027d f4                                     hlt
 0: OK


# -- 0010027e eb fd                                  jmp 0x10027d
 0: goto (0010027d, 0) 


# -- 00100280 60                                     pushal
 0: temp32<32> := esp<32>;
 1: @[(ss_base<32> + (esp<32> - 4<32>)),4] := eax<32>;
 2: esp<32> := (esp<32> - 4<32>);
 3: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ecx<32>;
 4: esp<32> := (esp<32> - 4<32>);
 5: @[(ss_base<32> + (esp<32> - 4<32>)),4] := edx<32>;
 6: esp<32> := (esp<32> - 4<32>);
 7: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ebx<32>;
 8: esp<32> := (esp<32> - 4<32>);
 9: @[(ss_base<32> + (esp<32> - 4<32>)),4] := temp32<32>;
10: esp<32> := (esp<32> - 4<32>);
11: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ebp<32>;
12: esp<32> := (esp<32> - 4<32>);
13: @[(ss_base<32> + (esp<32> - 4<32>)),4] := esi<32>;
14: esp<32> := (esp<32> - 4<32>);
15: @[(ss_base<32> + (esp<32> - 4<32>)),4] := edi<32>;
16: esp<32> := (esp<32> - 4<32>);
17: goto (00100281, 0) 


# -- 00100281 fc                                     cld
 0: DF<1> := 0<1>;
 1: goto (00100282, 0) 


# -- 00100282 89 e1                                  mov ecx, esp
 0: ecx<32> := esp<32>;
 1: goto (00100284, 0) 


# -- 00100284 bc f0 2c 10 00                         mov esp, 0x102cf0
 0: esp<32> := 0x00102cf0;
 1: goto (00100289, 0) 


# -- 00100289 e8 b2 02 00 00                         call 0x100540
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x0010028e;
 2: goto (00100540, 0) #call with return address @ (0010028e, 0)


# -- 0010028e eb ec                                  jmp 0x10027c
 0: goto (0010027c, 0) 


# -- 00100290 b8 0c 00 10 00                         mov eax, 0x10000c
 0: eax<32> := 0x0010000c;
 1: goto (00100295, 0) 


# -- 00100295 83 ec 14                               sub esp, 0x14
 0: res32<32> := (esp<32> - 20<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u 4<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 20<32>);
 7: esp<32> := res32<32>;
 8: goto (00100298, 0) 


# -- 00100298 89 c1                                  mov ecx, eax
 0: ecx<32> := eax<32>;
 1: goto (0010029a, 0) 


# -- 0010029a 0f b7 d0                               movzx edx, ax
 0: edx<32> := (extu eax<32>{0,15} 32);
 1: goto (0010029d, 0) 


# -- 0010029d 31 c0                                  xor eax, eax
 0: res32<32> := 0<32>;
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: eax<32> := res32<32>;
 8: goto (0010029f, 0) 


# -- 0010029f 66 31 c9                               xor cx, cx
 0: res16<16> := 0<16>;
 1: OF<1> := 0<1>;
 2: SF<1> := (res16<16> <s 0<16>);
 3: ZF<1> := (res16<16> = 0<16>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res16<16>{0} ^ res16<16>{1}) ^ res16<16>{2}) ^ res16<16>{3}) ^
          res16<16>{4}) ^ res16<16>{5}) ^ res16<16>{6}) ^ res16<16>{7}));
 6: CF<1> := 0<1>;
 7: ecx<32>{0, 15} := res16<16>;
 8: goto (001002a2, 0) 


# -- 001002a2 81 ca 00 00 08 00                      or edx, 0x80000
 0: res32<32> := (0x00080000 | edx<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: edx<32> := res32<32>;
 8: goto (001002a8, 0) 


# -- 001002a8 80 cd 8e                               or ch, 0xffffff8e
 0: res8<8> := (-114<8> | ecx<32>{8,15});
 1: OF<1> := 0<1>;
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := 0<1>;
 7: ecx<32>{8, 15} := res8<8>;
 8: goto (001002ab, 0) 


# -- 001002ab 8d 74 26 00                            lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (001002af, 0) 


# -- 001002af 90                                     nop
 0: goto (001002b0, 0) 


# -- 001002b0 89 14 c5 80 20 10 00                   mov [8 * eax + 0x102080], edx
 0: @[(ds_base<32> + (0x00102080 + (8<32> * eax<32>))),4] := edx<32>;
 1: goto (001002b7, 0) 


# -- 001002b7 89 0c c5 84 20 10 00                   mov [8 * eax + 0x102084], ecx
 0: @[(ds_base<32> + (0x00102084 + (8<32> * eax<32>))),4] := ecx<32>;
 1: goto (001002be, 0) 


# -- 001002be 83 c0 01                               add eax, 0x1
 0: res32<32> := (1<32> + eax<32>);
 1: OF<1> := ((eax<32>{31} = 0<1>) & (eax<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (1<5> + (extu eax<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (1<33> + (extu eax<32> 33)){32};
 7: eax<32> := res32<32>;
 8: goto (001002c1, 0) 


# -- 001002c1 3d 00 01 00 00                         cmp eax, 0x100
 0: res32<32> := (eax<32> - 256<32>);
 1: OF<1> := ((eax<32>{31} != 0<1>) & (eax<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (eax<32>{0,3} <u 0<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (eax<32> <u 256<32>);
 7: goto (001002c6, 0) 


# -- 001002c6 75 e8                                  jnz 0x1002b0
 0: if ! (ZF<1>) goto (001002b0, 0) else goto 1
 1: goto (001002c8, 0) 


# -- 001002c8 b8 80 02 10 00                         mov eax, 0x100280
 0: eax<32> := 0x00100280;
 1: goto (001002cd, 0) 


# -- 001002cd c7 44 24 0a 80 20 10 00                mov [esp + 0xa], 0x102080
 0: @[(ss_base<32> + (10<32> + esp<32>)),4] := 0x00102080;
 1: goto (001002d5, 0) 


# -- 001002d5 89 c2                                  mov edx, eax
 0: edx<32> := eax<32>;
 1: goto (001002d7, 0) 


# -- 001002d7 0f b7 c0                               movzx eax, ax
 0: eax<32> := (extu eax<32>{0,15} 32);
 1: goto (001002da, 0) 


# -- 001002da 0d 00 00 08 00                         or eax, 0x80000
 0: res32<32> := (0x00080000 | eax<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: eax<32> := res32<32>;
 8: goto (001002df, 0) 


# -- 001002df 66 31 d2                               xor dx, dx
 0: res16<16> := 0<16>;
 1: OF<1> := 0<1>;
 2: SF<1> := (res16<16> <s 0<16>);
 3: ZF<1> := (res16<16> = 0<16>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res16<16>{0} ^ res16<16>{1}) ^ res16<16>{2}) ^ res16<16>{3}) ^
          res16<16>{4}) ^ res16<16>{5}) ^ res16<16>{6}) ^ res16<16>{7}));
 6: CF<1> := 0<1>;
 7: edx<32>{0, 15} := res16<16>;
 8: goto (001002e2, 0) 


# -- 001002e2 a3 b8 21 10 00                         mov [0x1021b8], eax
 0: @[(0x001021b8 + ds_base<32>),4] := eax<32>;
 1: goto (001002e7, 0) 


# -- 001002e7 89 d0                                  mov eax, edx
 0: eax<32> := edx<32>;
 1: goto (001002e9, 0) 


# -- 001002e9 80 cc ee                               or ah, 0xffffffee
 0: res8<8> := (-18<8> | eax<32>{8,15});
 1: OF<1> := 0<1>;
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := 0<1>;
 7: eax<32>{8, 15} := res8<8>;
 8: goto (001002ec, 0) 


# -- 001002ec a3 bc 21 10 00                         mov [0x1021bc], eax
 0: @[(0x001021bc + ds_base<32>),4] := eax<32>;
 1: goto (001002f1, 0) 


# -- 001002f1 b8 00 08 00 00                         mov eax, 0x800
 0: eax<32> := 2048<32>;
 1: goto (001002f6, 0) 


# -- 001002f6 66 89 44 24 08                         mov [esp + 0x8], ax
 0: @[(ss_base<32> + (8<32> + esp<32>)),2] := eax<32>{0,15};
 1: goto (001002fb, 0) 


# -- 001002fb 0f 01 5c 24 08                         lidt [esp + 0x8]
 0: idt<32> := @[(ss_base<32> + (10<32> + esp<32>)),4];
 1: goto (00100300, 0) 


# -- 00100300 83 c4 14                               add esp, 0x14
 0: res32<32> := (20<32> + esp<32>);
 1: OF<1> := ((esp<32>{31} = 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (4<5> + (extu esp<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (20<33> + (extu esp<32> 33)){32};
 7: esp<32> := res32<32>;
 8: goto (00100303, 0) 


# -- 00100303 c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 00100304 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (0010030b, 0) 


# -- 0010030b 8d 74 26 00                            lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (0010030f, 0) 


# -- 0010030f 90                                     nop
 0: goto (00100310, 0) 


# -- 00100310 8b 44 24 04                            mov eax, [esp + 0x4]
 0: eax<32> := @[(ss_base<32> + (4<32> + esp<32>)),4];
 1: goto (00100314, 0) 


# -- 00100314 8d 50 34                               lea edx, [eax + 0x34]
 0: edx<32> := (ds_base<32> + (52<32> + eax<32>));
 1: goto (00100317, 0) 


# -- 00100317 89 15 84 28 10 00                      mov [0x102884], edx
 0: @[(0x00102884 + ds_base<32>),4] := edx<32>;
 1: goto (0010031d, 0) 


# -- 0010031d 89 c4                                  mov esp, eax
 0: esp<32> := eax<32>;
 1: goto (0010031f, 0) 


# -- 0010031f 61                                     popa
 0: edi<32> := @[(ss_base<32> + esp<32>),4];
 1: esi<32> := @[(ss_base<32> + (4<32> + esp<32>)),4];
 2: ebp<32> := @[(ss_base<32> + (8<32> + esp<32>)),4];
 3: ebx<32> := @[(ss_base<32> + (16<32> + esp<32>)),4];
 4: edx<32> := @[(ss_base<32> + (20<32> + esp<32>)),4];
 5: ecx<32> := @[(ss_base<32> + (24<32> + esp<32>)),4];
 6: eax<32> := @[(ss_base<32> + (28<32> + esp<32>)),4];
 7: esp<32> := (32<32> + esp<32>);
 8: goto (00100320, 0) 


# -- 00100320 cf                                     iret
 0: temp32_0<32> := @[(ss_base<32> + esp<32>),4];
 1: esp<32> := (4<32> + esp<32>);
 2: temp32_1<32> := @[(ss_base<32> + esp<32>),4];
 3: esp<32> := (4<32> + esp<32>);
 4: cs<16> := temp32_1<32>{0,15};
 5: @assert ((temp32_1<32>{0,15} != 0<16>));
 6: temp32<32> :=
     (temp32_1<32>{2} ? ldt<32> : gdt<32> +
      (extu (-4<16> & temp32_1<32>{0,15}) 32));
 7: temp32<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 8: @assert (((@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]) !=
              0<32>));
 9: cs_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
10: temp32_2<32> := @[(ss_base<32> + esp<32>),4];
11: esp<32> := (4<32> + esp<32>);
12: temp32_1<32> := @[(ss_base<32> + esp<32>),4];
13: esp<32> := (4<32> + esp<32>);
14: ss<16> := temp32_1<32>{0,15};
15: @assert ((temp32_1<32>{0,15} != 0<16>));
16: temp32<32> :=
     (temp32_1<32>{2} ? ldt<32> : gdt<32> +
      (extu (-4<16> & temp32_1<32>{0,15}) 32));
17: temp32<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
18: ss_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
19: CF<1> := temp32_2<32>{0};
20: PF<1> := temp32_2<32>{2};
21: AF<1> := temp32_2<32>{4};
22: ZF<1> := temp32_2<32>{6};
23: SF<1> := temp32_2<32>{7};
24: TF<1> := temp32_2<32>{8};
25: DF<1> := temp32_2<32>{10};
26: OF<1> := temp32_2<32>{11};
27: NT<1> := temp32_2<32>{14};
28: RF<1> := temp32_2<32>{16};
29: AC<1> := temp32_2<32>{18};
30: ID<1> := temp32_2<32>{21};
31: IF<1> := temp32_2<32>{9};
32: IOPL<2> := temp32_2<32>{12,13};
33: VIF<1> := temp32_2<32>{19};
34: VIP<1> := temp32_2<32>{20};
35: cpl<2> := cs<16>{0,1};
36: goto temp32_0<32> 


# -- 00100321 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (00100328, 0) 


# -- 00100328 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (0010032f, 0) 


# -- 0010032f 90                                     nop
 0: goto (00100330, 0) 


# -- 00100330 8b 44 24 04                            mov eax, [esp + 0x4]
 0: eax<32> := @[(ss_base<32> + (4<32> + esp<32>)),4];
 1: goto (00100334, 0) 


# -- 00100334 8b 54 24 0c                            mov edx, [esp + 0xc]
 0: edx<32> := @[(ss_base<32> + (12<32> + esp<32>)),4];
 1: goto (00100338, 0) 


# -- 00100338 89 50 20                               mov [eax + 0x20], edx
 0: @[(ds_base<32> + (32<32> + eax<32>)),4] := edx<32>;
 1: goto (0010033b, 0) 


# -- 0010033b 8b 54 24 08                            mov edx, [esp + 0x8]
 0: edx<32> := @[(ss_base<32> + (8<32> + esp<32>)),4];
 1: goto (0010033f, 0) 


# -- 0010033f c7 40 24 1b 00 00 00                   mov [eax + 0x24], 0x1b
 0: @[(ds_base<32> + (36<32> + eax<32>)),4] := 27<32>;
 1: goto (00100346, 0) 


# -- 00100346 c7 40 28 02 00 00 00                   mov [eax + 0x28], 0x2
 0: @[(ds_base<32> + (40<32> + eax<32>)),4] := 2<32>;
 1: goto (0010034d, 0) 


# -- 0010034d 89 50 2c                               mov [eax + 0x2c], edx
 0: @[(ds_base<32> + (44<32> + eax<32>)),4] := edx<32>;
 1: goto (00100350, 0) 


# -- 00100350 c7 40 30 23 00 00 00                   mov [eax + 0x30], 0x23
 0: @[(ds_base<32> + (48<32> + eax<32>)),4] := 35<32>;
 1: goto (00100357, 0) 


# -- 00100357 c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 00100358 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (0010035f, 0) 


# -- 0010035f 90                                     nop
 0: goto (00100360, 0) 


# -- 00100360 83 ec 1c                               sub esp, 0x1c
 0: res32<32> := (esp<32> - 28<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u -4<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 28<32>);
 7: esp<32> := res32<32>;
 8: goto (00100363, 0) 


# -- 00100363 e8 e8 fc ff ff                         call 0x100050
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x00100368;
 2: goto (00100050, 0) #call with return address @ (00100368, 0)


# -- 00100368 83 ec 0c                               sub esp, 0xc
 0: res32<32> := (esp<32> - 12<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u -4<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 12<32>);
 7: esp<32> := res32<32>;
 8: goto (0010036b, 0) 


# -- 0010036b 68 24 09 10 00                         push 0x100924
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x00100924;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100370, 0) 


# -- 00100370 e8 3b fe ff ff                         call 0x1001b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x00100375;
 2: goto (001001b0, 0) #call with return address @ (00100375, 0)


# -- 00100375 ba 38 00 00 00                         mov edx, 0x38
 0: edx<32> := 56<32>;
 1: goto (0010037a, 0) 


# -- 0010037a c7 44 24 1a 00 10 10 00                mov [esp + 0x1a], 0x101000
 0: @[(ss_base<32> + (26<32> + esp<32>)),4] := 0x00101000;
 1: goto (00100382, 0) 


# -- 00100382 66 89 54 24 18                         mov [esp + 0x18], dx
 0: @[(ss_base<32> + (24<32> + esp<32>)),2] := edx<32>{0,15};
 1: goto (00100387, 0) 


# -- 00100387 0f 01 54 24 18                         lgdt [esp + 0x18]
 0: gdt<32> := @[(ss_base<32> + (26<32> + esp<32>)),4];
 1: goto (0010038c, 0) 


# -- 0010038c c7 04 24 32 09 10 00                   mov [esp], 0x100932
 0: @[(ss_base<32> + esp<32>),4] := 0x00100932;
 1: goto (00100393, 0) 


# -- 00100393 e8 18 fe ff ff                         call 0x1001b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x00100398;
 2: goto (001001b0, 0) #call with return address @ (00100398, 0)


# -- 00100398 ea 9f 03 10 00 08 00                   jmp 0x8:0x10039f
 0: cs<16> := 8<16>;
 1: @assert (-1<1>);
 2: temp32<32> := (8<32> + gdt<32>);
 3: temp32<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 4: @assert (((@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]) !=
              0<32>));
 5: cs_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 6: goto (0010039f, 0) 


# -- 0010039f c7 04 24 3e 09 10 00                   mov [esp], 0x10093e
 0: @[(ss_base<32> + esp<32>),4] := 0x0010093e;
 1: goto (001003a6, 0) 


# -- 001003a6 e8 05 fe ff ff                         call 0x1001b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x001003ab;
 2: goto (001001b0, 0) #call with return address @ (001003ab, 0)


# -- 001003ab 66 b8 10 00                            mov ax, 0x10
 0: eax<32>{0, 15} := 16<16>;
 1: goto (001003af, 0) 


# -- 001003af 8e d0                                  mov ss, ax
 0: ss<16> := eax<32>{0,15};
 1: @assert ((eax<32>{0,15} != 0<16>));
 2: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 3: temp32<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 4: ss_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 5: goto (001003b1, 0) 


# -- 001003b1 8e d8                                  mov ds, ax
 0: ds<16> := eax<32>{0,15};
 1: @assert ((eax<32>{0,15} != 0<16>));
 2: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 3: temp32<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 4: ds_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 5: goto (001003b3, 0) 


# -- 001003b3 8e c0                                  mov es, ax
 0: es<16> := eax<32>{0,15};
 1: @assert ((eax<32>{0,15} != 0<16>));
 2: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 3: temp32<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 4: es_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 5: goto (001003b5, 0) 


# -- 001003b5 8e e0                                  mov fs, ax
 0: fs<16> := eax<32>{0,15};
 1: @assert ((eax<32>{0,15} != 0<16>));
 2: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 3: temp32<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 4: fs_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 5: goto (001003b7, 0) 


# -- 001003b7 8e e8                                  mov gs, ax
 0: gs<16> := eax<32>{0,15};
 1: @assert ((eax<32>{0,15} != 0<16>));
 2: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 3: temp32<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 4: gs_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 5: goto (001003b9, 0) 


# -- 001003b9 c7 04 24 4d 09 10 00                   mov [esp], 0x10094d
 0: @[(ss_base<32> + esp<32>),4] := 0x0010094d;
 1: goto (001003c0, 0) 


# -- 001003c0 e8 eb fd ff ff                         call 0x1001b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x001003c5;
 2: goto (001001b0, 0) #call with return address @ (001003c5, 0)


# -- 001003c5 ba 80 28 10 00                         mov edx, 0x102880
 0: edx<32> := 0x00102880;
 1: goto (001003ca, 0) 


# -- 001003ca c7 05 88 28 10 00 10 00 00 00          mov [0x102888], 0x10
 0: @[(0x00102888 + ds_base<32>),4] := 16<32>;
 1: goto (001003d4, 0) 


# -- 001003d4 c7 05 84 28 10 00 ec 2c 10 00          mov [0x102884], 0x102cec
 0: @[(0x00102884 + ds_base<32>),4] := 0x00102cec;
 1: goto (001003de, 0) 


# -- 001003de 89 d0                                  mov eax, edx
 0: eax<32> := edx<32>;
 1: goto (001003e0, 0) 


# -- 001003e0 89 d1                                  mov ecx, edx
 0: ecx<32> := edx<32>;
 1: goto (001003e2, 0) 


# -- 001003e2 c1 e2 10                               shl edx, 0x10
 0: res32<32> := (edx<32> << 16<32>);
 1: OF<1> := \undef;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: CF<1> := edx<32>{16};
 5: edx<32> := res32<32>;
 6: goto (001003e5, 0) 


# -- 001003e5 c1 e8 10                               shr eax, 0x10
 0: res32<32> := (eax<32> >>u 16<32>);
 1: OF<1> := \undef;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: CF<1> := eax<32>{15};
 5: eax<32> := res32<32>;
 6: goto (001003e8, 0) 


# -- 001003e8 81 e1 00 00 00 ff                      and ecx, 0xff000000
 0: res32<32> := (0xff000000 & ecx<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: ecx<32> := res32<32>;
 8: goto (001003ee, 0) 


# -- 001003ee 83 ca 68                               or edx, 0x68
 0: res32<32> := (104<32> | edx<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: edx<32> := res32<32>;
 8: goto (001003f1, 0) 


# -- 001003f1 0f b6 c0                               movzx eax, al
 0: eax<32> := (extu eax<32>{0,7} 32);
 1: goto (001003f4, 0) 


# -- 001003f4 89 15 28 10 10 00                      mov [0x101028], edx
 0: @[(0x00101028 + ds_base<32>),4] := edx<32>;
 1: goto (001003fa, 0) 


# -- 001003fa 09 c8                                  or eax, ecx
 0: res32<32> := (eax<32> | ecx<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: eax<32> := res32<32>;
 8: goto (001003fc, 0) 


# -- 001003fc 80 cc e9                               or ah, 0xffffffe9
 0: res8<8> := (-23<8> | eax<32>{8,15});
 1: OF<1> := 0<1>;
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := 0<1>;
 7: eax<32>{8, 15} := res8<8>;
 8: goto (001003ff, 0) 


# -- 001003ff a3 2c 10 10 00                         mov [0x10102c], eax
 0: @[(0x0010102c + ds_base<32>),4] := eax<32>;
 1: goto (00100404, 0) 


# -- 00100404 b8 28 00 00 00                         mov eax, 0x28
 0: eax<32> := 40<32>;
 1: goto (00100409, 0) 


# -- 00100409 0f 00 d8                               ltr ax
 0: tr<16> := eax<32>{0,15};
 1: @assert ((eax<32>{0,15} != 0<16>));
 2: temp32<32> :=
     (eax<32>{2} ? ldt<32> : gdt<32> + (extu (-4<16> & eax<32>{0,15}) 32));
 3: temp32<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 4: tr_base<32> := (@[(7<32> + temp32<32>),1] :: @[(2<32> + temp32<32>),3]);
 5: goto (0010040c, 0) 


# -- 0010040c b8 0c 00 10 00                         mov eax, 0x10000c
 0: eax<32> := 0x0010000c;
 1: goto (00100411, 0) 


# -- 00100411 83 c4 10                               add esp, 0x10
 0: res32<32> := (16<32> + esp<32>);
 1: OF<1> := ((esp<32>{31} = 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (extu esp<32>{0,3} 5){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (16<33> + (extu esp<32> 33)){32};
 7: esp<32> := res32<32>;
 8: goto (00100414, 0) 


# -- 00100414 89 c1                                  mov ecx, eax
 0: ecx<32> := eax<32>;
 1: goto (00100416, 0) 


# -- 00100416 0f b7 d0                               movzx edx, ax
 0: edx<32> := (extu eax<32>{0,15} 32);
 1: goto (00100419, 0) 


# -- 00100419 31 c0                                  xor eax, eax
 0: res32<32> := 0<32>;
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: eax<32> := res32<32>;
 8: goto (0010041b, 0) 


# -- 0010041b 66 31 c9                               xor cx, cx
 0: res16<16> := 0<16>;
 1: OF<1> := 0<1>;
 2: SF<1> := (res16<16> <s 0<16>);
 3: ZF<1> := (res16<16> = 0<16>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res16<16>{0} ^ res16<16>{1}) ^ res16<16>{2}) ^ res16<16>{3}) ^
          res16<16>{4}) ^ res16<16>{5}) ^ res16<16>{6}) ^ res16<16>{7}));
 6: CF<1> := 0<1>;
 7: ecx<32>{0, 15} := res16<16>;
 8: goto (0010041e, 0) 


# -- 0010041e 81 ca 00 00 08 00                      or edx, 0x80000
 0: res32<32> := (0x00080000 | edx<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: edx<32> := res32<32>;
 8: goto (00100424, 0) 


# -- 00100424 80 cd 8e                               or ch, 0xffffff8e
 0: res8<8> := (-114<8> | ecx<32>{8,15});
 1: OF<1> := 0<1>;
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := 0<1>;
 7: ecx<32>{8, 15} := res8<8>;
 8: goto (00100427, 0) 


# -- 00100427 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (0010042e, 0) 


# -- 0010042e 66 90                                  nop
 0: goto (00100430, 0) 


# -- 00100430 89 14 c5 80 20 10 00                   mov [8 * eax + 0x102080], edx
 0: @[(ds_base<32> + (0x00102080 + (8<32> * eax<32>))),4] := edx<32>;
 1: goto (00100437, 0) 


# -- 00100437 89 0c c5 84 20 10 00                   mov [8 * eax + 0x102084], ecx
 0: @[(ds_base<32> + (0x00102084 + (8<32> * eax<32>))),4] := ecx<32>;
 1: goto (0010043e, 0) 


# -- 0010043e 83 c0 01                               add eax, 0x1
 0: res32<32> := (1<32> + eax<32>);
 1: OF<1> := ((eax<32>{31} = 0<1>) & (eax<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (1<5> + (extu eax<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (1<33> + (extu eax<32> 33)){32};
 7: eax<32> := res32<32>;
 8: goto (00100441, 0) 


# -- 00100441 3d 00 01 00 00                         cmp eax, 0x100
 0: res32<32> := (eax<32> - 256<32>);
 1: OF<1> := ((eax<32>{31} != 0<1>) & (eax<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (eax<32>{0,3} <u 0<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (eax<32> <u 256<32>);
 7: goto (00100446, 0) 


# -- 00100446 75 e8                                  jnz 0x100430
 0: if ! (ZF<1>) goto (00100430, 0) else goto 1
 1: goto (00100448, 0) 


# -- 00100448 b8 80 02 10 00                         mov eax, 0x100280
 0: eax<32> := 0x00100280;
 1: goto (0010044d, 0) 


# -- 0010044d c7 44 24 0a 80 20 10 00                mov [esp + 0xa], 0x102080
 0: @[(ss_base<32> + (10<32> + esp<32>)),4] := 0x00102080;
 1: goto (00100455, 0) 


# -- 00100455 89 c2                                  mov edx, eax
 0: edx<32> := eax<32>;
 1: goto (00100457, 0) 


# -- 00100457 0f b7 c0                               movzx eax, ax
 0: eax<32> := (extu eax<32>{0,15} 32);
 1: goto (0010045a, 0) 


# -- 0010045a 0d 00 00 08 00                         or eax, 0x80000
 0: res32<32> := (0x00080000 | eax<32>);
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: eax<32> := res32<32>;
 8: goto (0010045f, 0) 


# -- 0010045f 66 31 d2                               xor dx, dx
 0: res16<16> := 0<16>;
 1: OF<1> := 0<1>;
 2: SF<1> := (res16<16> <s 0<16>);
 3: ZF<1> := (res16<16> = 0<16>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res16<16>{0} ^ res16<16>{1}) ^ res16<16>{2}) ^ res16<16>{3}) ^
          res16<16>{4}) ^ res16<16>{5}) ^ res16<16>{6}) ^ res16<16>{7}));
 6: CF<1> := 0<1>;
 7: edx<32>{0, 15} := res16<16>;
 8: goto (00100462, 0) 


# -- 00100462 a3 b8 21 10 00                         mov [0x1021b8], eax
 0: @[(0x001021b8 + ds_base<32>),4] := eax<32>;
 1: goto (00100467, 0) 


# -- 00100467 89 d0                                  mov eax, edx
 0: eax<32> := edx<32>;
 1: goto (00100469, 0) 


# -- 00100469 80 cc ee                               or ah, 0xffffffee
 0: res8<8> := (-18<8> | eax<32>{8,15});
 1: OF<1> := 0<1>;
 2: SF<1> := (res8<8> <s 0<8>);
 3: ZF<1> := (res8<8> = 0<8>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res8<8>{0} ^ res8<8>{1}) ^ res8<8>{2}) ^ res8<8>{3}) ^
          res8<8>{4}) ^ res8<8>{5}) ^ res8<8>{6}) ^ res8<8>{7}));
 6: CF<1> := 0<1>;
 7: eax<32>{8, 15} := res8<8>;
 8: goto (0010046c, 0) 


# -- 0010046c a3 bc 21 10 00                         mov [0x1021bc], eax
 0: @[(0x001021bc + ds_base<32>),4] := eax<32>;
 1: goto (00100471, 0) 


# -- 00100471 b8 00 08 00 00                         mov eax, 0x800
 0: eax<32> := 2048<32>;
 1: goto (00100476, 0) 


# -- 00100476 66 89 44 24 08                         mov [esp + 0x8], ax
 0: @[(ss_base<32> + (8<32> + esp<32>)),2] := eax<32>{0,15};
 1: goto (0010047b, 0) 


# -- 0010047b 0f 01 5c 24 08                         lidt [esp + 0x8]
 0: idt<32> := @[(ss_base<32> + (10<32> + esp<32>)),4];
 1: goto (00100480, 0) 


# -- 00100480 83 ec 0c                               sub esp, 0xc
 0: res32<32> := (esp<32> - 12<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u -4<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 12<32>);
 7: esp<32> := res32<32>;
 8: goto (00100483, 0) 


# -- 00100483 68 67 09 10 00                         push 0x100967
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x00100967;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100488, 0) 


# -- 00100488 e8 23 fd ff ff                         call 0x1001b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x0010048d;
 2: goto (001001b0, 0) #call with return address @ (0010048d, 0)


# -- 0010048d e8 fe 00 00 00                         call 0x100590
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x00100492;
 2: goto (00100590, 0) #call with return address @ (00100492, 0)


# -- 00100492 83 c4 2c                               add esp, 0x2c
 0: res32<32> := (44<32> + esp<32>);
 1: OF<1> := ((esp<32>{31} = 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (12<5> + (extu esp<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (44<33> + (extu esp<32> 33)){32};
 7: esp<32> := res32<32>;
 8: goto (00100495, 0) 


# -- 00100495 c3                                     ret
 0: esp<32> := (4<32> + esp<32>);
 1: goto @[(ss_base<32> + (esp<32> - 4<32>)),4] #return


# -- 00100496 66 90                                  nop
 0: goto (00100498, 0) 


# -- 00100498 66 90                                  nop
 0: goto (0010049a, 0) 


# -- 0010049a 66 90                                  nop
 0: goto (0010049c, 0) 


# -- 0010049c 66 90                                  nop
 0: goto (0010049e, 0) 


# -- 0010049e 66 90                                  nop
 0: goto (001004a0, 0) 


# -- 001004a0 56                                     push esi
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := esi<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001004a1, 0) 


# -- 001004a1 be 11 00 00 00                         mov esi, 0x11
 0: esi<32> := 17<32>;
 1: goto (001004a6, 0) 


# -- 001004a6 53                                     push ebx
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ebx<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001004a7, 0) 


# -- 001004a7 31 db                                  xor ebx, ebx
 0: res32<32> := 0<32>;
 1: OF<1> := 0<1>;
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := 0<1>;
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := 0<1>;
 7: ebx<32> := res32<32>;
 8: goto (001004a9, 0) 


# -- 001004a9 83 ec 04                               sub esp, 0x4
 0: res32<32> := (esp<32> - 4<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u 4<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 4<32>);
 7: esp<32> := res32<32>;
 8: goto (001004ac, 0) 


# -- 001004ac 83 ec 0c                               sub esp, 0xc
 0: res32<32> := (esp<32> - 12<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u -4<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 12<32>);
 7: esp<32> := res32<32>;
 8: goto (001004af, 0) 


# -- 001004af 68 7f 09 10 00                         push 0x10097f
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x0010097f;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001004b4, 0) 


# -- 001004b4 e8 f7 fc ff ff                         call 0x1001b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x001004b9;
 2: goto (001001b0, 0) #call with return address @ (001004b9, 0)


# -- 001004b9 89 1c 24                               mov [esp], ebx
 0: @[(ss_base<32> + esp<32>),4] := ebx<32>;
 1: goto (001004bc, 0) 


# -- 001004bc e8 7f fd ff ff                         call 0x100240
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x001004c1;
 2: goto (00100240, 0) #call with return address @ (001004c1, 0)


# -- 001004c1 c7 04 24 7d 09 10 00                   mov [esp], 0x10097d
 0: @[(ss_base<32> + esp<32>),4] := 0x0010097d;
 1: goto (001004c8, 0) 


# -- 001004c8 e8 e3 fc ff ff                         call 0x1001b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x001004cd;
 2: goto (001001b0, 0) #call with return address @ (001004cd, 0)


# -- 001004cd 89 f2                                  mov edx, esi
 0: edx<32> := esi<32>;
 1: goto (001004cf, 0) 


# -- 001004cf cd 27                                  unsupported int 39
 0: #unsupported cd 27


# -- 001004d1 83 c3 01                               add ebx, 0x1
 0: res32<32> := (1<32> + ebx<32>);
 1: OF<1> := ((ebx<32>{31} = 0<1>) & (ebx<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (1<5> + (extu ebx<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (1<33> + (extu ebx<32> 33)){32};
 7: ebx<32> := res32<32>;
 8: goto (001004d4, 0) 


# -- 001004d4 c7 04 24 96 09 10 00                   mov [esp], 0x100996
 0: @[(ss_base<32> + esp<32>),4] := 0x00100996;
 1: goto (001004db, 0) 


# -- 001004db e8 d0 fc ff ff                         call 0x1001b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x001004e0;
 2: goto (001001b0, 0) #call with return address @ (001004e0, 0)


# -- 001004e0 83 c4 10                               add esp, 0x10
 0: res32<32> := (16<32> + esp<32>);
 1: OF<1> := ((esp<32>{31} = 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (extu esp<32>{0,3} 5){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (16<33> + (extu esp<32> 33)){32};
 7: esp<32> := res32<32>;
 8: goto (001004e3, 0) 


# -- 001004e3 83 fb 03                               cmp ebx, 0x3
 0: res32<32> := (ebx<32> - 3<32>);
 1: OF<1> := ((ebx<32>{31} != 0<1>) & (ebx<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (ebx<32>{0,3} <u 3<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (ebx<32> <u 3<32>);
 7: goto (001004e6, 0) 


# -- 001004e6 75 c4                                  jnz 0x1004ac
 0: if ! (ZF<1>) goto (001004ac, 0) else goto 1
 1: goto (001004e8, 0) 


# -- 001004e8 eb fe                                  jmp 0x1004e8
 0: goto (001004e8, 0) 


# -- 001004ea 8d b6 00 00 00 00                      lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (001004f0, 0) 


# -- 001004f0 56                                     push esi
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := esi<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001004f1, 0) 


# -- 001004f1 be 11 00 00 00                         mov esi, 0x11
 0: esi<32> := 17<32>;
 1: goto (001004f6, 0) 


# -- 001004f6 53                                     push ebx
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ebx<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001004f7, 0) 


# -- 001004f7 bb 10 00 00 00                         mov ebx, 0x10
 0: ebx<32> := 16<32>;
 1: goto (001004fc, 0) 


# -- 001004fc 83 ec 04                               sub esp, 0x4
 0: res32<32> := (esp<32> - 4<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u 4<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 4<32>);
 7: esp<32> := res32<32>;
 8: goto (001004ff, 0) 


# -- 001004ff 83 ec 0c                               sub esp, 0xc
 0: res32<32> := (esp<32> - 12<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u -4<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 12<32>);
 7: esp<32> := res32<32>;
 8: goto (00100502, 0) 


# -- 00100502 68 9b 09 10 00                         push 0x10099b
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x0010099b;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100507, 0) 


# -- 00100507 e8 a4 fc ff ff                         call 0x1001b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x0010050c;
 2: goto (001001b0, 0) #call with return address @ (0010050c, 0)


# -- 0010050c 89 1c 24                               mov [esp], ebx
 0: @[(ss_base<32> + esp<32>),4] := ebx<32>;
 1: goto (0010050f, 0) 


# -- 0010050f e8 2c fd ff ff                         call 0x100240
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x00100514;
 2: goto (00100240, 0) #call with return address @ (00100514, 0)


# -- 00100514 c7 04 24 7d 09 10 00                   mov [esp], 0x10097d
 0: @[(ss_base<32> + esp<32>),4] := 0x0010097d;
 1: goto (0010051b, 0) 


# -- 0010051b e8 90 fc ff ff                         call 0x1001b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x00100520;
 2: goto (001001b0, 0) #call with return address @ (00100520, 0)


# -- 00100520 89 f2                                  mov edx, esi
 0: edx<32> := esi<32>;
 1: goto (00100522, 0) 


# -- 00100522 cd 27                                  unsupported int 39
 0: #unsupported cd 27


# -- 00100524 83 c3 01                               add ebx, 0x1
 0: res32<32> := (1<32> + ebx<32>);
 1: OF<1> := ((ebx<32>{31} = 0<1>) & (ebx<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (1<5> + (extu ebx<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (1<33> + (extu ebx<32> 33)){32};
 7: ebx<32> := res32<32>;
 8: goto (00100527, 0) 


# -- 00100527 c7 04 24 96 09 10 00                   mov [esp], 0x100996
 0: @[(ss_base<32> + esp<32>),4] := 0x00100996;
 1: goto (0010052e, 0) 


# -- 0010052e e8 7d fc ff ff                         call 0x1001b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x00100533;
 2: goto (001001b0, 0) #call with return address @ (00100533, 0)


# -- 00100533 83 c4 10                               add esp, 0x10
 0: res32<32> := (16<32> + esp<32>);
 1: OF<1> := ((esp<32>{31} = 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (extu esp<32>{0,3} 5){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (16<33> + (extu esp<32> 33)){32};
 7: esp<32> := res32<32>;
 8: goto (00100536, 0) 


# -- 00100536 83 fb 13                               cmp ebx, 0x13
 0: res32<32> := (ebx<32> - 19<32>);
 1: OF<1> := ((ebx<32>{31} != 0<1>) & (ebx<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (ebx<32>{0,3} <u 3<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (ebx<32> <u 19<32>);
 7: goto (00100539, 0) 


# -- 00100539 75 c4                                  jnz 0x1004ff
 0: if ! (ZF<1>) goto (001004ff, 0) else goto 1
 1: goto (0010053b, 0) 


# -- 0010053b eb fe                                  jmp 0x10053b
 0: goto (0010053b, 0) 


# -- 0010053d 8d 76 00                               lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (00100540, 0) 


# -- 00100540 56                                     push esi
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := esi<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100541, 0) 


# -- 00100541 89 d6                                  mov esi, edx
 0: esi<32> := edx<32>;
 1: goto (00100543, 0) 


# -- 00100543 53                                     push ebx
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := ebx<32>;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100544, 0) 


# -- 00100544 89 cb                                  mov ebx, ecx
 0: ebx<32> := ecx<32>;
 1: goto (00100546, 0) 


# -- 00100546 83 ec 10                               sub esp, 0x10
 0: res32<32> := (esp<32> - 16<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u 0<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 16<32>);
 7: esp<32> := res32<32>;
 8: goto (00100549, 0) 


# -- 00100549 68 b2 09 10 00                         push 0x1009b2
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x001009b2;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (0010054e, 0) 


# -- 0010054e e8 5d fc ff ff                         call 0x1001b0
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x00100553;
 2: goto (001001b0, 0) #call with return address @ (00100553, 0)


# -- 00100553 89 34 24                               mov [esp], esi
 0: @[(ss_base<32> + esp<32>),4] := esi<32>;
 1: goto (00100556, 0) 


# -- 00100556 e8 e5 fc ff ff                         call 0x100240
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x0010055b;
 2: goto (00100240, 0) #call with return address @ (0010055b, 0)


# -- 0010055b 83 c4 10                               add esp, 0x10
 0: res32<32> := (16<32> + esp<32>);
 1: OF<1> := ((esp<32>{31} = 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (extu esp<32>{0,3} 5){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (16<33> + (extu esp<32> 33)){32};
 7: esp<32> := res32<32>;
 8: goto (0010055e, 0) 


# -- 0010055e 81 fb 00 20 10 00                      cmp ebx, 0x102000
 0: res32<32> := (ebx<32> - 0x00102000);
 1: OF<1> := ((ebx<32>{31} != 0<1>) & (ebx<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (ebx<32>{0,3} <u 0<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (ebx<32> <u 0x00102000);
 7: goto (00100564, 0) 


# -- 00100564 74 0d                                  jz 0x100573
 0: if ZF<1> goto (00100573, 0) else goto 1
 1: goto (00100566, 0) 


# -- 00100566 83 ec 0c                               sub esp, 0xc
 0: res32<32> := (esp<32> - 12<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u -4<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 12<32>);
 7: esp<32> := res32<32>;
 8: goto (00100569, 0) 


# -- 00100569 68 00 20 10 00                         push 0x102000
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x00102000;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (0010056e, 0) 


# -- 0010056e e8 9d fd ff ff                         call 0x100310
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x00100573;
 2: goto (00100310, 0) #call with return address @ (00100573, 0)


# -- 00100573 83 ec 0c                               sub esp, 0xc
 0: res32<32> := (esp<32> - 12<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u -4<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 12<32>);
 7: esp<32> := res32<32>;
 8: goto (00100576, 0) 


# -- 00100576 68 40 20 10 00                         push 0x102040
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x00102040;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (0010057b, 0) 


# -- 0010057b e8 90 fd ff ff                         call 0x100310
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x00100580;
 2: goto (00100310, 0) #call with return address @ (00100580, 0)


# -- 00100580 e9 ab fd ff ff                         jmp 0x100330
 0: goto (00100330, 0) 


# -- 00100585 8d b4 26 00 00 00 00                   lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (0010058c, 0) 


# -- 0010058c 8d 74 26 00                            lea esi, [esi]
 0: esi<32> := (ds_base<32> + esi<32>);
 1: goto (00100590, 0) 


# -- 00100590 83 ec 10                               sub esp, 0x10
 0: res32<32> := (esp<32> - 16<32>);
 1: OF<1> := ((esp<32>{31} != 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (esp<32>{0,3} <u 0<4>);
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (esp<32> <u 16<32>);
 7: esp<32> := res32<32>;
 8: goto (00100593, 0) 


# -- 00100593 68 a0 04 10 00                         push 0x1004a0
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x001004a0;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (00100598, 0) 


# -- 00100598 68 ec 34 10 00                         push 0x1034ec
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x001034ec;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (0010059d, 0) 


# -- 0010059d 68 00 20 10 00                         push 0x102000
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x00102000;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001005a2, 0) 


# -- 001005a2 e8 89 fd ff ff                         call 0x100330
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x001005a7;
 2: goto (00100330, 0) #call with return address @ (001005a7, 0)


# -- 001005a7 83 c4 0c                               add esp, 0xc
 0: res32<32> := (12<32> + esp<32>);
 1: OF<1> := ((esp<32>{31} = 0<1>) & (esp<32>{31} != res32<32>{31}));
 2: SF<1> := (res32<32> <s 0<32>);
 3: ZF<1> := (res32<32> = 0<32>);
 4: AF<1> := (12<5> + (extu esp<32>{0,3} 5)){4};
 5: PF<1> :=
     !
     ((((((((res32<32>{0} ^ res32<32>{1}) ^ res32<32>{2}) ^ res32<32>{3}) ^
          res32<32>{4}) ^ res32<32>{5}) ^ res32<32>{6}) ^ res32<32>{7}));
 6: CF<1> := (12<33> + (extu esp<32> 33)){32};
 7: esp<32> := res32<32>;
 8: goto (001005aa, 0) 


# -- 001005aa 68 f0 04 10 00                         push 0x1004f0
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x001004f0;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001005af, 0) 


# -- 001005af 68 ec 30 10 00                         push 0x1030ec
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x001030ec;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001005b4, 0) 


# -- 001005b4 68 40 20 10 00                         push 0x102040
 0: @[(ss_base<32> + (esp<32> - 4<32>)),4] := 0x00102040;
 1: esp<32> := (esp<32> - 4<32>);
 2: goto (001005b9, 0) 


# -- 001005b9 e8 72 fd ff ff                         call 0x100330
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x001005be;
 2: goto (00100330, 0) #call with return address @ (001005be, 0)


# -- 001005be c7 04 24 00 20 10 00                   mov [esp], 0x102000
 0: @[(ss_base<32> + esp<32>),4] := 0x00102000;
 1: goto (001005c5, 0) 


# -- 001005c5 e8 46 fd ff ff                         call 0x100310
 0: esp<32> := (esp<32> - 4<32>);
 1: @[(ss_base<32> + esp<32>),4] := 0x001005ca;
 2: goto (00100310, 0) #call with return address @ (001005ca, 0)


# -- 001005ca                                        unsupported
 0: OK


