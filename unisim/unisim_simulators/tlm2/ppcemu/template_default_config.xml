<?xml version="1.0" encoding="UTF-8"?>
<variables>
	<object name="cpu">
		<variable name="cpu-cycle-time">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>3333</value>
			<description>CPU cycle time in picoseconds</description>
		</variable>
		<variable name="voltage">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>1300</value>
			<description>CPU voltage in mV</description>
		</variable>
		<variable name="max-inst">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>18446744073709551615</value>
			<description>maximum number of instructions to simulate</description>
		</variable>
		<variable name="verbose-all">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>globally enable/disable verbosity</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-setup">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity while setup</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-step">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when simulating an instruction</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-dtlb">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when accessing data translation lookahead buffer</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-itlb">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when accessing instruction translation lookahead buffer</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-dl1">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when accessing L1 data cache</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-il1">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when accessing L1 instruction cache</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-l2">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when accessing L2 unified cache</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-load">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when simulating a load</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-store">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when simulating a store</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-read-memory">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when reading memory for a debug purpose</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-write-memory">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when writing memory for a debug purpose</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-exception">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when handling exceptions</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-set-msr">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when setting MSR</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-set-hid0">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when setting HID0</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-set-hid1">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when setting HID1</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-set-hid2">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when setting HID2</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="verbose-set-l2cr">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity when setting L2CR</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="enable-linux-printk-snooping">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable linux printk buffer snooping</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="enable-linux-syscall-snooping">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable linux syscall snooping</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="trap-on-instruction-counter">
			<type>parameter</type>
			<data_type>unsigned 64-bit integer</data_type>
			<value>18446744073709551615</value>
			<description>number of simulated instruction before traping</description>
		</variable>
		<variable name="halt-on">
			<type>parameter</type>
			<data_type>string</data_type>
			<value></value>
			<description>Symbol or address where to stop simulation</description>
		</variable>
		<variable name="bus-cycle-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>13333 ps</value>
			<description>bus cycle time</description>
		</variable>
		<variable name="nice-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>1 ms</value>
			<description>maximum time between synchonizations</description>
		</variable>
		<variable name="ipc">
			<type>parameter</type>
			<data_type>double precision floating-point</data_type>
			<value>1</value>
			<description>targeted average instructions per second</description>
		</variable>
	</object>
	<object name="debugger">
		<variable name="verbose">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>Enable/Disable verbosity</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="dwarf-to-html-output-directory">
			<type>parameter</type>
			<data_type>string</data_type>
			<value></value>
			<description>DWARF v2/v3 to HTML output directory</description>
		</variable>
		<variable name="dwarf-register-number-mapping-filename">
			<type>parameter</type>
			<data_type>string</data_type>
			<value>powerpc_eabi_gcc_dwarf_register_number_mapping.xml</value>
			<description>DWARF register number mapping filename</description>
		</variable>
		<variable name="parse-dwarf">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>Enable/Disable parsing of DWARF debugging informations</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<object name="linux-os">
		<variable name="verbose">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description></description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="system">
			<type>parameter</type>
			<data_type>string</data_type>
			<value>powerpc</value>
			<description>Emulated system architecture available values are &quot;arm&quot;, &quot;arm-eabi&quot; and &quot;powerpc&quot;</description>
		</variable>
		<variable name="endianness">
			<type>parameter</type>
			<data_type>endianess</data_type>
			<value>big-endian</value>
			<description>The endianness of the binary loaded. Available values are: little-endian and big-endian.</description>
			<enumeration>
				<item>little-endian</item>
				<item>big-endian</item>
			</enumeration>
		</variable>
		<variable name="memory-page-size">
			<type>parameter</type>
			<data_type>unsigned 32-bit integer</data_type>
			<value>0x00001000</value>
			<description></description>
		</variable>
		<variable name="stack-base">
			<type>parameter</type>
			<data_type>unsigned 32-bit integer</data_type>
			<value>0xc0000000</value>
			<description>The stack base address used for the load and execution of the linux application</description>
		</variable>
		<variable name="binary">
			<type>parameter</type>
			<data_type>string</data_type>
			<value></value>
			<description>The binary to execute on the target simulator. Usually it is the same value than the argv[1] parameter.</description>
		</variable>
		<variable name="argc">
			<type>parameter</type>
			<data_type>unsigned 32-bit integer</data_type>
			<value>0</value>
			<description>Number of commands in the program execution line (usually at least one which is the name of the program executed). The different tokens can be set up with the parameters argv[&lt;n&gt;] where &lt;n&gt; can go up to argc - 1.</description>
		</variable>
		<variable name="apply-host-environment">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>Wether to apply the host environment on the target simulator or use the provided envc and envp.</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
		<variable name="envc">
			<type>parameter</type>
			<data_type>unsigned 32-bit integer</data_type>
			<value>0x00000000</value>
			<description>Number of environment variables defined for the program execution. The different variables can be set up with the parameters envp[&lt;n&gt;] where &lt;n&gt; can go up to envc - 1.</description>
		</variable>
		<variable name="utsname-sysname">
			<type>parameter</type>
			<data_type>string</data_type>
			<value>Linux</value>
			<description>The value that the uname system call should return. As this service is providing linux emulation supoort its value should be 'Linux', so you should not modify it.</description>
		</variable>
		<variable name="utsname-nodename">
			<type>parameter</type>
			<data_type>string</data_type>
			<value>localhost</value>
			<description>The network node hostname that the uname system call should return. Default value is localhost, but you could write whatever name you want.</description>
		</variable>
		<variable name="utsname-release">
			<type>parameter</type>
			<data_type>string</data_type>
			<value>2.6.31.14</value>
			<description>The kernel realese information that the uname system call should return. This should usually match the linux-kernel parameter.</description>
		</variable>
		<variable name="utsname-version">
			<type>parameter</type>
			<data_type>string</data_type>
			<value>#UNISIM SMP Fri Mar 12 05:23:09 UTC 2010</value>
			<description>The kernel version information that the uname system call should return.</description>
		</variable>
		<variable name="utsname-machine">
			<type>parameter</type>
			<data_type>string</data_type>
			<value>powerpc</value>
			<description>The machine information that the uname system call should  return. This should be one of the supported architectures (the  system parameter, that is, arm or powerpc) or a specific model  derived from it (i.e., arm926ejs).</description>
		</variable>
		<variable name="utsname-domainname">
			<type>parameter</type>
			<data_type>string</data_type>
			<value>localhost</value>
			<description>The domain name information that the uname system call should return.</description>
		</variable>
	</object>
	<object name="memory">
		<variable name="org">
			<type>parameter</type>
			<data_type>unsigned 32-bit integer</data_type>
			<value>0x00000000</value>
			<description>memory origin/base address</description>
		</variable>
		<variable name="bytesize">
			<type>parameter</type>
			<data_type>unsigned 32-bit integer</data_type>
			<value>4294967295</value>
			<description>memory size in bytes</description>
		</variable>
		<variable name="initial-byte-value">
			<type>parameter</type>
			<data_type>unsigned 8-bit integer</data_type>
			<value>0x00</value>
			<description></description>
		</variable>
		<variable name="cycle-time">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>13333 ps</value>
			<description>memory cycle time</description>
		</variable>
		<variable name="read-latency">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>13333 ps</value>
			<description>memory read latency</description>
		</variable>
		<variable name="write-latency">
			<type>parameter</type>
			<data_type>sc_time</data_type>
			<value>0 s</value>
			<description>memory write latency</description>
		</variable>
		<variable name="verbose">
			<type>parameter</type>
			<data_type>boolean</data_type>
			<value>false</value>
			<description>enable/disable verbosity</description>
			<enumeration>
				<item>true</item>
				<item>false</item>
			</enumeration>
		</variable>
	</object>
	<variable name="enable-gdb-server">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Enable/Disable GDB server instantiation</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="enable-inline-debugger">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Enable/Disable inline debugger instantiation</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="enable-press-enter-at-exit">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Enable/Disable pressing key enter at exit</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="estimate-power">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Enable/Disable power estimators instantiation</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.file">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Keep logger output in a file</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.filename">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>logger_output.txt</value>
		<description>Filename to keep logger output _(the option file must be activated)</description>
	</variable>
	<variable name="kernel_logger.std_err">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>true</value>
		<description>Show logger output through the standard error output</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.std_err_color">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Colorize logger output through the standard error output _(only works if std_err is active)</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.std_out">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Show logger output through the standard output</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.std_out_color">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Colorize logger output through the standard output _(only works if std_out is active)</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.xml_file">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>Keep logger output in a file xml formatted</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.xml_file_gzipped">
		<type>parameter</type>
		<data_type>boolean</data_type>
		<value>false</value>
		<description>If the xml_file option is active, the output file will be compressed (a .gz extension will be automatically added to the xml_filename option</description>
		<enumeration>
			<item>true</item>
			<item>false</item>
		</enumeration>
	</variable>
	<variable name="kernel_logger.xml_filename">
		<type>parameter</type>
		<data_type>string</data_type>
		<value>logger_output.xml</value>
		<description>Filename to keep logger xml output _(the option xml_file must be activated)</description>
	</variable>
</variables>
