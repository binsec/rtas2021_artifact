op abs_dd( 0b0101111011100000101110[22] : rn[5] : rd[5] );
abs_dd.var format : {char const*} = {"2178"};

abs_dd.disasm = {
  sink << "abs\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op abs_v16b16b( 0b0100111000100000101110[22] : rn[5] : rd[5] );
abs_v16b16b.var format : {char const*} = {"2325"};

abs_v16b16b.disasm = {
  sink << "abs\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op abs_v2d2d( 0b0100111011100000101110[22] : rn[5] : rd[5] );
abs_v2d2d.var format : {char const*} = {"2356"};

abs_v2d2d.disasm = {
  sink << "abs\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op abs_v2s2s( 0b0000111010100000101110[22] : rn[5] : rd[5] );
abs_v2s2s.var format : {char const*} = {"2410"};

abs_v2s2s.disasm = {
  sink << "abs\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op abs_v4h4h( 0b0000111001100000101110[22] : rn[5] : rd[5] );
abs_v4h4h.var format : {char const*} = {"2459"};

abs_v4h4h.disasm = {
  sink << "abs\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1);
};

op abs_v4s4s( 0b0100111010100000101110[22] : rn[5] : rd[5] );
abs_v4s4s.var format : {char const*} = {"2491"};

abs_v4s4s.disasm = {
  sink << "abs\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op abs_v8b8b( 0b0000111000100000101110[22] : rn[5] : rd[5] );
abs_v8b8b.var format : {char const*} = {"2544"};

abs_v8b8b.disasm = {
  sink << "abs\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
};

op abs_v8hv8h( 0b0100111001100000101110[22] : rn[5] : rd[5] );
abs_v8hv8h.var format : {char const*} = {"2577"};

abs_v8hv8h.disasm = {
  sink << "abs\t" << DisasmTV(rd,8,1) <<  ", " << DisasmTV(rn,8,1);
};

/*******************************************************************
 * ADD (vector)
 */

op add_v8b( 0b00001110001[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
add_v8b.var format : {char const*} = {"1297"};

add_v8b.disasm = {
  sink << "add\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

add_v8b.execute = {
  for (unsigned idx = 0; idx < 8; ++idx)
    cpu.SetVU8(rd,idx,cpu.GetVU8(rn,idx) + cpu.GetVU8(rm,idx));
  cpu.ClearHighV(rd,8);
};

op add_v16b( 0b01001110001[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
add_v16b.var format : {char const*} = {"823"};

add_v16b.disasm = {
  sink << "add\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

add_v16b.execute = {
  for (unsigned idx = 0; idx < 16; ++idx)
    cpu.SetVU8(rd,idx,cpu.GetVU8(rn,idx) + cpu.GetVU8(rm,idx));
  cpu.ClearHighV(rd,16);
};

op add_v4h( 0b00001110011[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
add_v4h.var format : {char const*} = {"1095"};

add_v4h.disasm = {
  sink << "add\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

add_v4h.execute = {
  for (unsigned idx = 0; idx < 4; ++idx)
    cpu.SetVU16(rd,idx,cpu.GetVU16(rn,idx) + cpu.GetVU16(rm,idx));
  cpu.ClearHighV(rd,8);
};

op add_v8h( 0b01001110011[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
add_v8h.var format : {char const*} = {"1408"};

add_v8h.disasm = {
  sink << "add\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

add_v8h.execute = {
  for (unsigned idx = 0; idx < 8; ++idx)
    cpu.SetVU16(rd,idx,cpu.GetVU16(rn,idx) + cpu.GetVU16(rm,idx));
  cpu.ClearHighV(rd,16);
};

op add_v2s( 0b00001110101[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
add_v2s.var format : {char const*} = {"1021"};

add_v2s.disasm = {
  sink << "add\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

add_v2s.execute = {
  for (unsigned idx = 0; idx < 2; ++idx)
    cpu.SetVU32(rd,idx,cpu.GetVU32(rn,idx) + cpu.GetVU32(rm,idx));
  cpu.ClearHighV(rd,8);
};

op add_v4s( 0b01001110101[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
add_v4s.var format : {char const*} = {"1200"};

add_v4s.disasm = {
  sink << "add\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

add_v4s.execute = {
  for (unsigned idx = 0; idx < 2; ++idx)
    cpu.SetVU32(rd,idx,cpu.GetVU32(rn,idx) + cpu.GetVU32(rm,idx));
  cpu.ClearHighV(rd,16);
};

op add_ddd( 0b01011110111[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
add_ddd.var format : {char const*} = {"707"};

add_ddd.disasm = {
  sink << "add\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

add_ddd.execute = {
  cpu.SetVU64(rd,cpu.GetVU64(rn,0) + cpu.GetVU64(rm,0));
};

op add_v2d( 0b01001110111[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
add_v2d.var format : {char const*} = {"894"};

add_v2d.disasm = {
  sink << "add\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

add_v2d.execute = {
  for (unsigned idx = 0; idx < 2; ++idx)
    cpu.SetVU64(rd,idx,cpu.GetVU64(rn,idx) + cpu.GetVU64(rm,idx));
  cpu.ClearHighV(rd,16);
};

/*
 * end of ADD (vector)
 *******************************************************************/

op addhn2_v16bv8hv8h( 0b01001110001[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
addhn2_v16bv8hv8h.var format : {char const*} = {"880"};

addhn2_v16bv8hv8h.disasm = {
  sink << "addhn2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op addhn2_v4sv2dv2d( 0b01001110101[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
addhn2_v4sv2dv2d.var format : {char const*} = {"1157"};

addhn2_v4sv2dv2d.disasm = {
  sink << "addhn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op addhn2_v8hv4sv4s( 0b01001110011[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
addhn2_v8hv4sv4s.var format : {char const*} = {"1381"};

addhn2_v8hv4sv4s.disasm = {
  sink << "addhn2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op addhn_v2sv2dv2d( 0b00001110101[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
addhn_v2sv2dv2d.var format : {char const*} = {"999"};

addhn_v2sv2dv2d.disasm = {
  sink << "addhn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op addhn_v4hv4sv4s( 0b00001110011[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
addhn_v4hv4sv4s.var format : {char const*} = {"1145"};

addhn_v4hv4sv4s.disasm = {
  sink << "addhn\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op addhn_v8bv8hv8h( 0b00001110001[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
addhn_v8bv8hv8h.var format : {char const*} = {"1354"};

addhn_v8bv8hv8h.disasm = {
  sink << "addhn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

/*******************************************************************
 * ADDP (scalar)
 *
 * Add pair of elements (scalar)
 */

op addp_d( 0b0101111011110001101110[22] : rn[5] : rd[5] );
addp_d.var format : {char const*} = {"2222"};

addp_d.disasm = {
  sink << "addp\t" << DisasmD(rd) << ", " << DisasmTV(rn,2,3);
};

addp_d.execute = {
  cpu.SetVU64(rd,cpu.GetVU64(rn,0) + cpu.GetVU64(rn,1));
};

/*
 * end of ADDP (scalar)
 *******************************************************************/

/*******************************************************************
 * ADDP (vector)
 *
 * Add pairwise (vector)
 */

op addp_v8b( 0b00001110001[11] : rm[5] : 0b101111[6] : rn[5] : rd[5] );
addp_v8b.var format : {char const*} = {"1298"};

addp_v8b.disasm = {
  sink << "addp\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

addp_v8b.execute = {
  typename ARCH::U8 res[8];
  for (unsigned e=0; e < 4; e += 1) {
    res[e+0] = cpu.GetVU8(rn,2*e) + cpu.GetVU8(rn,2*e+1);
    res[e+4] = cpu.GetVU8(rm,2*e) + cpu.GetVU8(rm,2*e+1);
  }
  for (unsigned e=0; e < 8; e += 1)
    cpu.SetVU8(rd,e,res[e]);
  cpu.ClearHighV(rd,8);
};

op addp_v16b( 0b01001110001[11] : rm[5] : 0b101111[6] : rn[5] : rd[5] );
addp_v16b.var format : {char const*} = {"824"};

addp_v16b.disasm = {
  sink << "addp\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

addp_v16b.execute = {
  typename ARCH::U8 res[16];
  for (unsigned e=0; e < 8; e += 1) {
    res[e+0] = cpu.GetVU8(rn,2*e) + cpu.GetVU8(rn,2*e+1);
    res[e+8] = cpu.GetVU8(rm,2*e) + cpu.GetVU8(rm,2*e+1);
  }
  for (unsigned e=0; e < 16; e += 1)
    cpu.SetVU8(rd,e,res[e]);
  cpu.ClearHighV(rd,16);
};

op addp_v4h( 0b00001110011[11] : rm[5] : 0b101111[6] : rn[5] : rd[5] );
addp_v4h.var format : {char const*} = {"1096"};

addp_v4h.disasm = {
  sink << "addp\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

addp_v4h.execute = {
  typename ARCH::U16 res[4];
  for (unsigned e=0; e < 2; e += 1) {
    res[e+0] = cpu.GetVU16(rn,2*e) + cpu.GetVU16(rn,2*e+1);
    res[e+2] = cpu.GetVU16(rm,2*e) + cpu.GetVU16(rm,2*e+1);
  }
  for (unsigned e=0; e < 4; e += 1)
    cpu.SetVU16(rd,e,res[e]);
  cpu.ClearHighV(rd,8);
};

op addp_v8h( 0b01001110011[11] : rm[5] : 0b101111[6] : rn[5] : rd[5] );
addp_v8h.var format : {char const*} = {"1409"};

addp_v8h.disasm = {
  sink << "addp\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

addp_v8h.execute = {
  typename ARCH::U16 res[8];
  for (unsigned e=0; e < 4; e += 1) {
    res[e+0] = cpu.GetVU16(rn,2*e) + cpu.GetVU16(rn,2*e+1);
    res[e+4] = cpu.GetVU16(rm,2*e) + cpu.GetVU16(rm,2*e+1);
  }
  for (unsigned e=0; e < 8; e += 1)
    cpu.SetVU16(rd,e,res[e]);
  cpu.ClearHighV(rd,16);
};

op addp_v2s( 0b00001110101[11] : rm[5] : 0b101111[6] : rn[5] : rd[5] );
addp_v2s.var format : {char const*} = {"1022"};

addp_v2s.disasm = {
  sink << "addp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

addp_v2s.execute = {
  typename ARCH::U32 res[2];
  for (unsigned e=0; e < 1; e += 1) {
    res[e+0] = cpu.GetVU32(rn,2*e) + cpu.GetVU32(rn,2*e+1);
    res[e+1] = cpu.GetVU32(rm,2*e) + cpu.GetVU32(rm,2*e+1);
  }
  for (unsigned e=0; e < 2; e += 1)
    cpu.SetVU32(rd,e,res[e]);
  cpu.ClearHighV(rd,8);
};

op addp_v4s( 0b01001110101[11] : rm[5] : 0b101111[6] : rn[5] : rd[5] );
addp_v4s.var format : {char const*} = {"1201"};

addp_v4s.disasm = {
  sink << "addp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

addp_v4s.execute = {
  typename ARCH::U32 res[4];
  for (unsigned e=0; e < 2; e += 1) {
    res[e+0] = cpu.GetVU32(rn,2*e) + cpu.GetVU32(rn,2*e+1);
    res[e+2] = cpu.GetVU32(rm,2*e) + cpu.GetVU32(rm,2*e+1);
  }
  for (unsigned e=0; e < 4; e += 1)
    cpu.SetVU32(rd,e,res[e]);
  cpu.ClearHighV(rd,16);
};

op addp_v2d( 0b01001110111[11] : rm[5] : 0b101111[6] : rn[5] : rd[5] );
addp_v2d.var format : {char const*} = {"895"};

addp_v2d.disasm = {
  sink << "addp\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

addp_v2d.execute = {
  typename ARCH::U64 res[2];
  for (unsigned e=0; e < 1; e += 1) {
    res[e+0] = cpu.GetVU64(rn,2*e) + cpu.GetVU64(rn,2*e+1);
    res[e+1] = cpu.GetVU64(rm,2*e) + cpu.GetVU64(rm,2*e+1);
  }
  for (unsigned e=0; e < 2; e += 1)
    cpu.SetVU64(rd,e,res[e]);
  cpu.ClearHighV(rd,16);
};

/*
 * end of ADDP (vector)
 *******************************************************************/

op addv_bv16b( 0b0100111000110001101110[22] : rn[5] : rd[5] );
addv_bv16b.var format : {char const*} = {"2168"};

addv_bv16b.disasm = {
  sink << "addv\t" << DisasmB(rd) << ", " << DisasmTV(rn,16,0);
};

op addv_bv8b( 0b0000111000110001101110[22] : rn[5] : rd[5] );
addv_bv8b.var format : {char const*} = {"2173"};

addv_bv8b.disasm = {
  sink << "addv\t" << DisasmB(rd) << ", " << DisasmTV(rn,8,0);
};

op addv_hv4h( 0b0000111001110001101110[22] : rn[5] : rd[5] );
addv_hv4h.var format : {char const*} = {"2247"};

addv_hv4h.disasm = {
  sink << "addv\t" << DisasmH(rd) << ", " << DisasmTV(rn,4,1);
};

op addv_hv8h( 0b0100111001110001101110[22] : rn[5] : rd[5] );
addv_hv8h.var format : {char const*} = {"2254"};

addv_hv8h.disasm = {
  sink << "addv\t" << DisasmH(rd) << ", " << DisasmTV(rn,8,1);
};

op addv_sv4s( 0b0100111010110001101110[22] : rn[5] : rd[5] );
addv_sv4s.var format : {char const*} = {"2308"};

addv_sv4s.disasm = {
  sink << "addv\t" << DisasmS(rd) << ", " << DisasmTV(rn,4,2);
};

op aesd_v16b16b( 0b0100111000101000010110[22] : rn[5] : rd[5] );
aesd_v16b16b.var format : {char const*} = {"2326"};

aesd_v16b16b.disasm = {
  sink << "aesd\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op aese_v16b16b( 0b0100111000101000010010[22] : rn[5] : rd[5] );
aese_v16b16b.var format : {char const*} = {"2327"};

aese_v16b16b.disasm = {
  sink << "aese\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op aesimc_v16b16b( 0b0100111000101000011110[22] : rn[5] : rd[5] );
aesimc_v16b16b.var format : {char const*} = {"2328"};

aesimc_v16b16b.disasm = {
  sink << "aesimc\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op aesmc_v16b16b( 0b0100111000101000011010[22] : rn[5] : rd[5] );
aesmc_v16b16b.var format : {char const*} = {"2329"};

aesmc_v16b16b.disasm = {
  sink << "aesmc\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

/*******************************************************************
 * AND (vector)
 *
 * Bitwise AND (vector)
 */

op and_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
and_v8bv8bv8b.var format : {char const*} = {"1299"};

and_v8bv8bv8b.disasm = {
  sink << "and\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

and_v8bv8bv8b.execute = {
  for (unsigned idx = 0; idx < 8; ++idx)
    cpu.SetVU8(rd,idx,cpu.GetVU8(rn,idx) & cpu.GetVU8(rm,idx));
  cpu.ClearHighV(rd,8);
};

op and_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
and_v16bv16bv16b.var format : {char const*} = {"825"};

and_v16bv16bv16b.disasm = {
  sink << "and\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

and_v16bv16bv16b.execute = {
  for (unsigned idx = 0; idx < 16; ++idx)
    cpu.SetVU8(rd,idx,cpu.GetVU8(rn,idx) & cpu.GetVU8(rm,idx));
  cpu.ClearHighV(rd,16);
};

/*
 * end of AND (vector)
 *******************************************************************/

/*******************************************************************
 * BIC (vector, immediate)
 *
 * Bitwise bit clear (vector, immediate)
 */

op bic_v4hi( 0b0010111100000[13] : shl<5> imm1[3] : 0b10[2] : shl<3> sh[1] : 0b101[3] : imm0[5] : rd[5] );
bic_v4hi.var imm : {uint16_t} = {uint16_t(imm1|imm0) << sh}, format : {char const*} = {"1885"};

bic_v4hi.disasm = {
  sink << "bic\t" << DisasmTV(rd,4,1) << ", " << DisasmI(imm,16);
};

op bic_v8hi( 0b0110111100000[13] : shl<5> imm1[3] : 0b10[2] : shl<3> sh[1] : 0b101[3] : imm0[5] : rd[5] );
bic_v8hi.var imm : {uint16_t} = {uint16_t(imm1|imm0) << sh}, format : {char const*} = {"1889"};

bic_v8hi.disasm = {
  sink << "bic\t" << DisasmTV(rd,8,1) << ", " << DisasmI(imm,16);
};

op bic_v2si( 0b0010111100000[13] : shl<5> imm1[3] : 0b0[1] : shl<3> sh[2] : 0b101[3] : imm0[5] : rd[5] );
bic_v2si.var imm : {uint32_t} = {uint32_t(imm1|imm0) << sh}, format : {char const*} = {"1786"};

bic_v2si.disasm = {
  sink << "bic\t" << DisasmTV(rd,2,2) << ", " << DisasmI(imm,16);
};

op bic_v4si( 0b0110111100000[13] : shl<5> imm1[3] : 0b0[1] : shl<3> sh[2] : 0b101[3] : imm0[5] : rd[5] );
bic_v4si.var imm : {uint32_t} = {uint32_t(imm1|imm0) << sh}, format : {char const*} = {"1790"};

bic_v4si.disasm = {
  sink << "bic\t" << DisasmTV(rd,4,2) << ", " << DisasmI(imm,16);
};

/*
 * end of BIC (vector, immediate)
 *******************************************************************/

/*******************************************************************
 * BIC (vector, register)
 *
 * Bitwise bit clear (vector, register)
 */

op bic_v8bv8bv8b( 0b00001110011[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
bic_v8bv8bv8b.var format : {char const*} = {"1300"};

bic_v8bv8bv8b.disasm = {
  sink << "bic\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

bic_v8bv8bv8b.execute = {
  for (unsigned idx = 0; idx < 8; ++idx)
    cpu.SetVU8(rd,idx,cpu.GetVU8(rn,idx) & ~cpu.GetVU8(rm,idx));
  cpu.ClearHighV(rd,8);
};

op bic_v16bv16bv16b( 0b01001110011[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
bic_v16bv16bv16b.var format : {char const*} = {"826"};

bic_v16bv16bv16b.disasm = {
  sink << "bic\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

bic_v16bv16bv16b.execute = {
  for (unsigned idx = 0; idx < 16; ++idx)
    cpu.SetVU8(rd,idx,cpu.GetVU8(rn,idx) & ~cpu.GetVU8(rm,idx));
  cpu.ClearHighV(rd,16);
};

/*
 * end of BIC (vector, register)
 *******************************************************************/

op bif_v16bv16bv16b( 0b01101110111[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
bif_v16bv16bv16b.var format : {char const*} = {"827"};

bif_v16bv16bv16b.disasm = {
  sink << "bif\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op bif_v8bv8bv8b( 0b00101110111[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
bif_v8bv8bv8b.var format : {char const*} = {"1301"};

bif_v8bv8bv8b.disasm = {
  sink << "bif\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op bit_v16bv16bv16b( 0b01101110101[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
bit_v16bv16bv16b.var format : {char const*} = {"828"};

bit_v16bv16bv16b.disasm = {
  sink << "bit\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op bit_v8bv8bv8b( 0b00101110101[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
bit_v8bv8bv8b.var format : {char const*} = {"1302"};

bit_v8bv8bv8b.disasm = {
  sink << "bit\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op bsl_v16bv16bv16b( 0b01101110011[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
bsl_v16bv16bv16b.var format : {char const*} = {"829"};

bsl_v16bv16bv16b.disasm = {
  sink << "bsl\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op bsl_v8bv8bv8b( 0b00101110011[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
bsl_v8bv8bv8b.var format : {char const*} = {"1303"};

bsl_v8bv8bv8b.disasm = {
  sink << "bsl\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op cls_v16b16b( 0b0100111000100000010010[22] : rn[5] : rd[5] );
cls_v16b16b.var format : {char const*} = {"2330"};

cls_v16b16b.disasm = {
  sink << "cls\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op cls_v2s2s( 0b0000111010100000010010[22] : rn[5] : rd[5] );
cls_v2s2s.var format : {char const*} = {"2411"};

cls_v2s2s.disasm = {
  sink << "cls\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op cls_v4h4h( 0b0000111001100000010010[22] : rn[5] : rd[5] );
cls_v4h4h.var format : {char const*} = {"2460"};

cls_v4h4h.disasm = {
  sink << "cls\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1);
};

op cls_v4s4s( 0b0100111010100000010010[22] : rn[5] : rd[5] );
cls_v4s4s.var format : {char const*} = {"2492"};

cls_v4s4s.disasm = {
  sink << "cls\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op cls_v8b8b( 0b0000111000100000010010[22] : rn[5] : rd[5] );
cls_v8b8b.var format : {char const*} = {"2545"};

cls_v8b8b.disasm = {
  sink << "cls\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
};

op cls_v8hv8h( 0b0100111001100000010010[22] : rn[5] : rd[5] );
cls_v8hv8h.var format : {char const*} = {"2578"};

cls_v8hv8h.disasm = {
  sink << "cls\t" << DisasmTV(rd,8,1) <<  ", " << DisasmTV(rn,8,1);
};

op clz_v16b16b( 0b0110111000100000010010[22] : rn[5] : rd[5] );
clz_v16b16b.var format : {char const*} = {"2331"};

clz_v16b16b.disasm = {
  sink << "clz\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op clz_v2s2s( 0b0010111010100000010010[22] : rn[5] : rd[5] );
clz_v2s2s.var format : {char const*} = {"2412"};

clz_v2s2s.disasm = {
  sink << "clz\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op clz_v4h4h( 0b0010111001100000010010[22] : rn[5] : rd[5] );
clz_v4h4h.var format : {char const*} = {"2461"};

clz_v4h4h.disasm = {
  sink << "clz\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1);
};

op clz_v4s4s( 0b0110111010100000010010[22] : rn[5] : rd[5] );
clz_v4s4s.var format : {char const*} = {"2493"};

clz_v4s4s.disasm = {
  sink << "clz\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op clz_v8b8b( 0b0010111000100000010010[22] : rn[5] : rd[5] );
clz_v8b8b.var format : {char const*} = {"2546"};

clz_v8b8b.disasm = {
  sink << "clz\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
};

op clz_v8hv8h( 0b0110111001100000010010[22] : rn[5] : rd[5] );
clz_v8hv8h.var format : {char const*} = {"2579"};

clz_v8hv8h.disasm = {
  sink << "clz\t" << DisasmTV(rd,8,1) <<  ", " << DisasmTV(rn,8,1);
};

/*******************************************************************
 * CMEQ (register)
 *
 * Compare bitwise equal (vector), setting destination vector element
 * to all ones if the condition holds, else zero
 */

op cmeq_d_reg( 0b01111110111[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmeq_d_reg.var format : {char const*} = {"708"};

cmeq_d_reg.disasm = {
  sink << "cmeq\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

cmeq_d_reg.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 1; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 == op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmeq_v8b_reg( 0b00101110001[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmeq_v8b_reg.var format : {char const*} = {"1304"};

cmeq_v8b_reg.disasm = {
  sink << "cmeq\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

cmeq_v8b_reg.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 8; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 == op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmeq_v16b_reg( 0b01101110001[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmeq_v16b_reg.var format : {char const*} = {"830"};

cmeq_v16b_reg.disasm = {
  sink << "cmeq\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

cmeq_v16b_reg.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 16; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 == op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmeq_v4h_reg( 0b00101110011[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmeq_v4h_reg.var format : {char const*} = {"1097"};

cmeq_v4h_reg.disasm = {
  sink << "cmeq\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

cmeq_v4h_reg.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 4; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 == op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmeq_v8h_reg( 0b01101110011[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmeq_v8h_reg.var format : {char const*} = {"1410"};

cmeq_v8h_reg.disasm = {
  sink << "cmeq\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

cmeq_v8h_reg.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 8; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 == op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmeq_v2s_reg( 0b00101110101[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmeq_v2s_reg.var format : {char const*} = {"1023"};

cmeq_v2s_reg.disasm = {
  sink << "cmeq\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

cmeq_v2s_reg.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 2; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 == op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmeq_v4s_reg( 0b01101110101[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmeq_v4s_reg.var format : {char const*} = {"1202"};

cmeq_v4s_reg.disasm = {
  sink << "cmeq\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

cmeq_v4s_reg.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 4; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 == op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmeq_v2d_reg( 0b01101110111[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmeq_v2d_reg.var format : {char const*} = {"896"};

cmeq_v2d_reg.disasm = {
  sink << "cmeq\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

cmeq_v2d_reg.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 2; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 == op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

/*
 * end of CMEQ (register)
 *******************************************************************/

/*******************************************************************
 * CMEQ (zero)
 *
 * Compare bitwise equal to zero (vector), setting destination vector
 * element to all ones if the condition holds, else zero
 */

op cmeq_d_zero( 0b0101111011100000100110[22] : rn[5] : rd[5] );
cmeq_d_zero.var format : {char const*} = {"2210"};

cmeq_d_zero.disasm = {
  sink << "cmeq\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", #0";
};

cmeq_d_zero.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 1; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 == op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmeq_v8b_zero( 0b0000111000100000100110[22] : rn[5] : rd[5] );
cmeq_v8b_zero.var format : {char const*} = {"2558"};

cmeq_v8b_zero.disasm = {
  sink << "cmeq\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", #0";
};

cmeq_v8b_zero.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 8; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 == op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmeq_v16b_zero( 0b0100111000100000100110[22] : rn[5] : rd[5] );
cmeq_v16b_zero.var format : {char const*} = {"2343"};

cmeq_v16b_zero.disasm = {
  sink << "cmeq\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", #0";
};

cmeq_v16b_zero.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 16; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 == op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmeq_v4h_zero( 0b0000111001100000100110[22] : rn[5] : rd[5] );
cmeq_v4h_zero.var format : {char const*} = {"2469"};

cmeq_v4h_zero.disasm = {
  sink << "cmeq\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", #0";
};

cmeq_v4h_zero.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 4; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 == op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmeq_v8h_zero( 0b0100111001100000100110[22] : rn[5] : rd[5] );
cmeq_v8h_zero.var format : {char const*} = {"2587"};

cmeq_v8h_zero.disasm = {
  sink << "cmeq\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", #0";
};

cmeq_v8h_zero.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 8; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 == op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmeq_v2s_zero( 0b0000111010100000100110[22] : rn[5] : rd[5] );
cmeq_v2s_zero.var format : {char const*} = {"2445"};

cmeq_v2s_zero.disasm = {
  sink << "cmeq\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", #0";
};

cmeq_v2s_zero.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 2; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 == op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmeq_v4s_zero( 0b0100111010100000100110[22] : rn[5] : rd[5] );
cmeq_v4s_zero.var format : {char const*} = {"2528"};

cmeq_v4s_zero.disasm = {
  sink << "cmeq\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", #0";
};

cmeq_v4s_zero.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 4; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 == op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmeq_v2d_zero( 0b0100111011100000100110[22] : rn[5] : rd[5] );
cmeq_v2d_zero.var format : {char const*} = {"2386"};

cmeq_v2d_zero.disasm = {
  sink << "cmeq\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", #0";
};

cmeq_v2d_zero.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 2; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 == op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

/*
 * end of CMEQ (zero)
 *******************************************************************/

/*******************************************************************
 * CMGE (register)
 *
 * Compare signed greater than or equal (vector)
 */

op cmge_d_reg( 0b01011110111[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmge_d_reg.var format : {char const*} = {"709"};

cmge_d_reg.disasm = {
  sink << "cmge\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

cmge_d_reg.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 1; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 >= op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmge_v8b_reg( 0b00001110001[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmge_v8b_reg.var format : {char const*} = {"1305"};

cmge_v8b_reg.disasm = {
  sink << "cmge\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

cmge_v8b_reg.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 8; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 >= op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmge_v16b_reg( 0b01001110001[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmge_v16b_reg.var format : {char const*} = {"831"};

cmge_v16b_reg.disasm = {
  sink << "cmge\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

cmge_v16b_reg.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 16; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 >= op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmge_v4h_reg( 0b00001110011[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmge_v4h_reg.var format : {char const*} = {"1098"};

cmge_v4h_reg.disasm = {
  sink << "cmge\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

cmge_v4h_reg.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 4; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 >= op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmge_v8h_reg( 0b01001110011[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmge_v8h_reg.var format : {char const*} = {"1411"};

cmge_v8h_reg.disasm = {
  sink << "cmge\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

cmge_v8h_reg.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 8; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 >= op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmge_v2s_reg( 0b00001110101[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmge_v2s_reg.var format : {char const*} = {"1024"};

cmge_v2s_reg.disasm = {
  sink << "cmge\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

cmge_v2s_reg.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 2; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 >= op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmge_v4s_reg( 0b01001110101[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmge_v4s_reg.var format : {char const*} = {"1203"};

cmge_v4s_reg.disasm = {
  sink << "cmge\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

cmge_v4s_reg.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 4; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 >= op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmge_v2d_reg( 0b01001110111[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmge_v2d_reg.var format : {char const*} = {"897"};

cmge_v2d_reg.disasm = {
  sink << "cmge\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

cmge_v2d_reg.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 2; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 >= op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

/*
 * end of CMGE (register)
 *******************************************************************/

/*******************************************************************
 * CMGE (zero)
 * 
 * Compare signed greater than or equal to zero (vector), setting
 * destination vector element to all ones if the condition holds, else
 * zero
 */

op cmge_d_zero( 0b0111111011100000100010[22] : rn[5] : rd[5] );
cmge_d_zero.var format : {char const*} = {"2211"};

cmge_d_zero.disasm = {
  sink << "cmge\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", #0";
};

cmge_d_zero.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 1; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 >= op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmge_v8b_zero( 0b0010111000100000100010[22] : rn[5] : rd[5] );
cmge_v8b_zero.var format : {char const*} = {"2559"};

cmge_v8b_zero.disasm = {
  sink << "cmge\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", #0";
};

cmge_v8b_zero.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 8; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 >= op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmge_v16b_zero( 0b0110111000100000100010[22] : rn[5] : rd[5] );
cmge_v16b_zero.var format : {char const*} = {"2344"};

cmge_v16b_zero.disasm = {
  sink << "cmge\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", #0";
};

cmge_v16b_zero.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 16; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 >= op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmge_v4h_zero( 0b0010111001100000100010[22] : rn[5] : rd[5] );
cmge_v4h_zero.var format : {char const*} = {"2470"};

cmge_v4h_zero.disasm = {
  sink << "cmge\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", #0";
};

cmge_v4h_zero.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 4; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 >= op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmge_v8h_zero( 0b0110111001100000100010[22] : rn[5] : rd[5] );
cmge_v8h_zero.var format : {char const*} = {"2588"};

cmge_v8h_zero.disasm = {
  sink << "cmge\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", #0";
};

cmge_v8h_zero.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 8; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 >= op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmge_v2s_zero( 0b0010111010100000100010[22] : rn[5] : rd[5] );
cmge_v2s_zero.var format : {char const*} = {"2446"};

cmge_v2s_zero.disasm = {
  sink << "cmge\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", #0";
};

cmge_v2s_zero.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 2; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 >= op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmge_v4s_zero( 0b0110111010100000100010[22] : rn[5] : rd[5] );
cmge_v4s_zero.var format : {char const*} = {"2529"};

cmge_v4s_zero.disasm = {
  sink << "cmge\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", #0";
};

cmge_v4s_zero.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 4; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 >= op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmge_v2d_zero( 0b0110111011100000100010[22] : rn[5] : rd[5] );
cmge_v2d_zero.var format : {char const*} = {"2387"};

cmge_v2d_zero.disasm = {
  sink << "cmge\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", #0";
};

cmge_v2d_zero.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 2; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 >= op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

/*
 * end of CMGE (zero)
 *******************************************************************/

/*******************************************************************
 * CMGT (register)
 *
 * Compare signed greater than (vector), setting destination vector
 * element to all ones if the condition holds, else zero
 */

op cmgt_d_reg( 0b01011110111[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmgt_d_reg.var format : {char const*} = {"710"};

cmgt_d_reg.disasm = {
  sink << "cmgt\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

cmgt_d_reg.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 1; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 > op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmgt_v8b_reg( 0b00001110001[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmgt_v8b_reg.var format : {char const*} = {"1306"};

cmgt_v8b_reg.disasm = {
  sink << "cmgt\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

cmgt_v8b_reg.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 8; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 > op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmgt_v16b_reg( 0b01001110001[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmgt_v16b_reg.var format : {char const*} = {"832"};

cmgt_v16b_reg.disasm = {
  sink << "cmgt\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

cmgt_v16b_reg.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 16; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 > op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmgt_v4h_reg( 0b00001110011[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmgt_v4h_reg.var format : {char const*} = {"1099"};

cmgt_v4h_reg.disasm = {
  sink << "cmgt\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

cmgt_v4h_reg.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 4; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 > op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmgt_v8h_reg( 0b01001110011[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmgt_v8h_reg.var format : {char const*} = {"1412"};

cmgt_v8h_reg.disasm = {
  sink << "cmgt\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

cmgt_v8h_reg.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 8; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 > op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmgt_v2s_reg( 0b00001110101[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmgt_v2s_reg.var format : {char const*} = {"1025"};

cmgt_v2s_reg.disasm = {
  sink << "cmgt\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

cmgt_v2s_reg.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 2; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 > op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmgt_v4s_reg( 0b01001110101[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmgt_v4s_reg.var format : {char const*} = {"1204"};

cmgt_v4s_reg.disasm = {
  sink << "cmgt\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

cmgt_v4s_reg.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 4; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 > op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmgt_v2d_reg( 0b01001110111[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmgt_v2d_reg.var format : {char const*} = {"898"};

cmgt_v2d_reg.disasm = {
  sink << "cmgt\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

cmgt_v2d_reg.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 2; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 > op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

/*
 * end of CMGT (register)
 *******************************************************************/

/*******************************************************************
 * CMGT (zero)
 *
 * Compare signed greater than zero (vector), setting destination
 * vector element to all ones if the condition holds, else zero
 */

op cmgt_d_zero( 0b0101111011100000100010[22] : rn[5] : rd[5] );
cmgt_d_zero.var format : {char const*} = {"2212"};

cmgt_d_zero.disasm = {
  sink << "cmgt\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", #0";
};

cmgt_d_zero.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 1; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 > op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmgt_v8b_zero( 0b0000111000100000100010[22] : rn[5] : rd[5] );
cmgt_v8b_zero.var format : {char const*} = {"2560"};

cmgt_v8b_zero.disasm = {
  sink << "cmgt\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", #0";
};

cmgt_v8b_zero.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 8; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 > op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmgt_v16b_zero( 0b0100111000100000100010[22] : rn[5] : rd[5] );
cmgt_v16b_zero.var format : {char const*} = {"2345"};

cmgt_v16b_zero.disasm = {
  sink << "cmgt\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", #0";
};

cmgt_v16b_zero.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 16; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 > op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmgt_v4h_zero( 0b0000111001100000100010[22] : rn[5] : rd[5] );
cmgt_v4h_zero.var format : {char const*} = {"2471"};

cmgt_v4h_zero.disasm = {
  sink << "cmgt\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", #0";
};

cmgt_v4h_zero.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 4; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 > op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmgt_v8h_zero( 0b0100111001100000100010[22] : rn[5] : rd[5] );
cmgt_v8h_zero.var format : {char const*} = {"2589"};

cmgt_v8h_zero.disasm = {
  sink << "cmgt\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", #0";
};

cmgt_v8h_zero.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 8; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 > op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmgt_v2s_zero( 0b0000111010100000100010[22] : rn[5] : rd[5] );
cmgt_v2s_zero.var format : {char const*} = {"2447"};

cmgt_v2s_zero.disasm = {
  sink << "cmgt\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", #0";
};

cmgt_v2s_zero.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 2; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 > op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmgt_v4s_zero( 0b0100111010100000100010[22] : rn[5] : rd[5] );
cmgt_v4s_zero.var format : {char const*} = {"2530"};

cmgt_v4s_zero.disasm = {
  sink << "cmgt\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", #0";
};

cmgt_v4s_zero.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 4; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 > op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmgt_v2d_zero( 0b0100111011100000100010[22] : rn[5] : rd[5] );
cmgt_v2d_zero.var format : {char const*} = {"2388"};

cmgt_v2d_zero.disasm = {
  sink << "cmgt\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", #0";
};

cmgt_v2d_zero.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 2; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 > op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

/*
 * end of CMGT (zero)
 *******************************************************************/

/*******************************************************************
 * CMHI (register)
 *
 * Compare unsigned higher (vector), setting destination vector
 * element to all ones if the condition holds, else zero
 */

op cmhi_d_reg( 0b01111110111[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmhi_d_reg.var format : {char const*} = {"711"};

cmhi_d_reg.disasm = {
  sink << "cmhi\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

cmhi_d_reg.execute = {
  typedef typename ARCH::U64 U64;

  for (unsigned e=0; e < 1; e += 1) {
    U64 op1( cpu.GetVU64(rn,e) ), op2( 0 ), res;
    res =  U64(not (op1 > op2)) - U64(1);
    cpu.SetVU64(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmhi_v8b_reg( 0b00101110001[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmhi_v8b_reg.var format : {char const*} = {"1307"};

cmhi_v8b_reg.disasm = {
  sink << "cmhi\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

cmhi_v8b_reg.execute = {
  typedef typename ARCH::U8 U8;

  for (unsigned e=0; e < 8; e += 1) {
    U8 op1( cpu.GetVU8(rn,e) ), op2( 0 ), res;
    res =  U8(not (op1 > op2)) - U8(1);
    cpu.SetVU8(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmhi_v16b_reg( 0b01101110001[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmhi_v16b_reg.var format : {char const*} = {"833"};

cmhi_v16b_reg.disasm = {
  sink << "cmhi\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

cmhi_v16b_reg.execute = {
  typedef typename ARCH::U8 U8;

  for (unsigned e=0; e < 16; e += 1) {
    U8 op1( cpu.GetVU8(rn,e) ), op2( 0 ), res;
    res =  U8(not (op1 > op2)) - U8(1);
    cpu.SetVU8(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmhi_v4h_reg( 0b00101110011[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmhi_v4h_reg.var format : {char const*} = {"1100"};

cmhi_v4h_reg.disasm = {
  sink << "cmhi\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

cmhi_v4h_reg.execute = {
  typedef typename ARCH::U16 U16;

  for (unsigned e=0; e < 4; e += 1) {
    U16 op1( cpu.GetVU16(rn,e) ), op2( 0 ), res;
    res =  U16(not (op1 > op2)) - U16(1);
    cpu.SetVU16(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmhi_v8h_reg( 0b01101110011[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmhi_v8h_reg.var format : {char const*} = {"1413"};

cmhi_v8h_reg.disasm = {
  sink << "cmhi\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

cmhi_v8h_reg.execute = {
  typedef typename ARCH::U16 U16;

  for (unsigned e=0; e < 8; e += 1) {
    U16 op1( cpu.GetVU16(rn,e) ), op2( 0 ), res;
    res =  U16(not (op1 > op2)) - U16(1);
    cpu.SetVU16(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmhi_v2s_reg( 0b00101110101[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmhi_v2s_reg.var format : {char const*} = {"1026"};

cmhi_v2s_reg.disasm = {
  sink << "cmhi\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

cmhi_v2s_reg.execute = {
  typedef typename ARCH::U32 U32;

  for (unsigned e=0; e < 2; e += 1) {
    U32 op1( cpu.GetVU32(rn,e) ), op2( 0 ), res;
    res =  U32(not (op1 > op2)) - U32(1);
    cpu.SetVU32(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmhi_v4s_reg( 0b01101110101[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmhi_v4s_reg.var format : {char const*} = {"1205"};

cmhi_v4s_reg.disasm = {
  sink << "cmhi\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

cmhi_v4s_reg.execute = {
  typedef typename ARCH::U32 U32;

  for (unsigned e=0; e < 4; e += 1) {
    U32 op1( cpu.GetVU32(rn,e) ), op2( 0 ), res;
    res =  U32(not (op1 > op2)) - U32(1);
    cpu.SetVU32(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmhi_v2d_reg( 0b01101110111[11] : rm[5] : 0b001101[6] : rn[5] : rd[5] );
cmhi_v2d_reg.var format : {char const*} = {"899"};

cmhi_v2d_reg.disasm = {
  sink << "cmhi\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

cmhi_v2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  for (unsigned e=0; e < 2; e += 1) {
    U64 op1( cpu.GetVU64(rn,e) ), op2( 0 ), res;
    res =  U64(not (op1 > op2)) - U64(1);
    cpu.SetVU64(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

/*
 * end of CMHI (register)
 *******************************************************************/

/*******************************************************************
 * CMHS (register)
 *
 * Compare unsigned higher or same (vector), setting destination
 * vector element to all ones if the condition holds, else zero
 */

op cmhs_d_reg( 0b01111110111[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmhs_d_reg.var format : {char const*} = {"712"};

cmhs_d_reg.disasm = {
  sink << "cmhs\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

cmhs_d_reg.execute = {
  typedef typename ARCH::U64 U64;

  for (unsigned e=0; e < 1; e += 1) {
    U64 op1( cpu.GetVU64(rn,e) ), op2( 0 ), res;
    res =  U64(not (op1 >= op2)) - U64(1);
    cpu.SetVU64(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmhs_v8b_reg( 0b00101110001[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmhs_v8b_reg.var format : {char const*} = {"1308"};

cmhs_v8b_reg.disasm = {
  sink << "cmhs\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

cmhs_v8b_reg.execute = {
  typedef typename ARCH::U8 U8;

  for (unsigned e=0; e < 8; e += 1) {
    U8 op1( cpu.GetVU8(rn,e) ), op2( 0 ), res;
    res =  U8(not (op1 >= op2)) - U8(1);
    cpu.SetVU8(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmhs_v16b_reg( 0b01101110001[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmhs_v16b_reg.var format : {char const*} = {"834"};

cmhs_v16b_reg.disasm = {
  sink << "cmhs\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

cmhs_v16b_reg.execute = {
  typedef typename ARCH::U8 U8;

  for (unsigned e=0; e < 16; e += 1) {
    U8 op1( cpu.GetVU8(rn,e) ), op2( 0 ), res;
    res =  U8(not (op1 >= op2)) - U8(1);
    cpu.SetVU8(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmhs_v4h_reg( 0b00101110011[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmhs_v4h_reg.var format : {char const*} = {"1101"};

cmhs_v4h_reg.disasm = {
  sink << "cmhs\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

cmhs_v4h_reg.execute = {
  typedef typename ARCH::U16 U16;

  for (unsigned e=0; e < 4; e += 1) {
    U16 op1( cpu.GetVU16(rn,e) ), op2( 0 ), res;
    res =  U16(not (op1 >= op2)) - U16(1);
    cpu.SetVU16(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmhs_v8h_reg( 0b01101110011[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmhs_v8h_reg.var format : {char const*} = {"1414"};

cmhs_v8h_reg.disasm = {
  sink << "cmhs\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

cmhs_v8h_reg.execute = {
  typedef typename ARCH::U16 U16;

  for (unsigned e=0; e < 8; e += 1) {
    U16 op1( cpu.GetVU16(rn,e) ), op2( 0 ), res;
    res =  U16(not (op1 >= op2)) - U16(1);
    cpu.SetVU16(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmhs_v2s_reg( 0b00101110101[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmhs_v2s_reg.var format : {char const*} = {"1027"};

cmhs_v2s_reg.disasm = {
  sink << "cmhs\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

cmhs_v2s_reg.execute = {
  typedef typename ARCH::U32 U32;

  for (unsigned e=0; e < 2; e += 1) {
    U32 op1( cpu.GetVU32(rn,e) ), op2( 0 ), res;
    res =  U32(not (op1 >= op2)) - U32(1);
    cpu.SetVU32(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmhs_v4s_reg( 0b01101110101[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmhs_v4s_reg.var format : {char const*} = {"1206"};

cmhs_v4s_reg.disasm = {
  sink << "cmhs\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

cmhs_v4s_reg.execute = {
  typedef typename ARCH::U32 U32;

  for (unsigned e=0; e < 4; e += 1) {
    U32 op1( cpu.GetVU32(rn,e) ), op2( 0 ), res;
    res =  U32(not (op1 >= op2)) - U32(1);
    cpu.SetVU32(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmhs_v2d_reg( 0b01101110111[11] : rm[5] : 0b001111[6] : rn[5] : rd[5] );
cmhs_v2d_reg.var format : {char const*} = {"900"};

cmhs_v2d_reg.disasm = {
  sink << "cmhs\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

cmhs_v2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  for (unsigned e=0; e < 2; e += 1) {
    U64 op1( cpu.GetVU64(rn,e) ), op2( 0 ), res;
    res =  U64(not (op1 >= op2)) - U64(1);
    cpu.SetVU64(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

/*
 * end of CMHS (register)
 *******************************************************************/

/*******************************************************************
 * CMLE (zero)
 *
 * Compare signed less than or equal to zero (vector), setting
 * destination vector element to all ones if the condition holds, else
 * zero
 */

op cmle_d_zero( 0b0111111011100000100110[22] : rn[5] : rd[5] );
cmle_d_zero.var format : {char const*} = {"2213"};

cmle_d_zero.disasm = {
  sink << "cmle\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", #0";
};

cmle_d_zero.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 1; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 <= op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmle_v8b_zero( 0b0010111000100000100110[22] : rn[5] : rd[5] );
cmle_v8b_zero.var format : {char const*} = {"2561"};

cmle_v8b_zero.disasm = {
  sink << "cmle\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", #0";
};

cmle_v8b_zero.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 8; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 <= op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmle_v16b_zero( 0b0110111000100000100110[22] : rn[5] : rd[5] );
cmle_v16b_zero.var format : {char const*} = {"2346"};

cmle_v16b_zero.disasm = {
  sink << "cmle\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", #0";
};

cmle_v16b_zero.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 16; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 <= op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmle_v4h_zero( 0b0010111001100000100110[22] : rn[5] : rd[5] );
cmle_v4h_zero.var format : {char const*} = {"2472"};

cmle_v4h_zero.disasm = {
  sink << "cmle\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", #0";
};

cmle_v4h_zero.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 4; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 <= op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmle_v8h_zero( 0b0110111001100000100110[22] : rn[5] : rd[5] );
cmle_v8h_zero.var format : {char const*} = {"2590"};

cmle_v8h_zero.disasm = {
  sink << "cmle\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", #0";
};

cmle_v8h_zero.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 8; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 <= op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmle_v2s_zero( 0b0010111010100000100110[22] : rn[5] : rd[5] );
cmle_v2s_zero.var format : {char const*} = {"2448"};

cmle_v2s_zero.disasm = {
  sink << "cmle\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", #0";
};

cmle_v2s_zero.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 2; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 <= op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmle_v4s_zero( 0b0110111010100000100110[22] : rn[5] : rd[5] );
cmle_v4s_zero.var format : {char const*} = {"2531"};

cmle_v4s_zero.disasm = {
  sink << "cmle\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", #0";
};

cmle_v4s_zero.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 4; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 <= op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmle_v2d_zero( 0b0110111011100000100110[22] : rn[5] : rd[5] );
cmle_v2d_zero.var format : {char const*} = {"2389"};

cmle_v2d_zero.disasm = {
  sink << "cmle\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", #0";
};

cmle_v2d_zero.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 2; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 <= op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

/*
 * end of CMLE (zero)
 *******************************************************************/

/*******************************************************************
 * CMLT (zero)
 *
 * Compare signed less than zero (vector), setting destination vector
 * element to all ones if the condition holds, else zero
 */

op cmlt_d_zero( 0b0101111011100000101010[22] : rn[5] : rd[5] );
cmlt_d_zero.var format : {char const*} = {"2214"};

cmlt_d_zero.disasm = {
  sink << "cmlt\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", #0";
};

cmlt_d_zero.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 1; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 < op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmlt_v8b_zero( 0b0000111000100000101010[22] : rn[5] : rd[5] );
cmlt_v8b_zero.var format : {char const*} = {"2562"};

cmlt_v8b_zero.disasm = {
  sink << "cmlt\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", #0";
};

cmlt_v8b_zero.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 8; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 < op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmlt_v16b_zero( 0b0100111000100000101010[22] : rn[5] : rd[5] );
cmlt_v16b_zero.var format : {char const*} = {"2347"};

cmlt_v16b_zero.disasm = {
  sink << "cmlt\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", #0";
};

cmlt_v16b_zero.execute = {
  typedef typename ARCH::S8 S8;

  for (unsigned e=0; e < 16; e += 1) {
    S8 op1( cpu.GetVS8(rn,e) ), op2( 0 ), res;
    res =  S8(not (op1 < op2)) - S8(1);
    cpu.SetVS8(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmlt_v4h_zero( 0b0000111001100000101010[22] : rn[5] : rd[5] );
cmlt_v4h_zero.var format : {char const*} = {"2473"};

cmlt_v4h_zero.disasm = {
  sink << "cmlt\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", #0";
};

cmlt_v4h_zero.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 4; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 < op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmlt_v8h_zero( 0b0100111001100000101010[22] : rn[5] : rd[5] );
cmlt_v8h_zero.var format : {char const*} = {"2591"};

cmlt_v8h_zero.disasm = {
  sink << "cmlt\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", #0";
};

cmlt_v8h_zero.execute = {
  typedef typename ARCH::S16 S16;

  for (unsigned e=0; e < 8; e += 1) {
    S16 op1( cpu.GetVS16(rn,e) ), op2( 0 ), res;
    res =  S16(not (op1 < op2)) - S16(1);
    cpu.SetVS16(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmlt_v2s_zero( 0b0000111010100000101010[22] : rn[5] : rd[5] );
cmlt_v2s_zero.var format : {char const*} = {"2449"};

cmlt_v2s_zero.disasm = {
  sink << "cmlt\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", #0";
};

cmlt_v2s_zero.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 2; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 < op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,8);
};

op cmlt_v4s_zero( 0b0100111010100000101010[22] : rn[5] : rd[5] );
cmlt_v4s_zero.var format : {char const*} = {"2532"};

cmlt_v4s_zero.disasm = {
  sink << "cmlt\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", #0";
};

cmlt_v4s_zero.execute = {
  typedef typename ARCH::S32 S32;

  for (unsigned e=0; e < 4; e += 1) {
    S32 op1( cpu.GetVS32(rn,e) ), op2( 0 ), res;
    res =  S32(not (op1 < op2)) - S32(1);
    cpu.SetVS32(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

op cmlt_v2d_zero( 0b0100111011100000101010[22] : rn[5] : rd[5] );
cmlt_v2d_zero.var format : {char const*} = {"2390"};

cmlt_v2d_zero.disasm = {
  sink << "cmlt\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", #0";
};

cmlt_v2d_zero.execute = {
  typedef typename ARCH::S64 S64;

  for (unsigned e=0; e < 2; e += 1) {
    S64 op1( cpu.GetVS64(rn,e) ), op2( 0 ), res;
    res =  S64(not (op1 < op2)) - S64(1);
    cpu.SetVS64(rd,e,res);
  }
  cpu.ClearHighV(rd,16);
};

/*
 * end of CMLT (zero)
 *******************************************************************/

op cmtst_ddd( 0b01011110111[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmtst_ddd.var format : {char const*} = {"713"};

cmtst_ddd.disasm = {
  sink << "cmtst\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op cmtst_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmtst_v16bv16bv16b.var format : {char const*} = {"835"};

cmtst_v16bv16bv16b.disasm = {
  sink << "cmtst\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op cmtst_v2dv2dv2d( 0b01001110111[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmtst_v2dv2dv2d.var format : {char const*} = {"901"};

cmtst_v2dv2dv2d.disasm = {
  sink << "cmtst\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op cmtst_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmtst_v2sv2sv2s.var format : {char const*} = {"1028"};

cmtst_v2sv2sv2s.disasm = {
  sink << "cmtst\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op cmtst_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmtst_v4hv4hv4h.var format : {char const*} = {"1102"};

cmtst_v4hv4hv4h.disasm = {
  sink << "cmtst\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op cmtst_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmtst_v4sv4sv4s.var format : {char const*} = {"1207"};

cmtst_v4sv4sv4s.disasm = {
  sink << "cmtst\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op cmtst_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmtst_v8bv8bv8b.var format : {char const*} = {"1309"};

cmtst_v8bv8bv8b.disasm = {
  sink << "cmtst\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op cmtst_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b100011[6] : rn[5] : rd[5] );
cmtst_v8hv8hv8h.var format : {char const*} = {"1415"};

cmtst_v8hv8hv8h.disasm = {
  sink << "cmtst\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op cnt_v16b16b( 0b0100111000100000010110[22] : rn[5] : rd[5] );
cnt_v16b16b.var format : {char const*} = {"2332"};

cnt_v16b16b.disasm = {
  sink << "cnt\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op cnt_v8b8b( 0b0000111000100000010110[22] : rn[5] : rd[5] );
cnt_v8b8b.var format : {char const*} = {"2547"};

cnt_v8b8b.disasm = {
  sink << "cnt\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
};

/*******************************************************************
 * DUP (element)
 *
 * Duplicate vector element to vector or scalar
 */

op dup_v16bvb( 0b01001110000[11] : index[4] : 0b1000001[7] : rn[5] : rd[5] );
dup_v16bvb.var format : {char const*} = {"1820"};

dup_v16bvb.disasm = {
  sink << "dup\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,0,0) << DisasmSubscript(index);
};

op dup_v2dvd( 0b01001110000[11] : index[1] : 0b1000000001[10] : rn[5] : rd[5] );
dup_v2dvd.var format : {char const*} = {"2037"};

dup_v2dvd.disasm = {
  sink << "dup\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,0,3) << DisasmSubscript(index);
};

op dup_v2svs( 0b00001110000[11] : index[2] : 0b100000001[9] : rn[5] : rd[5] );
dup_v2svs.var format : {char const*} = {"2013"};

dup_v2svs.disasm = {
  sink << "dup\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,0,2) << DisasmSubscript(index);
};

op dup_v4hvh( 0b00001110000[11] : index[3] : 0b10000001[8] : rn[5] : rd[5] );
dup_v4hvh.var format : {char const*} = {"1924"};

dup_v4hvh.disasm = {
  sink << "dup\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,0,1) << DisasmSubscript(index);
};

op dup_v4svs( 0b01001110000[11] : index[2] : 0b100000001[9] : rn[5] : rd[5] );
dup_v4svs.var format : {char const*} = {"2015"};

dup_v4svs.disasm = {
  sink << "dup\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,0,2) << DisasmSubscript(index);
};

op dup_v8bvb( 0b00001110000[11] : index[4] : 0b1000001[7] : rn[5] : rd[5] );
dup_v8bvb.var format : {char const*} = {"1822"};

dup_v8bvb.disasm = {
  sink << "dup\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,0,0) << DisasmSubscript(index);
};

op dup_v8hvh( 0b01001110000[11] : index[3] : 0b10000001[8] : rn[5] : rd[5] );
dup_v8hvh.var format : {char const*} = {"1926"};

dup_v8hvh.disasm = {
  sink << "dup\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,0,1) << DisasmSubscript(index);
};

/*
 * end of DUP (element)
 *******************************************************************/

/*******************************************************************
 * DUP (general)
 *
 * Duplicate general-purpose register to vector
 */

op dup_v8b( 0b00001110000[11] : ?[4] : 0b1000011[7] : rn[5] : rd[5] );
dup_v8b.var format : {char const*} = {"1823"};

dup_v8b.disasm = {
  sink << "dup\t" << DisasmTV(rd,8,0) << ", " << DisasmGZWR(rn);
};

dup_v8b.execute = {
  typename ARCH::U8 element( cpu.GetGZR(rn) );
  for (unsigned idx = 0; idx < 8; ++idx)
    cpu.SetVU8(rd,idx,element);
  cpu.ClearHighV(rd,8);
};

op dup_v16b( 0b01001110000[11] : ?[4] : 0b1000011[7] : rn[5] : rd[5] );
dup_v16b.var format : {char const*} = {"1821"};

dup_v16b.disasm = {
  sink << "dup\t" << DisasmTV(rd,16,0) << ", " << DisasmGZWR(rn);
};

dup_v16b.execute = {
  typename ARCH::U8 element( cpu.GetGZR(rn) );
  for (unsigned idx = 0; idx < 16; ++idx)
    cpu.SetVU8(rd,idx,element);
  cpu.ClearHighV(rd,16);
};

op dup_v4h( 0b00001110000[11] : ?[3] : 0b10000011[8] : rn[5] : rd[5] );
dup_v4h.var format : {char const*} = {"1925"};

dup_v4h.disasm = {
  sink << "dup\t" << DisasmTV(rd,4,1) << ", " << DisasmGZWR(rn);
};

dup_v4h.execute = {
  typename ARCH::U16 element( cpu.GetGZR(rn) );
  for (unsigned idx = 0; idx < 4; ++idx)
    cpu.SetVU16(rd,idx,element);
  cpu.ClearHighV(rd,8);
};

op dup_v8h( 0b01001110000[11] : ?[3] : 0b10000011[8] : rn[5] : rd[5] );
dup_v8h.var format : {char const*} = {"1927"};

dup_v8h.disasm = {
  sink << "dup\t" << DisasmTV(rd,8,1) << ", " << DisasmGZWR(rn);
};

dup_v8h.execute = {
  typename ARCH::U16 element( cpu.GetGZR(rn) );
  for (unsigned idx = 0; idx < 8; ++idx)
    cpu.SetVU16(rd,idx,element);
  cpu.ClearHighV(rd,16);
};

op dup_v2s( 0b00001110000[11] : ?[2] : 0b100000011[9] : rn[5] : rd[5] );
dup_v2s.var format : {char const*} = {"2014"};

dup_v2s.disasm = {
  sink << "dup\t" << DisasmTV(rd,2,2) << ", " << DisasmGZWR(rn);
};

dup_v2s.execute = {
  typename ARCH::U32 element( cpu.GetGZR(rn) );
  for (unsigned idx = 0; idx < 2; ++idx)
    cpu.SetVU32(rd,idx,element);
  cpu.ClearHighV(rd,8);
};

op dup_v4s( 0b01001110000[11] : ?[2] : 0b100000011[9] : rn[5] : rd[5] );
dup_v4s.var format : {char const*} = {"2016"};

dup_v4s.disasm = {
  sink << "dup\t" << DisasmTV(rd,4,2) << ", " << DisasmGZWR(rn);
};

dup_v4s.execute = {
  typename ARCH::U32 element( cpu.GetGZR(rn) );
  for (unsigned idx = 0; idx < 4; ++idx)
    cpu.SetVU32(rd,idx,element);
  cpu.ClearHighV(rd,16);
};

op dup_v2d( 0b01001110000[11] : ?[1] : 0b1000000011[10] : rn[5] : rd[5] );
dup_v2d.var format : {char const*} = {"2038"};

dup_v2d.disasm = {
  sink << "dup\t" << DisasmTV(rd,2,3) << ", " << DisasmGZXR(rn);
};

dup_v2d.execute = {
  typename ARCH::U64 element( cpu.GetGZR(rn) );
  for (unsigned idx = 0; idx < 2; ++idx)
    cpu.SetVU64(rd,idx,element);
  cpu.ClearHighV(rd,16);
};

/*
 * end of DUP (general)
 *******************************************************************/

op eor_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
eor_v16bv16bv16b.var format : {char const*} = {"836"};

eor_v16bv16bv16b.disasm = {
  sink << "eor\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op eor_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
eor_v8bv8bv8b.var format : {char const*} = {"1310"};

eor_v8bv8bv8b.disasm = {
  sink << "eor\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op ext_v16b( 0b01101110000[11] : rm[5] : 0b0[1] : index[4] : 0b0[1] : rn[5] : rd[5] );
ext_v16b.var format : {char const*} = {"351"};

ext_v16b.disasm = {
  sink << "ext\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0) << ", " << DisasmI(index);
};

op ext_v8b( 0b00101110000[11] : rm[5] : 0b00[2] : index[3] : 0b0[1] : rn[5] : rd[5] );
ext_v8b.var format : {char const*} = {"374"};

ext_v8b.disasm = {
  sink << "ext\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0) << ", " << DisasmI(index);
};

op fabd_ddd( 0b01111110111[11] : rm[5] : 0b110101[6] : rn[5] : rd[5] );
fabd_ddd.var format : {char const*} = {"714"};

fabd_ddd.disasm = {
  sink << "fabd\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op fabd_sss( 0b01111110101[11] : rm[5] : 0b110101[6] : rn[5] : rd[5] );
fabd_sss.var format : {char const*} = {"791"};

fabd_sss.disasm = {
  sink << "fabd\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op fabd_v2dv2dv2d( 0b01101110111[11] : rm[5] : 0b110101[6] : rn[5] : rd[5] );
fabd_v2dv2dv2d.var format : {char const*} = {"902"};

fabd_v2dv2dv2d.disasm = {
  sink << "fabd\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fabd_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b110101[6] : rn[5] : rd[5] );
fabd_v2sv2sv2s.var format : {char const*} = {"1029"};

fabd_v2sv2sv2s.disasm = {
  sink << "fabd\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fabd_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b110101[6] : rn[5] : rd[5] );
fabd_v4sv4sv4s.var format : {char const*} = {"1208"};

fabd_v4sv4sv4s.disasm = {
  sink << "fabd\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fabs_dd( 0b0001111001100000110000[22] : rn[5] : rd[5] );
fabs_dd.var format : {char const*} = {"2179"};

fabs_dd.disasm = {
  sink << "fabs\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op fabs_ss( 0b0001111000100000110000[22] : rn[5] : rd[5] );
fabs_ss.var format : {char const*} = {"2265"};

fabs_ss.disasm = {
  sink << "fabs\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op fabs_v2d2d( 0b0100111011100000111110[22] : rn[5] : rd[5] );
fabs_v2d2d.var format : {char const*} = {"2357"};

fabs_v2d2d.disasm = {
  sink << "fabs\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op fabs_v2s2s( 0b0000111010100000111110[22] : rn[5] : rd[5] );
fabs_v2s2s.var format : {char const*} = {"2413"};

fabs_v2s2s.disasm = {
  sink << "fabs\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op fabs_v4s4s( 0b0100111010100000111110[22] : rn[5] : rd[5] );
fabs_v4s4s.var format : {char const*} = {"2494"};

fabs_v4s4s.disasm = {
  sink << "fabs\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op facge_ddd( 0b01111110011[11] : rm[5] : 0b111011[6] : rn[5] : rd[5] );
facge_ddd.var format : {char const*} = {"715"};

facge_ddd.disasm = {
  sink << "facge\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op facge_sss( 0b01111110001[11] : rm[5] : 0b111011[6] : rn[5] : rd[5] );
facge_sss.var format : {char const*} = {"792"};

facge_sss.disasm = {
  sink << "facge\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op facge_v2dv2dv2d( 0b01101110011[11] : rm[5] : 0b111011[6] : rn[5] : rd[5] );
facge_v2dv2dv2d.var format : {char const*} = {"903"};

facge_v2dv2dv2d.disasm = {
  sink << "facge\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op facge_v2sv2sv2s( 0b00101110001[11] : rm[5] : 0b111011[6] : rn[5] : rd[5] );
facge_v2sv2sv2s.var format : {char const*} = {"1030"};

facge_v2sv2sv2s.disasm = {
  sink << "facge\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op facge_v4sv4sv4s( 0b01101110001[11] : rm[5] : 0b111011[6] : rn[5] : rd[5] );
facge_v4sv4sv4s.var format : {char const*} = {"1209"};

facge_v4sv4sv4s.disasm = {
  sink << "facge\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op facgt_ddd( 0b01111110111[11] : rm[5] : 0b111011[6] : rn[5] : rd[5] );
facgt_ddd.var format : {char const*} = {"716"};

facgt_ddd.disasm = {
  sink << "facgt\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op facgt_sss( 0b01111110101[11] : rm[5] : 0b111011[6] : rn[5] : rd[5] );
facgt_sss.var format : {char const*} = {"793"};

facgt_sss.disasm = {
  sink << "facgt\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op facgt_v2dv2dv2d( 0b01101110111[11] : rm[5] : 0b111011[6] : rn[5] : rd[5] );
facgt_v2dv2dv2d.var format : {char const*} = {"904"};

facgt_v2dv2dv2d.disasm = {
  sink << "facgt\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op facgt_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b111011[6] : rn[5] : rd[5] );
facgt_v2sv2sv2s.var format : {char const*} = {"1031"};

facgt_v2sv2sv2s.disasm = {
  sink << "facgt\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op facgt_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b111011[6] : rn[5] : rd[5] );
facgt_v4sv4sv4s.var format : {char const*} = {"1210"};

facgt_v4sv4sv4s.disasm = {
  sink << "facgt\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fadd_ddd( 0b00011110011[11] : rm[5] : 0b001010[6] : rn[5] : rd[5] );
fadd_ddd.var format : {char const*} = {"717"};

fadd_ddd.disasm = {
  sink << "fadd\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op fadd_sss( 0b00011110001[11] : rm[5] : 0b001010[6] : rn[5] : rd[5] );
fadd_sss.var format : {char const*} = {"794"};

fadd_sss.disasm = {
  sink << "fadd\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op fadd_v2dv2dv2d( 0b01001110011[11] : rm[5] : 0b110101[6] : rn[5] : rd[5] );
fadd_v2dv2dv2d.var format : {char const*} = {"905"};

fadd_v2dv2dv2d.disasm = {
  sink << "fadd\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fadd_v2sv2sv2s( 0b00001110001[11] : rm[5] : 0b110101[6] : rn[5] : rd[5] );
fadd_v2sv2sv2s.var format : {char const*} = {"1032"};

fadd_v2sv2sv2s.disasm = {
  sink << "fadd\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fadd_v4sv4sv4s( 0b01001110001[11] : rm[5] : 0b110101[6] : rn[5] : rd[5] );
fadd_v4sv4sv4s.var format : {char const*} = {"1211"};

fadd_v4sv4sv4s.disasm = {
  sink << "fadd\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op faddp_dv2d( 0b0111111001110000110110[22] : rn[5] : rd[5] );
faddp_dv2d.var format : {char const*} = {"2223"};

faddp_dv2d.disasm = {
  sink << "faddp\t" << DisasmD(rd) << ", " << DisasmTV(rn,2,3);
};

op faddp_sv2s( 0b0111111000110000110110[22] : rn[5] : rd[5] );
faddp_sv2s.var format : {char const*} = {"2301"};

faddp_sv2s.disasm = {
  sink << "faddp\t" << DisasmS(rd) << ", " << DisasmTV(rn,2,2);
};

op faddp_v2dv2dv2d( 0b01101110011[11] : rm[5] : 0b110101[6] : rn[5] : rd[5] );
faddp_v2dv2dv2d.var format : {char const*} = {"906"};

faddp_v2dv2dv2d.disasm = {
  sink << "faddp\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op faddp_v2sv2sv2s( 0b00101110001[11] : rm[5] : 0b110101[6] : rn[5] : rd[5] );
faddp_v2sv2sv2s.var format : {char const*} = {"1033"};

faddp_v2sv2sv2s.disasm = {
  sink << "faddp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op faddp_v4sv4sv4s( 0b01101110001[11] : rm[5] : 0b110101[6] : rn[5] : rd[5] );
faddp_v4sv4sv4s.var format : {char const*} = {"1212"};

faddp_v4sv4sv4s.disasm = {
  sink << "faddp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fccmp_d( 0b00011110011[11] : rm[5] : cond[4] : 0b01[2] : rn[5] : 0b0[1] : nzcv[4] );
fccmp_d.var format : {char const*} = {"362"};

fccmp_d.disasm = {
  sink << "fccmp\t" << DisasmD(rn) << ", " << DisasmD(rm) << ", " << DisasmI(nzcv,16) << ", " << DisasmCond(cond);
};

op fccmp_s( 0b00011110001[11] : rm[5] : cond[4] : 0b01[2] : rn[5] : 0b0[1] : nzcv[4] );
fccmp_s.var format : {char const*} = {"364"};

fccmp_s.disasm = {
  sink << "fccmp\t" << DisasmS(rn) << ", " << DisasmS(rm) << ", " << DisasmI(nzcv,16) << ", " << DisasmCond(cond);
};

op fccmpe_d( 0b00011110011[11] : rm[5] : cond[4] : 0b01[2] : rn[5] : 0b1[1] : nzcv[4] );
fccmpe_d.var format : {char const*} = {"363"};

fccmpe_d.disasm = {
  sink << "fccmpe\t" << DisasmD(rn) << ", " << DisasmD(rm) << ", " << DisasmI(nzcv,16) << ", " << DisasmCond(cond);
};

op fccmpe_s( 0b00011110001[11] : rm[5] : cond[4] : 0b01[2] : rn[5] : 0b1[1] : nzcv[4] );
fccmpe_s.var format : {char const*} = {"365"};

fccmpe_s.disasm = {
  sink << "fccmpe\t" << DisasmS(rn) << ", " << DisasmS(rm) << ", " << DisasmI(nzcv,16) << ", " << DisasmCond(cond);
};

op fcmeq_ddd( 0b01011110011[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmeq_ddd.var format : {char const*} = {"718"};

fcmeq_ddd.disasm = {
  sink << "fcmeq\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op fcmeq_dz( 0b0101111011100000110110[22] : rn[5] : rd[5] );
fcmeq_dz.var format : {char const*} = {"2215"};

fcmeq_dz.disasm = {
  sink << "fcmeq\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", #0.0";
};

op fcmeq_sss( 0b01011110001[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmeq_sss.var format : {char const*} = {"795"};

fcmeq_sss.disasm = {
  sink << "fcmeq\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op fcmeq_sz( 0b0101111010100000110110[22] : rn[5] : rd[5] );
fcmeq_sz.var format : {char const*} = {"2296"};

fcmeq_sz.disasm = {
  sink << "fcmeq\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", #0.0";
};

op fcmeq_v2dv2dv2d( 0b01001110011[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmeq_v2dv2dv2d.var format : {char const*} = {"907"};

fcmeq_v2dv2dv2d.disasm = {
  sink << "fcmeq\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fcmeq_v2dz( 0b0100111011100000110110[22] : rn[5] : rd[5] );
fcmeq_v2dz.var format : {char const*} = {"2391"};

fcmeq_v2dz.disasm = {
  sink << "fcmeq\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", #0.0";
};

op fcmeq_v2sv2sv2s( 0b00001110001[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmeq_v2sv2sv2s.var format : {char const*} = {"1034"};

fcmeq_v2sv2sv2s.disasm = {
  sink << "fcmeq\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fcmeq_v2sz( 0b0000111010100000110110[22] : rn[5] : rd[5] );
fcmeq_v2sz.var format : {char const*} = {"2450"};

fcmeq_v2sz.disasm = {
  sink << "fcmeq\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", #0.0";
};

op fcmeq_v4sv4sv4s( 0b01001110001[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmeq_v4sv4sv4s.var format : {char const*} = {"1213"};

fcmeq_v4sv4sv4s.disasm = {
  sink << "fcmeq\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fcmeq_v4sz( 0b0100111010100000110110[22] : rn[5] : rd[5] );
fcmeq_v4sz.var format : {char const*} = {"2533"};

fcmeq_v4sz.disasm = {
  sink << "fcmeq\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", #0.0";
};

op fcmge_ddd( 0b01111110011[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmge_ddd.var format : {char const*} = {"719"};

fcmge_ddd.disasm = {
  sink << "fcmge\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op fcmge_dz( 0b0111111011100000110010[22] : rn[5] : rd[5] );
fcmge_dz.var format : {char const*} = {"2216"};

fcmge_dz.disasm = {
  sink << "fcmge\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", #0.0";
};

op fcmge_sss( 0b01111110001[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmge_sss.var format : {char const*} = {"796"};

fcmge_sss.disasm = {
  sink << "fcmge\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op fcmge_sz( 0b0111111010100000110010[22] : rn[5] : rd[5] );
fcmge_sz.var format : {char const*} = {"2297"};

fcmge_sz.disasm = {
  sink << "fcmge\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", #0.0";
};

op fcmge_v2dv2dv2d( 0b01101110011[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmge_v2dv2dv2d.var format : {char const*} = {"908"};

fcmge_v2dv2dv2d.disasm = {
  sink << "fcmge\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fcmge_v2dz( 0b0110111011100000110010[22] : rn[5] : rd[5] );
fcmge_v2dz.var format : {char const*} = {"2392"};

fcmge_v2dz.disasm = {
  sink << "fcmge\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", #0.0";
};

op fcmge_v2sv2sv2s( 0b00101110001[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmge_v2sv2sv2s.var format : {char const*} = {"1035"};

fcmge_v2sv2sv2s.disasm = {
  sink << "fcmge\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fcmge_v2sz( 0b0010111010100000110010[22] : rn[5] : rd[5] );
fcmge_v2sz.var format : {char const*} = {"2451"};

fcmge_v2sz.disasm = {
  sink << "fcmge\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", #0.0";
};

op fcmge_v4sv4sv4s( 0b01101110001[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmge_v4sv4sv4s.var format : {char const*} = {"1214"};

fcmge_v4sv4sv4s.disasm = {
  sink << "fcmge\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fcmge_v4sz( 0b0110111010100000110010[22] : rn[5] : rd[5] );
fcmge_v4sz.var format : {char const*} = {"2534"};

fcmge_v4sz.disasm = {
  sink << "fcmge\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", #0.0";
};

op fcmgt_ddd( 0b01111110111[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmgt_ddd.var format : {char const*} = {"720"};

fcmgt_ddd.disasm = {
  sink << "fcmgt\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op fcmgt_dz( 0b0101111011100000110010[22] : rn[5] : rd[5] );
fcmgt_dz.var format : {char const*} = {"2217"};

fcmgt_dz.disasm = {
  sink << "fcmgt\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", #0.0";
};

op fcmgt_sss( 0b01111110101[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmgt_sss.var format : {char const*} = {"797"};

fcmgt_sss.disasm = {
  sink << "fcmgt\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op fcmgt_sz( 0b0101111010100000110010[22] : rn[5] : rd[5] );
fcmgt_sz.var format : {char const*} = {"2298"};

fcmgt_sz.disasm = {
  sink << "fcmgt\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", #0.0";
};

op fcmgt_v2dv2dv2d( 0b01101110111[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmgt_v2dv2dv2d.var format : {char const*} = {"909"};

fcmgt_v2dv2dv2d.disasm = {
  sink << "fcmgt\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fcmgt_v2dz( 0b0100111011100000110010[22] : rn[5] : rd[5] );
fcmgt_v2dz.var format : {char const*} = {"2393"};

fcmgt_v2dz.disasm = {
  sink << "fcmgt\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", #0.0";
};

op fcmgt_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmgt_v2sv2sv2s.var format : {char const*} = {"1036"};

fcmgt_v2sv2sv2s.disasm = {
  sink << "fcmgt\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fcmgt_v2sz( 0b0000111010100000110010[22] : rn[5] : rd[5] );
fcmgt_v2sz.var format : {char const*} = {"2452"};

fcmgt_v2sz.disasm = {
  sink << "fcmgt\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", #0.0";
};

op fcmgt_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b111001[6] : rn[5] : rd[5] );
fcmgt_v4sv4sv4s.var format : {char const*} = {"1215"};

fcmgt_v4sv4sv4s.disasm = {
  sink << "fcmgt\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fcmgt_v4sz( 0b0100111010100000110010[22] : rn[5] : rd[5] );
fcmgt_v4sz.var format : {char const*} = {"2535"};

fcmgt_v4sz.disasm = {
  sink << "fcmgt\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", #0.0";
};

op fcmle_dz( 0b0111111011100000110110[22] : rn[5] : rd[5] );
fcmle_dz.var format : {char const*} = {"2218"};

fcmle_dz.disasm = {
  sink << "fcmle\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", #0.0";
};

op fcmle_sz( 0b0111111010100000110110[22] : rn[5] : rd[5] );
fcmle_sz.var format : {char const*} = {"2299"};

fcmle_sz.disasm = {
  sink << "fcmle\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", #0.0";
};

op fcmle_v2dz( 0b0110111011100000110110[22] : rn[5] : rd[5] );
fcmle_v2dz.var format : {char const*} = {"2394"};

fcmle_v2dz.disasm = {
  sink << "fcmle\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", #0.0";
};

op fcmle_v2sz( 0b0010111010100000110110[22] : rn[5] : rd[5] );
fcmle_v2sz.var format : {char const*} = {"2453"};

fcmle_v2sz.disasm = {
  sink << "fcmle\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", #0.0";
};

op fcmle_v4sz( 0b0110111010100000110110[22] : rn[5] : rd[5] );
fcmle_v4sz.var format : {char const*} = {"2536"};

fcmle_v4sz.disasm = {
  sink << "fcmle\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", #0.0";
};

op fcmlt_dz( 0b0101111011100000111010[22] : rn[5] : rd[5] );
fcmlt_dz.var format : {char const*} = {"2219"};

fcmlt_dz.disasm = {
  sink << "fcmlt\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", #0.0";
};

op fcmlt_sz( 0b0101111010100000111010[22] : rn[5] : rd[5] );
fcmlt_sz.var format : {char const*} = {"2300"};

fcmlt_sz.disasm = {
  sink << "fcmlt\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", #0.0";
};

op fcmlt_v2dz( 0b0100111011100000111010[22] : rn[5] : rd[5] );
fcmlt_v2dz.var format : {char const*} = {"2395"};

fcmlt_v2dz.disasm = {
  sink << "fcmlt\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", #0.0";
};

op fcmlt_v2sz( 0b0000111010100000111010[22] : rn[5] : rd[5] );
fcmlt_v2sz.var format : {char const*} = {"2454"};

fcmlt_v2sz.disasm = {
  sink << "fcmlt\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", #0.0";
};

op fcmlt_v4sz( 0b0100111010100000111010[22] : rn[5] : rd[5] );
fcmlt_v4sz.var format : {char const*} = {"2537"};

fcmlt_v4sz.disasm = {
  sink << "fcmlt\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", #0.0";
};

op fcmp_d( 0b00011110011[11] : rm[5] : 0b001000[6] : rn[5] : 0b00000[5] );
fcmp_d.var format : {char const*} = {"2091"};

fcmp_d.disasm = {
  sink << "fcmp\t" << DisasmD(rn) << ", " << DisasmD(rm);
};

op fcmp_dz( 0b00011110011[11] : rm[5] : 0b001000[6] : rn[5] : 0b01000[5] );
fcmp_dz.var reject : {Reject} = {rm != 0}, format : {char const*} = {"2089"};

fcmp_dz.disasm = {
  sink << "fcmp\t" << DisasmD(rn) << ", #0.0";
};

op fcmp_s( 0b00011110001[11] : rm[5] : 0b001000[6] : rn[5] : 0b00000[5] );
fcmp_s.var format : {char const*} = {"2095"};

fcmp_s.disasm = {
  sink << "fcmp\t" << DisasmS(rn) << ", " << DisasmS(rm);
};

op fcmp_sz( 0b00011110001[11] : rm[5] : 0b001000[6] : rn[5] : 0b01000[5] );
fcmp_sz.var reject : {Reject} = {rm != 0}, format : {char const*} = {"2093"};

fcmp_sz.disasm = {
  sink << "fcmp\t" << DisasmS(rn) << ", #0.0";
};

op fcmpe_d( 0b00011110011[11] : rm[5] : 0b001000[6] : rn[5] : 0b10000[5] );
fcmpe_d.var format : {char const*} = {"2092"};

fcmpe_d.disasm = {
  sink << "fcmpe\t" << DisasmD(rn) << ", " << DisasmD(rm);
};

op fcmpe_dz( 0b00011110011[11] : rm[5] : 0b001000[6] : rn[5] : 0b11000[5] );
fcmpe_dz.var reject : {Reject} = {rm != 0}, format : {char const*} = {"2090"};

fcmpe_dz.disasm = {
  sink << "fcmpe\t" << DisasmD(rn) << ", #0.0";
};

op fcmpe_s( 0b00011110001[11] : rm[5] : 0b001000[6] : rn[5] : 0b10000[5] );
fcmpe_s.var format : {char const*} = {"2096"};

fcmpe_s.disasm = {
  sink << "fcmpe\t" << DisasmS(rn) << ", " << DisasmS(rm);
};

op fcmpe_sz( 0b00011110001[11] : rm[5] : 0b001000[6] : rn[5] : 0b11000[5] );
fcmpe_sz.var reject : {Reject} = {rm != 0}, format : {char const*} = {"2094"};

fcmpe_sz.disasm = {
  sink << "fcmpe\t" << DisasmS(rn) << ", #0.0";
};

op fcsel_d( 0b00011110011[11] : rm[5] : cond[4] : 0b11[2] : rn[5] : rd[5] );
fcsel_d.var format : {char const*} = {"265"};

fcsel_d.disasm = {
  sink << "fcsel\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm) << ", " << DisasmCond(cond);
};

op fcsel_s( 0b00011110001[11] : rm[5] : cond[4] : 0b11[2] : rn[5] : rd[5] );
fcsel_s.var format : {char const*} = {"284"};

fcsel_s.disasm = {
  sink << "fcsel\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm) << ", " << DisasmCond(cond);
};

op fcvt_dh( 0b0001111011100010110000[22] : rn[5] : rd[5] );
fcvt_dh.var format : {char const*} = {"2220"};

fcvt_dh.disasm = {
  sink << "fcvt\t" << DisasmD(rd) << ", " << DisasmH(rn);
};

op fcvt_ds( 0b0001111000100010110000[22] : rn[5] : rd[5] );
fcvt_ds.var format : {char const*} = {"2221"};

fcvt_ds.disasm = {
  sink << "fcvt\t" << DisasmD(rd) << ", " << DisasmS(rn);
};

op fcvt_hd( 0b0001111001100011110000[22] : rn[5] : rd[5] );
fcvt_hd.var format : {char const*} = {"2236"};

fcvt_hd.disasm = {
  sink << "fcvt\t" << DisasmH(rd) << ", " << DisasmD(rn);
};

op fcvt_hs( 0b0001111000100011110000[22] : rn[5] : rd[5] );
fcvt_hs.var format : {char const*} = {"2241"};

fcvt_hs.disasm = {
  sink << "fcvt\t" << DisasmH(rd) << ", " << DisasmS(rn);
};

op fcvt_sd( 0b0001111001100010010000[22] : rn[5] : rd[5] );
fcvt_sd.var format : {char const*} = {"2259"};

fcvt_sd.disasm = {
  sink << "fcvt\t" << DisasmS(rd) << ", " << DisasmD(rn);
};

op fcvt_sh( 0b0001111011100010010000[22] : rn[5] : rd[5] );
fcvt_sh.var format : {char const*} = {"2264"};

fcvt_sh.disasm = {
  sink << "fcvt\t" << DisasmS(rd) << ", " << DisasmH(rn);
};

op fcvtas_dd( 0b0101111001100001110010[22] : rn[5] : rd[5] );
fcvtas_dd.var format : {char const*} = {"2180"};

fcvtas_dd.disasm = {
  sink << "fcvtas\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op fcvtas_ss( 0b0101111000100001110010[22] : rn[5] : rd[5] );
fcvtas_ss.var format : {char const*} = {"2266"};

fcvtas_ss.disasm = {
  sink << "fcvtas\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op fcvtas_v2d2d( 0b0100111001100001110010[22] : rn[5] : rd[5] );
fcvtas_v2d2d.var format : {char const*} = {"2358"};

fcvtas_v2d2d.disasm = {
  sink << "fcvtas\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op fcvtas_v2s2s( 0b0000111000100001110010[22] : rn[5] : rd[5] );
fcvtas_v2s2s.var format : {char const*} = {"2414"};

fcvtas_v2s2s.disasm = {
  sink << "fcvtas\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op fcvtas_v4s4s( 0b0100111000100001110010[22] : rn[5] : rd[5] );
fcvtas_v4s4s.var format : {char const*} = {"2495"};

fcvtas_v4s4s.disasm = {
  sink << "fcvtas\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op fcvtas_wd( 0b0001111001100100000000[22] : rn[5] : rd[5] );
fcvtas_wd.var format : {char const*} = {"2593"};

fcvtas_wd.disasm = {
  sink << "fcvtas\t" << DisasmGZWR(rd) << ", " << DisasmD(rn);
};

op fcvtas_ws( 0b0001111000100100000000[22] : rn[5] : rd[5] );
fcvtas_ws.var format : {char const*} = {"2604"};

fcvtas_ws.disasm = {
  sink << "fcvtas\t" << DisasmGZWR(rd) << ", " << DisasmS(rn);
};

op fcvtas_xd( 0b1001111001100100000000[22] : rn[5] : rd[5] );
fcvtas_xd.var format : {char const*} = {"2625"};

fcvtas_xd.disasm = {
  sink << "fcvtas\t" << DisasmGZXR(rd) << ", " << DisasmD(rn);
};

op fcvtas_xs( 0b1001111000100100000000[22] : rn[5] : rd[5] );
fcvtas_xs.var format : {char const*} = {"2636"};

fcvtas_xs.disasm = {
  sink << "fcvtas\t" << DisasmGZXR(rd) << ", " << DisasmS(rn);
};

op fcvtau_dd( 0b0111111001100001110010[22] : rn[5] : rd[5] );
fcvtau_dd.var format : {char const*} = {"2181"};

fcvtau_dd.disasm = {
  sink << "fcvtau\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op fcvtau_ss( 0b0111111000100001110010[22] : rn[5] : rd[5] );
fcvtau_ss.var format : {char const*} = {"2267"};

fcvtau_ss.disasm = {
  sink << "fcvtau\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op fcvtau_v2d2d( 0b0110111001100001110010[22] : rn[5] : rd[5] );
fcvtau_v2d2d.var format : {char const*} = {"2359"};

fcvtau_v2d2d.disasm = {
  sink << "fcvtau\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op fcvtau_v2s2s( 0b0010111000100001110010[22] : rn[5] : rd[5] );
fcvtau_v2s2s.var format : {char const*} = {"2415"};

fcvtau_v2s2s.disasm = {
  sink << "fcvtau\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op fcvtau_v4s4s( 0b0110111000100001110010[22] : rn[5] : rd[5] );
fcvtau_v4s4s.var format : {char const*} = {"2496"};

fcvtau_v4s4s.disasm = {
  sink << "fcvtau\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op fcvtau_wd( 0b0001111001100101000000[22] : rn[5] : rd[5] );
fcvtau_wd.var format : {char const*} = {"2594"};

fcvtau_wd.disasm = {
  sink << "fcvtau\t" << DisasmGZWR(rd) << ", " << DisasmD(rn);
};

op fcvtau_ws( 0b0001111000100101000000[22] : rn[5] : rd[5] );
fcvtau_ws.var format : {char const*} = {"2605"};

fcvtau_ws.disasm = {
  sink << "fcvtau\t" << DisasmGZWR(rd) << ", " << DisasmS(rn);
};

op fcvtau_xd( 0b1001111001100101000000[22] : rn[5] : rd[5] );
fcvtau_xd.var format : {char const*} = {"2626"};

fcvtau_xd.disasm = {
  sink << "fcvtau\t" << DisasmGZXR(rd) << ", " << DisasmD(rn);
};

op fcvtau_xs( 0b1001111000100101000000[22] : rn[5] : rd[5] );
fcvtau_xs.var format : {char const*} = {"2637"};

fcvtau_xs.disasm = {
  sink << "fcvtau\t" << DisasmGZXR(rd) << ", " << DisasmS(rn);
};

op fcvtl2_v2d4s( 0b0100111001100001011110[22] : rn[5] : rd[5] );
fcvtl2_v2d4s.var format : {char const*} = {"2398"};

fcvtl2_v2d4s.disasm = {
  sink << "fcvtl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2);
};

op fcvtl2_v4s8h( 0b0100111000100001011110[22] : rn[5] : rd[5] );
fcvtl2_v4s8h.var format : {char const*} = {"2538"};

fcvtl2_v4s8h.disasm = {
  sink << "fcvtl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1);
};

op fcvtl_v2d2s( 0b0000111001100001011110[22] : rn[5] : rd[5] );
fcvtl_v2d2s.var format : {char const*} = {"2396"};

fcvtl_v2d2s.disasm = {
  sink << "fcvtl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2);
};

op fcvtl_v4s4h( 0b0000111000100001011110[22] : rn[5] : rd[5] );
fcvtl_v4s4h.var format : {char const*} = {"2489"};

fcvtl_v4s4h.disasm = {
  sink << "fcvtl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1);
};

op fcvtms_dd( 0b0101111001100001101110[22] : rn[5] : rd[5] );
fcvtms_dd.var format : {char const*} = {"2182"};

fcvtms_dd.disasm = {
  sink << "fcvtms\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op fcvtms_ss( 0b0101111000100001101110[22] : rn[5] : rd[5] );
fcvtms_ss.var format : {char const*} = {"2268"};

fcvtms_ss.disasm = {
  sink << "fcvtms\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op fcvtms_v2d2d( 0b0100111001100001101110[22] : rn[5] : rd[5] );
fcvtms_v2d2d.var format : {char const*} = {"2360"};

fcvtms_v2d2d.disasm = {
  sink << "fcvtms\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op fcvtms_v2s2s( 0b0000111000100001101110[22] : rn[5] : rd[5] );
fcvtms_v2s2s.var format : {char const*} = {"2416"};

fcvtms_v2s2s.disasm = {
  sink << "fcvtms\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op fcvtms_v4s4s( 0b0100111000100001101110[22] : rn[5] : rd[5] );
fcvtms_v4s4s.var format : {char const*} = {"2497"};

fcvtms_v4s4s.disasm = {
  sink << "fcvtms\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op fcvtms_wd( 0b0001111001110000000000[22] : rn[5] : rd[5] );
fcvtms_wd.var format : {char const*} = {"2595"};

fcvtms_wd.disasm = {
  sink << "fcvtms\t" << DisasmGZWR(rd) << ", " << DisasmD(rn);
};

op fcvtms_ws( 0b0001111000110000000000[22] : rn[5] : rd[5] );
fcvtms_ws.var format : {char const*} = {"2606"};

fcvtms_ws.disasm = {
  sink << "fcvtms\t" << DisasmGZWR(rd) << ", " << DisasmS(rn);
};

op fcvtms_xd( 0b1001111001110000000000[22] : rn[5] : rd[5] );
fcvtms_xd.var format : {char const*} = {"2627"};

fcvtms_xd.disasm = {
  sink << "fcvtms\t" << DisasmGZXR(rd) << ", " << DisasmD(rn);
};

op fcvtms_xs( 0b1001111000110000000000[22] : rn[5] : rd[5] );
fcvtms_xs.var format : {char const*} = {"2638"};

fcvtms_xs.disasm = {
  sink << "fcvtms\t" << DisasmGZXR(rd) << ", " << DisasmS(rn);
};

op fcvtmu_dd( 0b0111111001100001101110[22] : rn[5] : rd[5] );
fcvtmu_dd.var format : {char const*} = {"2183"};

fcvtmu_dd.disasm = {
  sink << "fcvtmu\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op fcvtmu_ss( 0b0111111000100001101110[22] : rn[5] : rd[5] );
fcvtmu_ss.var format : {char const*} = {"2269"};

fcvtmu_ss.disasm = {
  sink << "fcvtmu\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op fcvtmu_v2d2d( 0b0110111001100001101110[22] : rn[5] : rd[5] );
fcvtmu_v2d2d.var format : {char const*} = {"2361"};

fcvtmu_v2d2d.disasm = {
  sink << "fcvtmu\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op fcvtmu_v2s2s( 0b0010111000100001101110[22] : rn[5] : rd[5] );
fcvtmu_v2s2s.var format : {char const*} = {"2417"};

fcvtmu_v2s2s.disasm = {
  sink << "fcvtmu\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op fcvtmu_v4s4s( 0b0110111000100001101110[22] : rn[5] : rd[5] );
fcvtmu_v4s4s.var format : {char const*} = {"2498"};

fcvtmu_v4s4s.disasm = {
  sink << "fcvtmu\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op fcvtmu_wd( 0b0001111001110001000000[22] : rn[5] : rd[5] );
fcvtmu_wd.var format : {char const*} = {"2596"};

fcvtmu_wd.disasm = {
  sink << "fcvtmu\t" << DisasmGZWR(rd) << ", " << DisasmD(rn);
};

op fcvtmu_ws( 0b0001111000110001000000[22] : rn[5] : rd[5] );
fcvtmu_ws.var format : {char const*} = {"2607"};

fcvtmu_ws.disasm = {
  sink << "fcvtmu\t" << DisasmGZWR(rd) << ", " << DisasmS(rn);
};

op fcvtmu_xd( 0b1001111001110001000000[22] : rn[5] : rd[5] );
fcvtmu_xd.var format : {char const*} = {"2628"};

fcvtmu_xd.disasm = {
  sink << "fcvtmu\t" << DisasmGZXR(rd) << ", " << DisasmD(rn);
};

op fcvtmu_xs( 0b1001111000110001000000[22] : rn[5] : rd[5] );
fcvtmu_xs.var format : {char const*} = {"2639"};

fcvtmu_xs.disasm = {
  sink << "fcvtmu\t" << DisasmGZXR(rd) << ", " << DisasmS(rn);
};

op fcvtn2_v4s2d( 0b0100111001100001011010[22] : rn[5] : rd[5] );
fcvtn2_v4s2d.var format : {char const*} = {"2483"};

fcvtn2_v4s2d.disasm = {
  sink << "fcvtn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3);
};

op fcvtn2_v8h4s( 0b0100111000100001011010[22] : rn[5] : rd[5] );
fcvtn2_v8h4s.var format : {char const*} = {"2572"};

fcvtn2_v8h4s.disasm = {
  sink << "fcvtn2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2);
};

op fcvtn_v2s2d( 0b0000111001100001011010[22] : rn[5] : rd[5] );
fcvtn_v2s2d.var format : {char const*} = {"2404"};

fcvtn_v2s2d.disasm = {
  sink << "fcvtn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3);
};

op fcvtn_v4h4s( 0b0000111000100001011010[22] : rn[5] : rd[5] );
fcvtn_v4h4s.var format : {char const*} = {"2474"};

fcvtn_v4h4s.disasm = {
  sink << "fcvtn\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2);
};

op fcvtns_dd( 0b0101111001100001101010[22] : rn[5] : rd[5] );
fcvtns_dd.var format : {char const*} = {"2184"};

fcvtns_dd.disasm = {
  sink << "fcvtns\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op fcvtns_ss( 0b0101111000100001101010[22] : rn[5] : rd[5] );
fcvtns_ss.var format : {char const*} = {"2270"};

fcvtns_ss.disasm = {
  sink << "fcvtns\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op fcvtns_v2d2d( 0b0100111001100001101010[22] : rn[5] : rd[5] );
fcvtns_v2d2d.var format : {char const*} = {"2362"};

fcvtns_v2d2d.disasm = {
  sink << "fcvtns\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op fcvtns_v2s2s( 0b0000111000100001101010[22] : rn[5] : rd[5] );
fcvtns_v2s2s.var format : {char const*} = {"2418"};

fcvtns_v2s2s.disasm = {
  sink << "fcvtns\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op fcvtns_v4s4s( 0b0100111000100001101010[22] : rn[5] : rd[5] );
fcvtns_v4s4s.var format : {char const*} = {"2499"};

fcvtns_v4s4s.disasm = {
  sink << "fcvtns\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op fcvtns_wd( 0b0001111001100000000000[22] : rn[5] : rd[5] );
fcvtns_wd.var format : {char const*} = {"2597"};

fcvtns_wd.disasm = {
  sink << "fcvtns\t" << DisasmGZWR(rd) << ", " << DisasmD(rn);
};

op fcvtns_ws( 0b0001111000100000000000[22] : rn[5] : rd[5] );
fcvtns_ws.var format : {char const*} = {"2608"};

fcvtns_ws.disasm = {
  sink << "fcvtns\t" << DisasmGZWR(rd) << ", " << DisasmS(rn);
};

op fcvtns_xd( 0b1001111001100000000000[22] : rn[5] : rd[5] );
fcvtns_xd.var format : {char const*} = {"2629"};

fcvtns_xd.disasm = {
  sink << "fcvtns\t" << DisasmGZXR(rd) << ", " << DisasmD(rn);
};

op fcvtns_xs( 0b1001111000100000000000[22] : rn[5] : rd[5] );
fcvtns_xs.var format : {char const*} = {"2640"};

fcvtns_xs.disasm = {
  sink << "fcvtns\t" << DisasmGZXR(rd) << ", " << DisasmS(rn);
};

op fcvtnu_dd( 0b0111111001100001101010[22] : rn[5] : rd[5] );
fcvtnu_dd.var format : {char const*} = {"2185"};

fcvtnu_dd.disasm = {
  sink << "fcvtnu\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op fcvtnu_ss( 0b0111111000100001101010[22] : rn[5] : rd[5] );
fcvtnu_ss.var format : {char const*} = {"2271"};

fcvtnu_ss.disasm = {
  sink << "fcvtnu\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op fcvtnu_v2d2d( 0b0110111001100001101010[22] : rn[5] : rd[5] );
fcvtnu_v2d2d.var format : {char const*} = {"2363"};

fcvtnu_v2d2d.disasm = {
  sink << "fcvtnu\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op fcvtnu_v2s2s( 0b0010111000100001101010[22] : rn[5] : rd[5] );
fcvtnu_v2s2s.var format : {char const*} = {"2419"};

fcvtnu_v2s2s.disasm = {
  sink << "fcvtnu\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op fcvtnu_v4s4s( 0b0110111000100001101010[22] : rn[5] : rd[5] );
fcvtnu_v4s4s.var format : {char const*} = {"2500"};

fcvtnu_v4s4s.disasm = {
  sink << "fcvtnu\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op fcvtnu_wd( 0b0001111001100001000000[22] : rn[5] : rd[5] );
fcvtnu_wd.var format : {char const*} = {"2598"};

fcvtnu_wd.disasm = {
  sink << "fcvtnu\t" << DisasmGZWR(rd) << ", " << DisasmD(rn);
};

op fcvtnu_ws( 0b0001111000100001000000[22] : rn[5] : rd[5] );
fcvtnu_ws.var format : {char const*} = {"2609"};

fcvtnu_ws.disasm = {
  sink << "fcvtnu\t" << DisasmGZWR(rd) << ", " << DisasmS(rn);
};

op fcvtnu_xd( 0b1001111001100001000000[22] : rn[5] : rd[5] );
fcvtnu_xd.var format : {char const*} = {"2630"};

fcvtnu_xd.disasm = {
  sink << "fcvtnu\t" << DisasmGZXR(rd) << ", " << DisasmD(rn);
};

op fcvtnu_xs( 0b1001111000100001000000[22] : rn[5] : rd[5] );
fcvtnu_xs.var format : {char const*} = {"2641"};

fcvtnu_xs.disasm = {
  sink << "fcvtnu\t" << DisasmGZXR(rd) << ", " << DisasmS(rn);
};

op fcvtps_dd( 0b0101111011100001101010[22] : rn[5] : rd[5] );
fcvtps_dd.var format : {char const*} = {"2186"};

fcvtps_dd.disasm = {
  sink << "fcvtps\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op fcvtps_ss( 0b0101111010100001101010[22] : rn[5] : rd[5] );
fcvtps_ss.var format : {char const*} = {"2272"};

fcvtps_ss.disasm = {
  sink << "fcvtps\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op fcvtps_v2d2d( 0b0100111011100001101010[22] : rn[5] : rd[5] );
fcvtps_v2d2d.var format : {char const*} = {"2364"};

fcvtps_v2d2d.disasm = {
  sink << "fcvtps\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op fcvtps_v2s2s( 0b0000111010100001101010[22] : rn[5] : rd[5] );
fcvtps_v2s2s.var format : {char const*} = {"2420"};

fcvtps_v2s2s.disasm = {
  sink << "fcvtps\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op fcvtps_v4s4s( 0b0100111010100001101010[22] : rn[5] : rd[5] );
fcvtps_v4s4s.var format : {char const*} = {"2501"};

fcvtps_v4s4s.disasm = {
  sink << "fcvtps\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op fcvtps_wd( 0b0001111001101000000000[22] : rn[5] : rd[5] );
fcvtps_wd.var format : {char const*} = {"2599"};

fcvtps_wd.disasm = {
  sink << "fcvtps\t" << DisasmGZWR(rd) << ", " << DisasmD(rn);
};

op fcvtps_ws( 0b0001111000101000000000[22] : rn[5] : rd[5] );
fcvtps_ws.var format : {char const*} = {"2610"};

fcvtps_ws.disasm = {
  sink << "fcvtps\t" << DisasmGZWR(rd) << ", " << DisasmS(rn);
};

op fcvtps_xd( 0b1001111001101000000000[22] : rn[5] : rd[5] );
fcvtps_xd.var format : {char const*} = {"2631"};

fcvtps_xd.disasm = {
  sink << "fcvtps\t" << DisasmGZXR(rd) << ", " << DisasmD(rn);
};

op fcvtps_xs( 0b1001111000101000000000[22] : rn[5] : rd[5] );
fcvtps_xs.var format : {char const*} = {"2642"};

fcvtps_xs.disasm = {
  sink << "fcvtps\t" << DisasmGZXR(rd) << ", " << DisasmS(rn);
};

op fcvtpu_dd( 0b0111111011100001101010[22] : rn[5] : rd[5] );
fcvtpu_dd.var format : {char const*} = {"2187"};

fcvtpu_dd.disasm = {
  sink << "fcvtpu\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op fcvtpu_ss( 0b0111111010100001101010[22] : rn[5] : rd[5] );
fcvtpu_ss.var format : {char const*} = {"2273"};

fcvtpu_ss.disasm = {
  sink << "fcvtpu\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op fcvtpu_v2d2d( 0b0110111011100001101010[22] : rn[5] : rd[5] );
fcvtpu_v2d2d.var format : {char const*} = {"2365"};

fcvtpu_v2d2d.disasm = {
  sink << "fcvtpu\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op fcvtpu_v2s2s( 0b0010111010100001101010[22] : rn[5] : rd[5] );
fcvtpu_v2s2s.var format : {char const*} = {"2421"};

fcvtpu_v2s2s.disasm = {
  sink << "fcvtpu\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op fcvtpu_v4s4s( 0b0110111010100001101010[22] : rn[5] : rd[5] );
fcvtpu_v4s4s.var format : {char const*} = {"2502"};

fcvtpu_v4s4s.disasm = {
  sink << "fcvtpu\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op fcvtpu_wd( 0b0001111001101001000000[22] : rn[5] : rd[5] );
fcvtpu_wd.var format : {char const*} = {"2600"};

fcvtpu_wd.disasm = {
  sink << "fcvtpu\t" << DisasmGZWR(rd) << ", " << DisasmD(rn);
};

op fcvtpu_ws( 0b0001111000101001000000[22] : rn[5] : rd[5] );
fcvtpu_ws.var format : {char const*} = {"2611"};

fcvtpu_ws.disasm = {
  sink << "fcvtpu\t" << DisasmGZWR(rd) << ", " << DisasmS(rn);
};

op fcvtpu_xd( 0b1001111001101001000000[22] : rn[5] : rd[5] );
fcvtpu_xd.var format : {char const*} = {"2632"};

fcvtpu_xd.disasm = {
  sink << "fcvtpu\t" << DisasmGZXR(rd) << ", " << DisasmD(rn);
};

op fcvtpu_xs( 0b1001111000101001000000[22] : rn[5] : rd[5] );
fcvtpu_xs.var format : {char const*} = {"2643"};

fcvtpu_xs.disasm = {
  sink << "fcvtpu\t" << DisasmGZXR(rd) << ", " << DisasmS(rn);
};

op fcvtxn2_v4s2d( 0b0110111001100001011010[22] : rn[5] : rd[5] );
fcvtxn2_v4s2d.var format : {char const*} = {"2484"};

fcvtxn2_v4s2d.disasm = {
  sink << "fcvtxn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3);
};

op fcvtxn_sd( 0b0111111001100001011010[22] : rn[5] : rd[5] );
fcvtxn_sd.var format : {char const*} = {"2260"};

fcvtxn_sd.disasm = {
  sink << "fcvtxn\t" << DisasmS(rd) << ", " << DisasmD(rn);
};

op fcvtxn_v2s2d( 0b0010111001100001011010[22] : rn[5] : rd[5] );
fcvtxn_v2s2d.var format : {char const*} = {"2405"};

fcvtxn_v2s2d.disasm = {
  sink << "fcvtxn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3);
};

op fcvtzs_dd( 0b0101111011100001101110[22] : rn[5] : rd[5] );
fcvtzs_dd.var format : {char const*} = {"2188"};

fcvtzs_dd.disasm = {
  sink << "fcvtzs\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op fcvtzs_ddi( 0b0101111101[10] : lro[6] : 0b111111[6] : rn[5] : rd[5] );
fcvtzs_ddi.var format : {char const*} = {"535"}, shift : {unsigned} = {64 - lro};

fcvtzs_ddi.disasm = {
  sink << "fcvtzs\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op fcvtzs_ss( 0b0101111010100001101110[22] : rn[5] : rd[5] );
fcvtzs_ss.var format : {char const*} = {"2274"};

fcvtzs_ss.disasm = {
  sink << "fcvtzs\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op fcvtzs_ssi( 0b01011111001[11] : lro[5] : 0b111111[6] : rn[5] : rd[5] );
fcvtzs_ssi.var format : {char const*} = {"784"}, shift : {unsigned} = {32 - lro};

fcvtzs_ssi.disasm = {
  sink << "fcvtzs\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmI(shift);
};

op fcvtzs_v2d2d( 0b0100111011100001101110[22] : rn[5] : rd[5] );
fcvtzs_v2d2d.var format : {char const*} = {"2366"};

fcvtzs_v2d2d.disasm = {
  sink << "fcvtzs\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op fcvtzs_v2d2di( 0b0100111101[10] : lro[6] : 0b111111[6] : rn[5] : rd[5] );
fcvtzs_v2d2di.var format : {char const*} = {"553"}, shift : {unsigned} = {64 - lro};

fcvtzs_v2d2di.disasm = {
  sink << "fcvtzs\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op fcvtzs_v2s2s( 0b0000111010100001101110[22] : rn[5] : rd[5] );
fcvtzs_v2s2s.var format : {char const*} = {"2422"};

fcvtzs_v2s2s.disasm = {
  sink << "fcvtzs\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op fcvtzs_v2s2si( 0b00001111001[11] : lro[5] : 0b111111[6] : rn[5] : rd[5] );
fcvtzs_v2s2si.var format : {char const*} = {"1003"}, shift : {unsigned} = {32 - lro};

fcvtzs_v2s2si.disasm = {
  sink << "fcvtzs\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(shift);
};

op fcvtzs_v4s4s( 0b0100111010100001101110[22] : rn[5] : rd[5] );
fcvtzs_v4s4s.var format : {char const*} = {"2503"};

fcvtzs_v4s4s.disasm = {
  sink << "fcvtzs\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op fcvtzs_v4s4si( 0b01001111001[11] : lro[5] : 0b111111[6] : rn[5] : rd[5] );
fcvtzs_v4s4si.var format : {char const*} = {"1178"}, shift : {unsigned} = {32 - lro};

fcvtzs_v4s4si.disasm = {
  sink << "fcvtzs\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op fcvtzs_wd( 0b0001111001111000000000[22] : rn[5] : rd[5] );
fcvtzs_wd.var format : {char const*} = {"2601"};

fcvtzs_wd.disasm = {
  sink << "fcvtzs\t" << DisasmGZWR(rd) << ", " << DisasmD(rn);
};

op fcvtzs_wdi( 0b00011110010110001[17] : scale[5] : rn[5] : rd[5] );
fcvtzs_wdi.var fbits : {unsigned} = {32-scale}, format : {char const*} = {"1799"};

fcvtzs_wdi.disasm = {
  sink << "fcvtzs\t" << DisasmGZWR(rd) << ", " << DisasmD(rn) << ", " << DisasmI(fbits);
};

op fcvtzs_ws( 0b0001111000111000000000[22] : rn[5] : rd[5] );
fcvtzs_ws.var format : {char const*} = {"2612"};

fcvtzs_ws.disasm = {
  sink << "fcvtzs\t" << DisasmGZWR(rd) << ", " << DisasmS(rn);
};

op fcvtzs_wsi( 0b00011110000110001[17] : scale[5] : rn[5] : rd[5] );
fcvtzs_wsi.var fbits : {unsigned} = {32-scale}, format : {char const*} = {"1801"};

fcvtzs_wsi.disasm = {
  sink << "fcvtzs\t" << DisasmGZWR(rd) << ", " << DisasmS(rn) << ", " << DisasmI(fbits);
};

op fcvtzs_xd( 0b1001111001111000000000[22] : rn[5] : rd[5] );
fcvtzs_xd.var format : {char const*} = {"2633"};

fcvtzs_xd.disasm = {
  sink << "fcvtzs\t" << DisasmGZXR(rd) << ", " << DisasmD(rn);
};

op fcvtzs_xdi( 0b1001111001011000[16] : scale[6] : rn[5] : rd[5] );
fcvtzs_xdi.var fbits : {unsigned} = {64-scale}, format : {char const*} = {"691"};

fcvtzs_xdi.disasm = {
  sink << "fcvtzs\t" << DisasmGZXR(rd) << ", " << DisasmD(rn) << ", " << DisasmI(fbits);
};

op fcvtzs_xs( 0b1001111000111000000000[22] : rn[5] : rd[5] );
fcvtzs_xs.var format : {char const*} = {"2644"};

fcvtzs_xs.disasm = {
  sink << "fcvtzs\t" << DisasmGZXR(rd) << ", " << DisasmS(rn);
};

op fcvtzs_xsi( 0b1001111000011000[16] : scale[6] : rn[5] : rd[5] );
fcvtzs_xsi.var fbits : {unsigned} = {64-scale}, format : {char const*} = {"693"};

fcvtzs_xsi.disasm = {
  sink << "fcvtzs\t" << DisasmGZXR(rd) << ", " << DisasmS(rn) << ", " << DisasmI(fbits);
};

op fcvtzu_dd( 0b0111111011100001101110[22] : rn[5] : rd[5] );
fcvtzu_dd.var format : {char const*} = {"2189"};

fcvtzu_dd.disasm = {
  sink << "fcvtzu\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op fcvtzu_ddi( 0b0111111101[10] : lro[6] : 0b111111[6] : rn[5] : rd[5] );
fcvtzu_ddi.var format : {char const*} = {"536"}, shift : {unsigned} = {64 - lro};

fcvtzu_ddi.disasm = {
  sink << "fcvtzu\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op fcvtzu_ss( 0b0111111010100001101110[22] : rn[5] : rd[5] );
fcvtzu_ss.var format : {char const*} = {"2275"};

fcvtzu_ss.disasm = {
  sink << "fcvtzu\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op fcvtzu_ssi( 0b01111111001[11] : lro[5] : 0b111111[6] : rn[5] : rd[5] );
fcvtzu_ssi.var format : {char const*} = {"785"}, shift : {unsigned} = {32 - lro};

fcvtzu_ssi.disasm = {
  sink << "fcvtzu\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmI(shift);
};

op fcvtzu_v2d2d( 0b0110111011100001101110[22] : rn[5] : rd[5] );
fcvtzu_v2d2d.var format : {char const*} = {"2367"};

fcvtzu_v2d2d.disasm = {
  sink << "fcvtzu\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op fcvtzu_v2d2di( 0b0110111101[10] : lro[6] : 0b111111[6] : rn[5] : rd[5] );
fcvtzu_v2d2di.var format : {char const*} = {"554"}, shift : {unsigned} = {64 - lro};

fcvtzu_v2d2di.disasm = {
  sink << "fcvtzu\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op fcvtzu_v2s2s( 0b0010111010100001101110[22] : rn[5] : rd[5] );
fcvtzu_v2s2s.var format : {char const*} = {"2423"};

fcvtzu_v2s2s.disasm = {
  sink << "fcvtzu\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op fcvtzu_v2s2si( 0b00101111001[11] : lro[5] : 0b111111[6] : rn[5] : rd[5] );
fcvtzu_v2s2si.var format : {char const*} = {"1004"}, shift : {unsigned} = {32 - lro};

fcvtzu_v2s2si.disasm = {
  sink << "fcvtzu\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(shift);
};

op fcvtzu_v4s4s( 0b0110111010100001101110[22] : rn[5] : rd[5] );
fcvtzu_v4s4s.var format : {char const*} = {"2504"};

fcvtzu_v4s4s.disasm = {
  sink << "fcvtzu\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op fcvtzu_v4s4si( 0b01101111001[11] : lro[5] : 0b111111[6] : rn[5] : rd[5] );
fcvtzu_v4s4si.var format : {char const*} = {"1179"}, shift : {unsigned} = {32 - lro};

fcvtzu_v4s4si.disasm = {
  sink << "fcvtzu\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op fcvtzu_wd( 0b0001111001111001000000[22] : rn[5] : rd[5] );
fcvtzu_wd.var format : {char const*} = {"2602"};

fcvtzu_wd.disasm = {
  sink << "fcvtzu\t" << DisasmGZWR(rd) << ", " << DisasmD(rn);
};

op fcvtzu_wdi( 0b00011110010110011[17] : scale[5] : rn[5] : rd[5] );
fcvtzu_wdi.var fbits : {unsigned} = {32-scale}, format : {char const*} = {"1800"};

fcvtzu_wdi.disasm = {
  sink << "fcvtzu\t" << DisasmGZWR(rd) << ", " << DisasmD(rn) << ", " << DisasmI(fbits);
};

op fcvtzu_ws( 0b0001111000111001000000[22] : rn[5] : rd[5] );
fcvtzu_ws.var format : {char const*} = {"2613"};

fcvtzu_ws.disasm = {
  sink << "fcvtzu\t" << DisasmGZWR(rd) << ", " << DisasmS(rn);
};

op fcvtzu_wsi( 0b00011110000110011[17] : scale[5] : rn[5] : rd[5] );
fcvtzu_wsi.var fbits : {unsigned} = {32-scale}, format : {char const*} = {"1802"};

fcvtzu_wsi.disasm = {
  sink << "fcvtzu\t" << DisasmGZWR(rd) << ", " << DisasmS(rn) << ", " << DisasmI(fbits);
};

op fcvtzu_xd( 0b1001111001111001000000[22] : rn[5] : rd[5] );
fcvtzu_xd.var format : {char const*} = {"2634"};

fcvtzu_xd.disasm = {
  sink << "fcvtzu\t" << DisasmGZXR(rd) << ", " << DisasmD(rn);
};

op fcvtzu_xdi( 0b1001111001011001[16] : scale[6] : rn[5] : rd[5] );
fcvtzu_xdi.var fbits : {unsigned} = {64-scale}, format : {char const*} = {"692"};

fcvtzu_xdi.disasm = {
  sink << "fcvtzu\t" << DisasmGZXR(rd) << ", " << DisasmD(rn) << ", " << DisasmI(fbits);
};

op fcvtzu_xs( 0b1001111000111001000000[22] : rn[5] : rd[5] );
fcvtzu_xs.var format : {char const*} = {"2645"};

fcvtzu_xs.disasm = {
  sink << "fcvtzu\t" << DisasmGZXR(rd) << ", " << DisasmS(rn);
};

op fcvtzu_xsi( 0b1001111000011001[16] : scale[6] : rn[5] : rd[5] );
fcvtzu_xsi.var fbits : {unsigned} = {64-scale}, format : {char const*} = {"694"};

fcvtzu_xsi.disasm = {
  sink << "fcvtzu\t" << DisasmGZXR(rd) << ", " << DisasmS(rn) << ", " << DisasmI(fbits);
};

op fdiv_ddd( 0b00011110011[11] : rm[5] : 0b000110[6] : rn[5] : rd[5] );
fdiv_ddd.var format : {char const*} = {"721"};

fdiv_ddd.disasm = {
  sink << "fdiv\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op fdiv_sss( 0b00011110001[11] : rm[5] : 0b000110[6] : rn[5] : rd[5] );
fdiv_sss.var format : {char const*} = {"798"};

fdiv_sss.disasm = {
  sink << "fdiv\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op fdiv_v2dv2dv2d( 0b01101110011[11] : rm[5] : 0b111111[6] : rn[5] : rd[5] );
fdiv_v2dv2dv2d.var format : {char const*} = {"910"};

fdiv_v2dv2dv2d.disasm = {
  sink << "fdiv\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fdiv_v2sv2sv2s( 0b00101110001[11] : rm[5] : 0b111111[6] : rn[5] : rd[5] );
fdiv_v2sv2sv2s.var format : {char const*} = {"1037"};

fdiv_v2sv2sv2s.disasm = {
  sink << "fdiv\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fdiv_v4sv4sv4s( 0b01101110001[11] : rm[5] : 0b111111[6] : rn[5] : rd[5] );
fdiv_v4sv4sv4s.var format : {char const*} = {"1216"};

fdiv_v4sv4sv4s.disasm = {
  sink << "fdiv\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fmadd_d( 0b00011111010[11] : rm[5] : 0b0[1] : ra[5] : rn[5] : rd[5] );
fmadd_d.var format : {char const*} = {"154"};

fmadd_d.disasm = {
  sink << "fmadd\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm) << ", " << DisasmD(ra);
};

op fmadd_s( 0b00011111000[11] : rm[5] : 0b0[1] : ra[5] : rn[5] : rd[5] );
fmadd_s.var format : {char const*} = {"158"};

fmadd_s.disasm = {
  sink << "fmadd\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm) << ", " << DisasmS(ra);
};

op fmax_ddd( 0b00011110011[11] : rm[5] : 0b010010[6] : rn[5] : rd[5] );
fmax_ddd.var format : {char const*} = {"722"};

fmax_ddd.disasm = {
  sink << "fmax\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op fmax_sss( 0b00011110001[11] : rm[5] : 0b010010[6] : rn[5] : rd[5] );
fmax_sss.var format : {char const*} = {"799"};

fmax_sss.disasm = {
  sink << "fmax\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op fmax_v2dv2dv2d( 0b01001110011[11] : rm[5] : 0b111101[6] : rn[5] : rd[5] );
fmax_v2dv2dv2d.var format : {char const*} = {"911"};

fmax_v2dv2dv2d.disasm = {
  sink << "fmax\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fmax_v2sv2sv2s( 0b00001110001[11] : rm[5] : 0b111101[6] : rn[5] : rd[5] );
fmax_v2sv2sv2s.var format : {char const*} = {"1038"};

fmax_v2sv2sv2s.disasm = {
  sink << "fmax\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fmax_v4sv4sv4s( 0b01001110001[11] : rm[5] : 0b111101[6] : rn[5] : rd[5] );
fmax_v4sv4sv4s.var format : {char const*} = {"1217"};

fmax_v4sv4sv4s.disasm = {
  sink << "fmax\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fmaxnm_ddd( 0b00011110011[11] : rm[5] : 0b011010[6] : rn[5] : rd[5] );
fmaxnm_ddd.var format : {char const*} = {"723"};

fmaxnm_ddd.disasm = {
  sink << "fmaxnm\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op fmaxnm_sss( 0b00011110001[11] : rm[5] : 0b011010[6] : rn[5] : rd[5] );
fmaxnm_sss.var format : {char const*} = {"800"};

fmaxnm_sss.disasm = {
  sink << "fmaxnm\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op fmaxnm_v2dv2dv2d( 0b01001110011[11] : rm[5] : 0b110001[6] : rn[5] : rd[5] );
fmaxnm_v2dv2dv2d.var format : {char const*} = {"912"};

fmaxnm_v2dv2dv2d.disasm = {
  sink << "fmaxnm\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fmaxnm_v2sv2sv2s( 0b00001110001[11] : rm[5] : 0b110001[6] : rn[5] : rd[5] );
fmaxnm_v2sv2sv2s.var format : {char const*} = {"1039"};

fmaxnm_v2sv2sv2s.disasm = {
  sink << "fmaxnm\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fmaxnm_v4sv4sv4s( 0b01001110001[11] : rm[5] : 0b110001[6] : rn[5] : rd[5] );
fmaxnm_v4sv4sv4s.var format : {char const*} = {"1218"};

fmaxnm_v4sv4sv4s.disasm = {
  sink << "fmaxnm\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fmaxnmp_dv2d( 0b0111111001110000110010[22] : rn[5] : rd[5] );
fmaxnmp_dv2d.var format : {char const*} = {"2224"};

fmaxnmp_dv2d.disasm = {
  sink << "fmaxnmp\t" << DisasmD(rd) << ", " << DisasmTV(rn,2,3);
};

op fmaxnmp_sv2s( 0b0111111000110000110010[22] : rn[5] : rd[5] );
fmaxnmp_sv2s.var format : {char const*} = {"2302"};

fmaxnmp_sv2s.disasm = {
  sink << "fmaxnmp\t" << DisasmS(rd) << ", " << DisasmTV(rn,2,2);
};

op fmaxnmp_v2dv2dv2d( 0b01101110011[11] : rm[5] : 0b110001[6] : rn[5] : rd[5] );
fmaxnmp_v2dv2dv2d.var format : {char const*} = {"913"};

fmaxnmp_v2dv2dv2d.disasm = {
  sink << "fmaxnmp\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fmaxnmp_v2sv2sv2s( 0b00101110001[11] : rm[5] : 0b110001[6] : rn[5] : rd[5] );
fmaxnmp_v2sv2sv2s.var format : {char const*} = {"1040"};

fmaxnmp_v2sv2sv2s.disasm = {
  sink << "fmaxnmp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fmaxnmp_v4sv4sv4s( 0b01101110001[11] : rm[5] : 0b110001[6] : rn[5] : rd[5] );
fmaxnmp_v4sv4sv4s.var format : {char const*} = {"1219"};

fmaxnmp_v4sv4sv4s.disasm = {
  sink << "fmaxnmp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fmaxnmv_sv4s( 0b0110111000110000110010[22] : rn[5] : rd[5] );
fmaxnmv_sv4s.var format : {char const*} = {"2309"};

fmaxnmv_sv4s.disasm = {
  sink << "fmaxnmv\t" << DisasmS(rd) << ", " << DisasmTV(rn,4,2);
};

op fmaxp_dv2d( 0b0111111001110000111110[22] : rn[5] : rd[5] );
fmaxp_dv2d.var format : {char const*} = {"2225"};

fmaxp_dv2d.disasm = {
  sink << "fmaxp\t" << DisasmD(rd) << ", " << DisasmTV(rn,2,3);
};

op fmaxp_sv2s( 0b0111111000110000111110[22] : rn[5] : rd[5] );
fmaxp_sv2s.var format : {char const*} = {"2303"};

fmaxp_sv2s.disasm = {
  sink << "fmaxp\t" << DisasmS(rd) << ", " << DisasmTV(rn,2,2);
};

op fmaxp_v2dv2dv2d( 0b01101110011[11] : rm[5] : 0b111101[6] : rn[5] : rd[5] );
fmaxp_v2dv2dv2d.var format : {char const*} = {"914"};

fmaxp_v2dv2dv2d.disasm = {
  sink << "fmaxp\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fmaxp_v2sv2sv2s( 0b00101110001[11] : rm[5] : 0b111101[6] : rn[5] : rd[5] );
fmaxp_v2sv2sv2s.var format : {char const*} = {"1041"};

fmaxp_v2sv2sv2s.disasm = {
  sink << "fmaxp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fmaxp_v4sv4sv4s( 0b01101110001[11] : rm[5] : 0b111101[6] : rn[5] : rd[5] );
fmaxp_v4sv4sv4s.var format : {char const*} = {"1220"};

fmaxp_v4sv4sv4s.disasm = {
  sink << "fmaxp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fmaxv_sv4s( 0b0110111000110000111110[22] : rn[5] : rd[5] );
fmaxv_sv4s.var format : {char const*} = {"2310"};

fmaxv_sv4s.disasm = {
  sink << "fmaxv\t" << DisasmS(rd) << ", " << DisasmTV(rn,4,2);
};

op fmin_ddd( 0b00011110011[11] : rm[5] : 0b010110[6] : rn[5] : rd[5] );
fmin_ddd.var format : {char const*} = {"724"};

fmin_ddd.disasm = {
  sink << "fmin\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op fmin_sss( 0b00011110001[11] : rm[5] : 0b010110[6] : rn[5] : rd[5] );
fmin_sss.var format : {char const*} = {"801"};

fmin_sss.disasm = {
  sink << "fmin\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op fmin_v2dv2dv2d( 0b01001110111[11] : rm[5] : 0b111101[6] : rn[5] : rd[5] );
fmin_v2dv2dv2d.var format : {char const*} = {"915"};

fmin_v2dv2dv2d.disasm = {
  sink << "fmin\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fmin_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b111101[6] : rn[5] : rd[5] );
fmin_v2sv2sv2s.var format : {char const*} = {"1042"};

fmin_v2sv2sv2s.disasm = {
  sink << "fmin\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fmin_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b111101[6] : rn[5] : rd[5] );
fmin_v4sv4sv4s.var format : {char const*} = {"1221"};

fmin_v4sv4sv4s.disasm = {
  sink << "fmin\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fminnm_ddd( 0b00011110011[11] : rm[5] : 0b011110[6] : rn[5] : rd[5] );
fminnm_ddd.var format : {char const*} = {"725"};

fminnm_ddd.disasm = {
  sink << "fminnm\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op fminnm_sss( 0b00011110001[11] : rm[5] : 0b011110[6] : rn[5] : rd[5] );
fminnm_sss.var format : {char const*} = {"802"};

fminnm_sss.disasm = {
  sink << "fminnm\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op fminnm_v2dv2dv2d( 0b01001110111[11] : rm[5] : 0b110001[6] : rn[5] : rd[5] );
fminnm_v2dv2dv2d.var format : {char const*} = {"916"};

fminnm_v2dv2dv2d.disasm = {
  sink << "fminnm\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fminnm_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b110001[6] : rn[5] : rd[5] );
fminnm_v2sv2sv2s.var format : {char const*} = {"1043"};

fminnm_v2sv2sv2s.disasm = {
  sink << "fminnm\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fminnm_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b110001[6] : rn[5] : rd[5] );
fminnm_v4sv4sv4s.var format : {char const*} = {"1222"};

fminnm_v4sv4sv4s.disasm = {
  sink << "fminnm\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fminnmp_dv2d( 0b0111111011110000110010[22] : rn[5] : rd[5] );
fminnmp_dv2d.var format : {char const*} = {"2226"};

fminnmp_dv2d.disasm = {
  sink << "fminnmp\t" << DisasmD(rd) << ", " << DisasmTV(rn,2,3);
};

op fminnmp_sv2s( 0b0111111010110000110010[22] : rn[5] : rd[5] );
fminnmp_sv2s.var format : {char const*} = {"2304"};

fminnmp_sv2s.disasm = {
  sink << "fminnmp\t" << DisasmS(rd) << ", " << DisasmTV(rn,2,2);
};

op fminnmp_v2dv2dv2d( 0b01101110111[11] : rm[5] : 0b110001[6] : rn[5] : rd[5] );
fminnmp_v2dv2dv2d.var format : {char const*} = {"917"};

fminnmp_v2dv2dv2d.disasm = {
  sink << "fminnmp\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fminnmp_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b110001[6] : rn[5] : rd[5] );
fminnmp_v2sv2sv2s.var format : {char const*} = {"1044"};

fminnmp_v2sv2sv2s.disasm = {
  sink << "fminnmp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fminnmp_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b110001[6] : rn[5] : rd[5] );
fminnmp_v4sv4sv4s.var format : {char const*} = {"1223"};

fminnmp_v4sv4sv4s.disasm = {
  sink << "fminnmp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fminnmv_sv4s( 0b0110111010110000110010[22] : rn[5] : rd[5] );
fminnmv_sv4s.var format : {char const*} = {"2311"};

fminnmv_sv4s.disasm = {
  sink << "fminnmv\t" << DisasmS(rd) << ", " << DisasmTV(rn,4,2);
};

op fminp_dv2d( 0b0111111011110000111110[22] : rn[5] : rd[5] );
fminp_dv2d.var format : {char const*} = {"2227"};

fminp_dv2d.disasm = {
  sink << "fminp\t" << DisasmD(rd) << ", " << DisasmTV(rn,2,3);
};

op fminp_sv2s( 0b0111111010110000111110[22] : rn[5] : rd[5] );
fminp_sv2s.var format : {char const*} = {"2305"};

fminp_sv2s.disasm = {
  sink << "fminp\t" << DisasmS(rd) << ", " << DisasmTV(rn,2,2);
};

op fminp_v2dv2dv2d( 0b01101110111[11] : rm[5] : 0b111101[6] : rn[5] : rd[5] );
fminp_v2dv2dv2d.var format : {char const*} = {"918"};

fminp_v2dv2dv2d.disasm = {
  sink << "fminp\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fminp_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b111101[6] : rn[5] : rd[5] );
fminp_v2sv2sv2s.var format : {char const*} = {"1045"};

fminp_v2sv2sv2s.disasm = {
  sink << "fminp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fminp_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b111101[6] : rn[5] : rd[5] );
fminp_v4sv4sv4s.var format : {char const*} = {"1224"};

fminp_v4sv4sv4s.disasm = {
  sink << "fminp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fminv_sv4s( 0b0110111010110000111110[22] : rn[5] : rd[5] );
fminv_sv4s.var format : {char const*} = {"2312"};

fminv_sv4s.disasm = {
  sink << "fminv\t" << DisasmS(rd) << ", " << DisasmTV(rn,4,2);
};

op fmla_ddvdi( 0b01011111110[11] : rm[5] : 0b0001[4] : index[1] : 0b0[1] : rn[5] : rd[5] );
fmla_ddvdi.var format : {char const*} = {"678"};

fmla_ddvdi.disasm = {
  sink << "fmla\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmTV(rm,0,3) << DisasmSubscript(index);
};

op fmla_ssvsi( 0b0101111110[10] : index0[1] : rm[5] : 0b0001[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
fmla_ssvsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"456"};

fmla_ssvsi.disasm = {
  sink << "fmla\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op fmla_v2dv2dv2d( 0b01001110011[11] : rm[5] : 0b110011[6] : rn[5] : rd[5] );
fmla_v2dv2dv2d.var format : {char const*} = {"919"};

fmla_v2dv2dv2d.disasm = {
  sink << "fmla\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fmla_v2dv2dvdi( 0b01001111110[11] : rm[5] : 0b0001[4] : index[1] : 0b0[1] : rn[5] : rd[5] );
fmla_v2dv2dvdi.var format : {char const*} = {"682"};

fmla_v2dv2dvdi.disasm = {
  sink << "fmla\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,0,3) << DisasmSubscript(index);
};

op fmla_v2sv2sv2s( 0b00001110001[11] : rm[5] : 0b110011[6] : rn[5] : rd[5] );
fmla_v2sv2sv2s.var format : {char const*} = {"1046"};

fmla_v2sv2sv2s.disasm = {
  sink << "fmla\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fmla_v2sv2svsi( 0b0000111110[10] : index0[1] : rm[5] : 0b0001[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
fmla_v2sv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"480"};

fmla_v2sv2svsi.disasm = {
  sink << "fmla\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op fmla_v4sv4sv4s( 0b01001110001[11] : rm[5] : 0b110011[6] : rn[5] : rd[5] );
fmla_v4sv4sv4s.var format : {char const*} = {"1225"};

fmla_v4sv4sv4s.disasm = {
  sink << "fmla\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fmla_v4sv4svsi( 0b0100111110[10] : index0[1] : rm[5] : 0b0001[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
fmla_v4sv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"503"};

fmla_v4sv4svsi.disasm = {
  sink << "fmla\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op fmls_ddvdi( 0b01011111110[11] : rm[5] : 0b0101[4] : index[1] : 0b0[1] : rn[5] : rd[5] );
fmls_ddvdi.var format : {char const*} = {"679"};

fmls_ddvdi.disasm = {
  sink << "fmls\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmTV(rm,0,3) << DisasmSubscript(index);
};

op fmls_ssvsi( 0b0101111110[10] : index0[1] : rm[5] : 0b0101[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
fmls_ssvsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"457"};

fmls_ssvsi.disasm = {
  sink << "fmls\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op fmls_v2dv2dv2d( 0b01001110111[11] : rm[5] : 0b110011[6] : rn[5] : rd[5] );
fmls_v2dv2dv2d.var format : {char const*} = {"920"};

fmls_v2dv2dv2d.disasm = {
  sink << "fmls\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fmls_v2dv2dvdi( 0b01001111110[11] : rm[5] : 0b0101[4] : index[1] : 0b0[1] : rn[5] : rd[5] );
fmls_v2dv2dvdi.var format : {char const*} = {"683"};

fmls_v2dv2dvdi.disasm = {
  sink << "fmls\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,0,3) << DisasmSubscript(index);
};

op fmls_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b110011[6] : rn[5] : rd[5] );
fmls_v2sv2sv2s.var format : {char const*} = {"1047"};

fmls_v2sv2sv2s.disasm = {
  sink << "fmls\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fmls_v2sv2svsi( 0b0000111110[10] : index0[1] : rm[5] : 0b0101[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
fmls_v2sv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"481"};

fmls_v2sv2svsi.disasm = {
  sink << "fmls\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op fmls_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b110011[6] : rn[5] : rd[5] );
fmls_v4sv4sv4s.var format : {char const*} = {"1226"};

fmls_v4sv4sv4s.disasm = {
  sink << "fmls\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fmls_v4sv4svsi( 0b0100111110[10] : index0[1] : rm[5] : 0b0101[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
fmls_v4sv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"504"};

fmls_v4sv4svsi.disasm = {
  sink << "fmls\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op fmov_dd( 0b0001111001100000010000[22] : rn[5] : rd[5] );
fmov_dd.var format : {char const*} = {"2190"};

fmov_dd.disasm = {
  sink << "fmov\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op fmov_df( 0b00011110011[11] : fpimm[8] : 0b10000000[8] : rd[5] );
fmov_df.var imm : {FPImm} = {fpimm}, format : {char const*} = {"1913"};

fmov_df.disasm = {
  sink << "fmov\t" << DisasmD(rd) << ", " << DisasmF(imm);
};

/*******************************************************************
 * FMOV (general)
 *
 * Floating-point move to or from general-purpose register without conversion
 */

op fmov_sw( 0b0001111000100111000000[22] : rn[5] : rd[5] );
fmov_sw.var format : {char const*} = {"2319"};

fmov_sw.disasm = {
  sink << "fmov\t" << DisasmS(rd) << ", " << DisasmGZWR(rn);
};

fmov_sw.execute = {
  typedef typename ARCH::U32 U32;
  U32 data = cpu.GetGZR(rn);
  cpu.SetVU32(rd,data);
};

op fmov_dw( 0b0001111001100111000000[22] : rn[5] : rd[5] );
fmov_dw.var format : {char const*} = {"2230"};

fmov_dw.disasm = {
  sink << "fmov\t" << DisasmD(rd) << ", " << DisasmGZWR(rn);
};

op fmov_ws( 0b0001111000100110000000[22] : rn[5] : rd[5] );
fmov_ws.var format : {char const*} = {"2614"};

fmov_ws.disasm = {
  sink << "fmov\t" << DisasmGZWR(rd) << ", " << DisasmS(rn);
};

fmov_ws.execute = {
  typedef typename ARCH::U32 U32;
  U32 data = cpu.GetVU32(rn,0);
  cpu.SetGZR(rd,data);
};

op fmov_wd( 0b0001111001100110000000[22] : rn[5] : rd[5] );
fmov_wd.var format : {char const*} = {"2603"};

fmov_wd.disasm = {
  sink << "fmov\t" << DisasmGZWR(rd) << ", " << DisasmD(rn);
};

op fmov_sx( 0b1001111000100111000000[22] : rn[5] : rd[5] );
fmov_sx.var format : {char const*} = {"2322"};

fmov_sx.disasm = {
  sink << "fmov\t" << DisasmS(rd) << ", " << DisasmGZXR(rn);
};

op fmov_dx( 0b1001111001100111000000[22] : rn[5] : rd[5] );
fmov_dx.var format : {char const*} = {"2233"};

fmov_dx.disasm = {
  sink << "fmov\t" << DisasmD(rd) << ", " << DisasmGZXR(rn);
};

fmov_dx.execute = {
  typedef typename ARCH::U64 U64;
  U64 data = cpu.GetGZR(rn);
  cpu.SetVU64(rd,data);
};

op fmov_dix( 0b1001111010101111000000[22] : rn[5] : rd[5] );
fmov_dix.var format : {char const*} = {"2592"};

fmov_dix.disasm = {
  sink << "fmov\t" << DisasmTV(rd,0,3) << "[1], " << DisasmGZXR(rn);
};

fmov_dix.execute = {
  typedef typename ARCH::U64 U64;
  U64 data = cpu.GetGZR(rn);
  cpu.SetVU64(rd,1,data);
};

op fmov_xs( 0b1001111000100110000000[22] : rn[5] : rd[5] );
fmov_xs.var format : {char const*} = {"2646"};

fmov_xs.disasm = {
  sink << "fmov\t" << DisasmGZXR(rd) << ", " << DisasmS(rn);
};

op fmov_xd( 0b1001111001100110000000[22] : rn[5] : rd[5] );
fmov_xd.var format : {char const*} = {"2635"};

fmov_xd.disasm = {
  sink << "fmov\t" << DisasmGZXR(rd) << ", " << DisasmD(rn);
};

fmov_xd.execute = {
  typedef typename ARCH::U64 U64;
  U64 data = cpu.GetVU64(rn,0);
  cpu.SetGZR(rd,data);
};

op fmov_xdi( 0b1001111010101110000000[22] : rn[5] : rd[5] );
fmov_xdi.var format : {char const*} = {"2647"};

fmov_xdi.disasm = {
  sink << "fmov\t" << DisasmGZXR(rd) << ", " << DisasmTV(rn,0,3) << "[1]";
};

fmov_xdi.execute = {
  typedef typename ARCH::U64 U64;
  U64 data = cpu.GetVU64(rn,1);
  cpu.SetGZR(rd,data);
};

/*
 * end of FMOV (general)
 *******************************************************************/

op fmov_sf( 0b00011110001[11] : fpimm[8] : 0b10000000[8] : rd[5] );
fmov_sf.var imm : {FPImm} = {fpimm}, format : {char const*} = {"1914"};

fmov_sf.disasm = {
  sink << "fmov\t" << DisasmD(rd) << ", " << DisasmF(imm);
};

op fmov_ss( 0b0001111000100000010000[22] : rn[5] : rd[5] );
fmov_ss.var format : {char const*} = {"2276"};

fmov_ss.disasm = {
  sink << "fmov\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op fmov_v2df( 0b0110111100000[13] : shl<5> imm1[3] : 0b111101[6] : imm0[5] : rd[5] );
fmov_v2df.var imm : {FPImm} = {imm1|imm0}, format : {char const*} = {"1966"};

fmov_v2df.disasm = {
  sink << "fmov\t" << DisasmTV(rd,2,3) << ", " << DisasmF(imm);
};

op fmov_v2sf( 0b0000111100000[13] : shl<5> imm1[3] : 0b111101[6] : imm0[5] : rd[5] );
fmov_v2sf.var imm : {FPImm} = {imm1|imm0}, format : {char const*} = {"1967"};

fmov_v2sf.disasm = {
  sink << "fmov\t" << DisasmTV(rd,2,2) << ", " << DisasmF(imm);
};

op fmov_v4sf( 0b0100111100000[13] : shl<5> imm1[3] : 0b111101[6] : imm0[5] : rd[5] );
fmov_v4sf.var imm : {FPImm} = {imm1|imm0}, format : {char const*} = {"1968"};

fmov_v4sf.disasm = {
  sink << "fmov\t" << DisasmTV(rd,4,2) << ", " << DisasmF(imm);
};

op fmsub_d( 0b00011111010[11] : rm[5] : 0b1[1] : ra[5] : rn[5] : rd[5] );
fmsub_d.var format : {char const*} = {"155"};

fmsub_d.disasm = {
  sink << "fmsub\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm) << ", " << DisasmD(ra);
};

op fmsub_s( 0b00011111000[11] : rm[5] : 0b1[1] : ra[5] : rn[5] : rd[5] );
fmsub_s.var format : {char const*} = {"159"};

fmsub_s.disasm = {
  sink << "fmsub\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm) << ", " << DisasmS(ra);
};

op fmul_ddd( 0b00011110011[11] : rm[5] : 0b000010[6] : rn[5] : rd[5] );
fmul_ddd.var format : {char const*} = {"726"};

fmul_ddd.disasm = {
  sink << "fmul\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op fmul_ddvdi( 0b01011111110[11] : rm[5] : 0b1001[4] : index[1] : 0b0[1] : rn[5] : rd[5] );
fmul_ddvdi.var format : {char const*} = {"680"};

fmul_ddvdi.disasm = {
  sink << "fmul\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmTV(rm,0,3) << DisasmSubscript(index);
};

op fmul_sss( 0b00011110001[11] : rm[5] : 0b000010[6] : rn[5] : rd[5] );
fmul_sss.var format : {char const*} = {"803"};

fmul_sss.disasm = {
  sink << "fmul\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op fmul_ssvsi( 0b0101111110[10] : index0[1] : rm[5] : 0b1001[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
fmul_ssvsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"458"};

fmul_ssvsi.disasm = {
  sink << "fmul\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op fmul_v2dv2dv2d( 0b01101110011[11] : rm[5] : 0b110111[6] : rn[5] : rd[5] );
fmul_v2dv2dv2d.var format : {char const*} = {"921"};

fmul_v2dv2dv2d.disasm = {
  sink << "fmul\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fmul_v2dv2dvdi( 0b01001111110[11] : rm[5] : 0b1001[4] : index[1] : 0b0[1] : rn[5] : rd[5] );
fmul_v2dv2dvdi.var format : {char const*} = {"684"};

fmul_v2dv2dvdi.disasm = {
  sink << "fmul\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,0,3) << DisasmSubscript(index);
};

op fmul_v2sv2sv2s( 0b00101110001[11] : rm[5] : 0b110111[6] : rn[5] : rd[5] );
fmul_v2sv2sv2s.var format : {char const*} = {"1048"};

fmul_v2sv2sv2s.disasm = {
  sink << "fmul\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fmul_v2sv2svsi( 0b0000111110[10] : index0[1] : rm[5] : 0b1001[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
fmul_v2sv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"482"};

fmul_v2sv2svsi.disasm = {
  sink << "fmul\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op fmul_v4sv4sv4s( 0b01101110001[11] : rm[5] : 0b110111[6] : rn[5] : rd[5] );
fmul_v4sv4sv4s.var format : {char const*} = {"1227"};

fmul_v4sv4sv4s.disasm = {
  sink << "fmul\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fmul_v4sv4svsi( 0b0100111110[10] : index0[1] : rm[5] : 0b1001[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
fmul_v4sv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"505"};

fmul_v4sv4svsi.disasm = {
  sink << "fmul\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op fmulx_ddd( 0b01011110011[11] : rm[5] : 0b110111[6] : rn[5] : rd[5] );
fmulx_ddd.var format : {char const*} = {"727"};

fmulx_ddd.disasm = {
  sink << "fmulx\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op fmulx_ddvdi( 0b01111111110[11] : rm[5] : 0b1001[4] : index[1] : 0b0[1] : rn[5] : rd[5] );
fmulx_ddvdi.var format : {char const*} = {"681"};

fmulx_ddvdi.disasm = {
  sink << "fmulx\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmTV(rm,0,3) << DisasmSubscript(index);
};

op fmulx_sss( 0b01011110001[11] : rm[5] : 0b110111[6] : rn[5] : rd[5] );
fmulx_sss.var format : {char const*} = {"804"};

fmulx_sss.disasm = {
  sink << "fmulx\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op fmulx_ssvsi( 0b0111111110[10] : index0[1] : rm[5] : 0b1001[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
fmulx_ssvsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"459"};

fmulx_ssvsi.disasm = {
  sink << "fmulx\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op fmulx_v2dv2dv2d( 0b01001110011[11] : rm[5] : 0b110111[6] : rn[5] : rd[5] );
fmulx_v2dv2dv2d.var format : {char const*} = {"922"};

fmulx_v2dv2dv2d.disasm = {
  sink << "fmulx\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fmulx_v2dv2dvdi( 0b01101111110[11] : rm[5] : 0b1001[4] : index[1] : 0b0[1] : rn[5] : rd[5] );
fmulx_v2dv2dvdi.var format : {char const*} = {"685"};

fmulx_v2dv2dvdi.disasm = {
  sink << "fmulx\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,0,3) << DisasmSubscript(index);
};

op fmulx_v2sv2sv2s( 0b00001110001[11] : rm[5] : 0b110111[6] : rn[5] : rd[5] );
fmulx_v2sv2sv2s.var format : {char const*} = {"1049"};

fmulx_v2sv2sv2s.disasm = {
  sink << "fmulx\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fmulx_v2sv2svsi( 0b0010111110[10] : index0[1] : rm[5] : 0b1001[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
fmulx_v2sv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"483"};

fmulx_v2sv2svsi.disasm = {
  sink << "fmulx\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op fmulx_v4sv4sv4s( 0b01001110001[11] : rm[5] : 0b110111[6] : rn[5] : rd[5] );
fmulx_v4sv4sv4s.var format : {char const*} = {"1228"};

fmulx_v4sv4sv4s.disasm = {
  sink << "fmulx\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fmulx_v4sv4svsi( 0b0110111110[10] : index0[1] : rm[5] : 0b1001[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
fmulx_v4sv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"506"};

fmulx_v4sv4svsi.disasm = {
  sink << "fmulx\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op fneg_dd( 0b0001111001100001010000[22] : rn[5] : rd[5] );
fneg_dd.var format : {char const*} = {"2191"};

fneg_dd.disasm = {
  sink << "fneg\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op fneg_ss( 0b0001111000100001010000[22] : rn[5] : rd[5] );
fneg_ss.var format : {char const*} = {"2277"};

fneg_ss.disasm = {
  sink << "fneg\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op fneg_v2d2d( 0b0110111011100000111110[22] : rn[5] : rd[5] );
fneg_v2d2d.var format : {char const*} = {"2368"};

fneg_v2d2d.disasm = {
  sink << "fneg\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op fneg_v2s2s( 0b0010111010100000111110[22] : rn[5] : rd[5] );
fneg_v2s2s.var format : {char const*} = {"2424"};

fneg_v2s2s.disasm = {
  sink << "fneg\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op fneg_v4s4s( 0b0110111010100000111110[22] : rn[5] : rd[5] );
fneg_v4s4s.var format : {char const*} = {"2505"};

fneg_v4s4s.disasm = {
  sink << "fneg\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op fnmadd_d( 0b00011111011[11] : rm[5] : 0b0[1] : ra[5] : rn[5] : rd[5] );
fnmadd_d.var format : {char const*} = {"156"};

fnmadd_d.disasm = {
  sink << "fnmadd\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm) << ", " << DisasmD(ra);
};

op fnmadd_s( 0b00011111001[11] : rm[5] : 0b0[1] : ra[5] : rn[5] : rd[5] );
fnmadd_s.var format : {char const*} = {"160"};

fnmadd_s.disasm = {
  sink << "fnmadd\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm) << ", " << DisasmS(ra);
};

op fnmsub_d( 0b00011111011[11] : rm[5] : 0b1[1] : ra[5] : rn[5] : rd[5] );
fnmsub_d.var format : {char const*} = {"157"};

fnmsub_d.disasm = {
  sink << "fnmsub\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm) << ", " << DisasmD(ra);
};

op fnmsub_s( 0b00011111001[11] : rm[5] : 0b1[1] : ra[5] : rn[5] : rd[5] );
fnmsub_s.var format : {char const*} = {"161"};

fnmsub_s.disasm = {
  sink << "fnmsub\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm) << ", " << DisasmS(ra);
};

op fnmul_ddd( 0b00011110011[11] : rm[5] : 0b100010[6] : rn[5] : rd[5] );
fnmul_ddd.var format : {char const*} = {"728"};

fnmul_ddd.disasm = {
  sink << "fnmul\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op fnmul_sss( 0b00011110001[11] : rm[5] : 0b100010[6] : rn[5] : rd[5] );
fnmul_sss.var format : {char const*} = {"805"};

fnmul_sss.disasm = {
  sink << "fnmul\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op frecpe_dd( 0b0101111011100001110110[22] : rn[5] : rd[5] );
frecpe_dd.var format : {char const*} = {"2192"};

frecpe_dd.disasm = {
  sink << "frecpe\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op frecpe_ss( 0b0101111010100001110110[22] : rn[5] : rd[5] );
frecpe_ss.var format : {char const*} = {"2278"};

frecpe_ss.disasm = {
  sink << "frecpe\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op frecpe_v2d2d( 0b0100111011100001110110[22] : rn[5] : rd[5] );
frecpe_v2d2d.var format : {char const*} = {"2369"};

frecpe_v2d2d.disasm = {
  sink << "frecpe\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op frecpe_v2s2s( 0b0000111010100001110110[22] : rn[5] : rd[5] );
frecpe_v2s2s.var format : {char const*} = {"2425"};

frecpe_v2s2s.disasm = {
  sink << "frecpe\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op frecpe_v4s4s( 0b0100111010100001110110[22] : rn[5] : rd[5] );
frecpe_v4s4s.var format : {char const*} = {"2506"};

frecpe_v4s4s.disasm = {
  sink << "frecpe\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op frecps_ddd( 0b01011110011[11] : rm[5] : 0b111111[6] : rn[5] : rd[5] );
frecps_ddd.var format : {char const*} = {"729"};

frecps_ddd.disasm = {
  sink << "frecps\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op frecps_sss( 0b01011110001[11] : rm[5] : 0b111111[6] : rn[5] : rd[5] );
frecps_sss.var format : {char const*} = {"806"};

frecps_sss.disasm = {
  sink << "frecps\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op frecps_v2dv2dv2d( 0b01001110011[11] : rm[5] : 0b111111[6] : rn[5] : rd[5] );
frecps_v2dv2dv2d.var format : {char const*} = {"923"};

frecps_v2dv2dv2d.disasm = {
  sink << "frecps\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op frecps_v2sv2sv2s( 0b00001110001[11] : rm[5] : 0b111111[6] : rn[5] : rd[5] );
frecps_v2sv2sv2s.var format : {char const*} = {"1050"};

frecps_v2sv2sv2s.disasm = {
  sink << "frecps\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op frecps_v4sv4sv4s( 0b01001110001[11] : rm[5] : 0b111111[6] : rn[5] : rd[5] );
frecps_v4sv4sv4s.var format : {char const*} = {"1229"};

frecps_v4sv4sv4s.disasm = {
  sink << "frecps\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op frecpx_dd( 0b0101111011100001111110[22] : rn[5] : rd[5] );
frecpx_dd.var format : {char const*} = {"2193"};

frecpx_dd.disasm = {
  sink << "frecpx\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op frecpx_ss( 0b0101111010100001111110[22] : rn[5] : rd[5] );
frecpx_ss.var format : {char const*} = {"2279"};

frecpx_ss.disasm = {
  sink << "frecpx\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op frinta_dd( 0b0001111001100110010000[22] : rn[5] : rd[5] );
frinta_dd.var format : {char const*} = {"2194"};

frinta_dd.disasm = {
  sink << "frinta\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op frinta_ss( 0b0001111000100110010000[22] : rn[5] : rd[5] );
frinta_ss.var format : {char const*} = {"2280"};

frinta_ss.disasm = {
  sink << "frinta\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op frinta_v2d2d( 0b0110111001100001100010[22] : rn[5] : rd[5] );
frinta_v2d2d.var format : {char const*} = {"2370"};

frinta_v2d2d.disasm = {
  sink << "frinta\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op frinta_v2s2s( 0b0010111000100001100010[22] : rn[5] : rd[5] );
frinta_v2s2s.var format : {char const*} = {"2426"};

frinta_v2s2s.disasm = {
  sink << "frinta\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op frinta_v4s4s( 0b0110111000100001100010[22] : rn[5] : rd[5] );
frinta_v4s4s.var format : {char const*} = {"2507"};

frinta_v4s4s.disasm = {
  sink << "frinta\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op frinti_dd( 0b0001111001100111110000[22] : rn[5] : rd[5] );
frinti_dd.var format : {char const*} = {"2195"};

frinti_dd.disasm = {
  sink << "frinti\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op frinti_ss( 0b0001111000100111110000[22] : rn[5] : rd[5] );
frinti_ss.var format : {char const*} = {"2281"};

frinti_ss.disasm = {
  sink << "frinti\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op frinti_v2d2d( 0b0110111011100001100110[22] : rn[5] : rd[5] );
frinti_v2d2d.var format : {char const*} = {"2371"};

frinti_v2d2d.disasm = {
  sink << "frinti\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op frinti_v2s2s( 0b0010111010100001100110[22] : rn[5] : rd[5] );
frinti_v2s2s.var format : {char const*} = {"2427"};

frinti_v2s2s.disasm = {
  sink << "frinti\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op frinti_v4s4s( 0b0110111010100001100110[22] : rn[5] : rd[5] );
frinti_v4s4s.var format : {char const*} = {"2508"};

frinti_v4s4s.disasm = {
  sink << "frinti\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op frintm_dd( 0b0001111001100101010000[22] : rn[5] : rd[5] );
frintm_dd.var format : {char const*} = {"2196"};

frintm_dd.disasm = {
  sink << "frintm\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op frintm_ss( 0b0001111000100101010000[22] : rn[5] : rd[5] );
frintm_ss.var format : {char const*} = {"2282"};

frintm_ss.disasm = {
  sink << "frintm\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op frintm_v2d2d( 0b0100111001100001100110[22] : rn[5] : rd[5] );
frintm_v2d2d.var format : {char const*} = {"2372"};

frintm_v2d2d.disasm = {
  sink << "frintm\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op frintm_v2s2s( 0b0000111000100001100110[22] : rn[5] : rd[5] );
frintm_v2s2s.var format : {char const*} = {"2428"};

frintm_v2s2s.disasm = {
  sink << "frintm\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op frintm_v4s4s( 0b0100111000100001100110[22] : rn[5] : rd[5] );
frintm_v4s4s.var format : {char const*} = {"2509"};

frintm_v4s4s.disasm = {
  sink << "frintm\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op frintn_dd( 0b0001111001100100010000[22] : rn[5] : rd[5] );
frintn_dd.var format : {char const*} = {"2197"};

frintn_dd.disasm = {
  sink << "frintn\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op frintn_ss( 0b0001111000100100010000[22] : rn[5] : rd[5] );
frintn_ss.var format : {char const*} = {"2283"};

frintn_ss.disasm = {
  sink << "frintn\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op frintn_v2d2d( 0b0100111001100001100010[22] : rn[5] : rd[5] );
frintn_v2d2d.var format : {char const*} = {"2373"};

frintn_v2d2d.disasm = {
  sink << "frintn\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op frintn_v2s2s( 0b0000111000100001100010[22] : rn[5] : rd[5] );
frintn_v2s2s.var format : {char const*} = {"2429"};

frintn_v2s2s.disasm = {
  sink << "frintn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op frintn_v4s4s( 0b0100111000100001100010[22] : rn[5] : rd[5] );
frintn_v4s4s.var format : {char const*} = {"2510"};

frintn_v4s4s.disasm = {
  sink << "frintn\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op frintp_dd( 0b0001111001100100110000[22] : rn[5] : rd[5] );
frintp_dd.var format : {char const*} = {"2198"};

frintp_dd.disasm = {
  sink << "frintp\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op frintp_ss( 0b0001111000100100110000[22] : rn[5] : rd[5] );
frintp_ss.var format : {char const*} = {"2284"};

frintp_ss.disasm = {
  sink << "frintp\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op frintp_v2d2d( 0b0100111011100001100010[22] : rn[5] : rd[5] );
frintp_v2d2d.var format : {char const*} = {"2374"};

frintp_v2d2d.disasm = {
  sink << "frintp\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op frintp_v2s2s( 0b0000111010100001100010[22] : rn[5] : rd[5] );
frintp_v2s2s.var format : {char const*} = {"2430"};

frintp_v2s2s.disasm = {
  sink << "frintp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op frintp_v4s4s( 0b0100111010100001100010[22] : rn[5] : rd[5] );
frintp_v4s4s.var format : {char const*} = {"2511"};

frintp_v4s4s.disasm = {
  sink << "frintp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op frintx_dd( 0b0001111001100111010000[22] : rn[5] : rd[5] );
frintx_dd.var format : {char const*} = {"2199"};

frintx_dd.disasm = {
  sink << "frintx\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op frintx_ss( 0b0001111000100111010000[22] : rn[5] : rd[5] );
frintx_ss.var format : {char const*} = {"2285"};

frintx_ss.disasm = {
  sink << "frintx\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op frintx_v2d2d( 0b0110111001100001100110[22] : rn[5] : rd[5] );
frintx_v2d2d.var format : {char const*} = {"2375"};

frintx_v2d2d.disasm = {
  sink << "frintx\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op frintx_v2s2s( 0b0010111000100001100110[22] : rn[5] : rd[5] );
frintx_v2s2s.var format : {char const*} = {"2431"};

frintx_v2s2s.disasm = {
  sink << "frintx\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op frintx_v4s4s( 0b0110111000100001100110[22] : rn[5] : rd[5] );
frintx_v4s4s.var format : {char const*} = {"2512"};

frintx_v4s4s.disasm = {
  sink << "frintx\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op frintz_dd( 0b0001111001100101110000[22] : rn[5] : rd[5] );
frintz_dd.var format : {char const*} = {"2200"};

frintz_dd.disasm = {
  sink << "frintz\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op frintz_ss( 0b0001111000100101110000[22] : rn[5] : rd[5] );
frintz_ss.var format : {char const*} = {"2286"};

frintz_ss.disasm = {
  sink << "frintz\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op frintz_v2d2d( 0b0100111011100001100110[22] : rn[5] : rd[5] );
frintz_v2d2d.var format : {char const*} = {"2376"};

frintz_v2d2d.disasm = {
  sink << "frintz\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op frintz_v2s2s( 0b0000111010100001100110[22] : rn[5] : rd[5] );
frintz_v2s2s.var format : {char const*} = {"2432"};

frintz_v2s2s.disasm = {
  sink << "frintz\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op frintz_v4s4s( 0b0100111010100001100110[22] : rn[5] : rd[5] );
frintz_v4s4s.var format : {char const*} = {"2513"};

frintz_v4s4s.disasm = {
  sink << "frintz\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op frsqrte_dd( 0b0111111011100001110110[22] : rn[5] : rd[5] );
frsqrte_dd.var format : {char const*} = {"2201"};

frsqrte_dd.disasm = {
  sink << "frsqrte\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op frsqrte_ss( 0b0111111010100001110110[22] : rn[5] : rd[5] );
frsqrte_ss.var format : {char const*} = {"2287"};

frsqrte_ss.disasm = {
  sink << "frsqrte\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op frsqrte_v2d2d( 0b0110111011100001110110[22] : rn[5] : rd[5] );
frsqrte_v2d2d.var format : {char const*} = {"2377"};

frsqrte_v2d2d.disasm = {
  sink << "frsqrte\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op frsqrte_v2s2s( 0b0010111010100001110110[22] : rn[5] : rd[5] );
frsqrte_v2s2s.var format : {char const*} = {"2433"};

frsqrte_v2s2s.disasm = {
  sink << "frsqrte\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op frsqrte_v4s4s( 0b0110111010100001110110[22] : rn[5] : rd[5] );
frsqrte_v4s4s.var format : {char const*} = {"2514"};

frsqrte_v4s4s.disasm = {
  sink << "frsqrte\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op frsqrts_ddd( 0b01011110111[11] : rm[5] : 0b111111[6] : rn[5] : rd[5] );
frsqrts_ddd.var format : {char const*} = {"730"};

frsqrts_ddd.disasm = {
  sink << "frsqrts\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op frsqrts_sss( 0b01011110101[11] : rm[5] : 0b111111[6] : rn[5] : rd[5] );
frsqrts_sss.var format : {char const*} = {"807"};

frsqrts_sss.disasm = {
  sink << "frsqrts\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op frsqrts_v2dv2dv2d( 0b01001110111[11] : rm[5] : 0b111111[6] : rn[5] : rd[5] );
frsqrts_v2dv2dv2d.var format : {char const*} = {"924"};

frsqrts_v2dv2dv2d.disasm = {
  sink << "frsqrts\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op frsqrts_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b111111[6] : rn[5] : rd[5] );
frsqrts_v2sv2sv2s.var format : {char const*} = {"1051"};

frsqrts_v2sv2sv2s.disasm = {
  sink << "frsqrts\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op frsqrts_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b111111[6] : rn[5] : rd[5] );
frsqrts_v4sv4sv4s.var format : {char const*} = {"1230"};

frsqrts_v4sv4sv4s.disasm = {
  sink << "frsqrts\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op fsqrt_dd( 0b0001111001100001110000[22] : rn[5] : rd[5] );
fsqrt_dd.var format : {char const*} = {"2202"};

fsqrt_dd.disasm = {
  sink << "fsqrt\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op fsqrt_ss( 0b0001111000100001110000[22] : rn[5] : rd[5] );
fsqrt_ss.var format : {char const*} = {"2288"};

fsqrt_ss.disasm = {
  sink << "fsqrt\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op fsqrt_v2d2d( 0b0110111011100001111110[22] : rn[5] : rd[5] );
fsqrt_v2d2d.var format : {char const*} = {"2378"};

fsqrt_v2d2d.disasm = {
  sink << "fsqrt\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op fsqrt_v2s2s( 0b0010111010100001111110[22] : rn[5] : rd[5] );
fsqrt_v2s2s.var format : {char const*} = {"2434"};

fsqrt_v2s2s.disasm = {
  sink << "fsqrt\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op fsqrt_v4s4s( 0b0110111010100001111110[22] : rn[5] : rd[5] );
fsqrt_v4s4s.var format : {char const*} = {"2515"};

fsqrt_v4s4s.disasm = {
  sink << "fsqrt\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op fsub_ddd( 0b00011110011[11] : rm[5] : 0b001110[6] : rn[5] : rd[5] );
fsub_ddd.var format : {char const*} = {"731"};

fsub_ddd.disasm = {
  sink << "fsub\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op fsub_sss( 0b00011110001[11] : rm[5] : 0b001110[6] : rn[5] : rd[5] );
fsub_sss.var format : {char const*} = {"808"};

fsub_sss.disasm = {
  sink << "fsub\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op fsub_v2dv2dv2d( 0b01001110111[11] : rm[5] : 0b110101[6] : rn[5] : rd[5] );
fsub_v2dv2dv2d.var format : {char const*} = {"925"};

fsub_v2dv2dv2d.disasm = {
  sink << "fsub\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op fsub_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b110101[6] : rn[5] : rd[5] );
fsub_v2sv2sv2s.var format : {char const*} = {"1052"};

fsub_v2sv2sv2s.disasm = {
  sink << "fsub\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op fsub_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b110101[6] : rn[5] : rd[5] );
fsub_v4sv4sv4s.var format : {char const*} = {"1231"};

fsub_v4sv4sv4s.disasm = {
  sink << "fsub\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

/*******************************************************************
 * LD1 (multiple structures)
 *
 * Load multiple 1-element structures to one, two, three or four registers
 */

op ld1_s8b( 0b0000110001000000011100[22] : rn[5] : rt[5] );
ld1_s8b.var format : {char const*} = {"2849"};

ld1_s8b.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_s8b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*1+s)*1) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_s16b( 0b0100110001000000011100[22] : rn[5] : rt[5] );
ld1_s16b.var format : {char const*} = {"2681"};

ld1_s16b.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_s16b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*1+s)*1) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_s4h( 0b0000110001000000011101[22] : rn[5] : rt[5] );
ld1_s4h.var format : {char const*} = {"2789"};

ld1_s4h.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_s4h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*1+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_s8h( 0b0100110001000000011101[22] : rn[5] : rt[5] );
ld1_s8h.var format : {char const*} = {"2879"};

ld1_s8h.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_s8h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*1+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_s2s( 0b0000110001000000011110[22] : rn[5] : rt[5] );
ld1_s2s.var format : {char const*} = {"2759"};

ld1_s2s.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_s2s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*1+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_s4s( 0b0100110001000000011110[22] : rn[5] : rt[5] );
ld1_s4s.var format : {char const*} = {"2819"};

ld1_s4s.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_s4s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*1+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_s1d( 0b0000110001000000011111[22] : rn[5] : rt[5] );
ld1_s1d.var format : {char const*} = {"2699"};

ld1_s1d.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,1,3) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_s1d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 1; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*1+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_s2d( 0b0100110001000000011111[22] : rn[5] : rt[5] );
ld1_s2d.var format : {char const*} = {"2729"};

ld1_s2d.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_s2d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*1+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_d8b( 0b0000110001000000101000[22] : rn[5] : rt[5] );
ld1_d8b.var format : {char const*} = {"2841"};

ld1_d8b.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_d8b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*8+e)*1) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_d16b( 0b0100110001000000101000[22] : rn[5] : rt[5] );
ld1_d16b.var format : {char const*} = {"2673"};

ld1_d16b.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_d16b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*16+e)*1) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_d4h( 0b0000110001000000101001[22] : rn[5] : rt[5] );
ld1_d4h.var format : {char const*} = {"2781"};

ld1_d4h.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_d4h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*4+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_d8h( 0b0100110001000000101001[22] : rn[5] : rt[5] );
ld1_d8h.var format : {char const*} = {"2871"};

ld1_d8h.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_d8h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*8+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_d2s( 0b0000110001000000101010[22] : rn[5] : rt[5] );
ld1_d2s.var format : {char const*} = {"2751"};

ld1_d2s.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_d2s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*2+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_d4s( 0b0100110001000000101010[22] : rn[5] : rt[5] );
ld1_d4s.var format : {char const*} = {"2811"};

ld1_d4s.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_d4s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*4+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_d1d( 0b0000110001000000101011[22] : rn[5] : rt[5] );
ld1_d1d.var format : {char const*} = {"2695"};

ld1_d1d.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,1,3) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_d1d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*1+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_d2d( 0b0100110001000000101011[22] : rn[5] : rt[5] );
ld1_d2d.var format : {char const*} = {"2721"};

ld1_d2d.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_d2d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*2+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_t8b( 0b0000110001000000011000[22] : rn[5] : rt[5] );
ld1_t8b.var format : {char const*} = {"2835"};

ld1_t8b.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_t8b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*8+e)*1) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_t16b( 0b0100110001000000011000[22] : rn[5] : rt[5] );
ld1_t16b.var format : {char const*} = {"2667"};

ld1_t16b.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_t16b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*16+e)*1) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_t4h( 0b0000110001000000011001[22] : rn[5] : rt[5] );
ld1_t4h.var format : {char const*} = {"2775"};

ld1_t4h.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_t4h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*4+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_t8h( 0b0100110001000000011001[22] : rn[5] : rt[5] );
ld1_t8h.var format : {char const*} = {"2865"};

ld1_t8h.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_t8h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*8+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_t2s( 0b0000110001000000011010[22] : rn[5] : rt[5] );
ld1_t2s.var format : {char const*} = {"2745"};

ld1_t2s.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_t2s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*2+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_t4s( 0b0100110001000000011010[22] : rn[5] : rt[5] );
ld1_t4s.var format : {char const*} = {"2805"};

ld1_t4s.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_t4s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*4+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_t1d( 0b0000110001000000011011[22] : rn[5] : rt[5] );
ld1_t1d.var format : {char const*} = {"2691"};

ld1_t1d.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,1,3) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_t1d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*1+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_t2d( 0b0100110001000000011011[22] : rn[5] : rt[5] );
ld1_t2d.var format : {char const*} = {"2715"};

ld1_t2d.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_t2d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*2+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_q8b( 0b0000110001000000001000[22] : rn[5] : rt[5] );
ld1_q8b.var format : {char const*} = {"2825"};

ld1_q8b.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_q8b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*8+e)*1) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_q16b( 0b0100110001000000001000[22] : rn[5] : rt[5] );
ld1_q16b.var format : {char const*} = {"2657"};

ld1_q16b.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_q16b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*16+e)*1) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_q4h( 0b0000110001000000001001[22] : rn[5] : rt[5] );
ld1_q4h.var format : {char const*} = {"2765"};

ld1_q4h.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_q4h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*4+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_q8h( 0b0100110001000000001001[22] : rn[5] : rt[5] );
ld1_q8h.var format : {char const*} = {"2855"};

ld1_q8h.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_q8h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*8+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_q2s( 0b0000110001000000001010[22] : rn[5] : rt[5] );
ld1_q2s.var format : {char const*} = {"2735"};

ld1_q2s.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_q2s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*2+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_q4s( 0b0100110001000000001010[22] : rn[5] : rt[5] );
ld1_q4s.var format : {char const*} = {"2795"};

ld1_q4s.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_q4s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*4+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_q1d( 0b0000110001000000001011[22] : rn[5] : rt[5] );
ld1_q1d.var format : {char const*} = {"2687"};

ld1_q1d.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,1,3) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_q1d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*1+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }
};

op ld1_q2d( 0b0100110001000000001011[22] : rn[5] : rt[5] );
ld1_q2d.var format : {char const*} = {"2705"};

ld1_q2d.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

ld1_q2d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*2+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }
};

op ld1_s8b_imm( 0b0000110011011111011100[22] : rn[5] : rt[5] );
ld1_s8b_imm.var format : {char const*} = {"2853"};

ld1_s8b_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,8,0) << ", [" << DisasmGSXR(rn) << "], #8";
};

ld1_s8b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*1+s)*1) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }
  
  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_s8b_reg( 0b00001100110[11] : rm[5] : 0b011100[6] : rn[5] : rt[5] );
ld1_s8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1768"};

ld1_s8b_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_s8b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*1+s)*1) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_s16b_imm( 0b0100110011011111011100[22] : rn[5] : rt[5] );
ld1_s16b_imm.var format : {char const*} = {"2685"};

ld1_s16b_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,16,0) << ", [" << DisasmGSXR(rn) << "], #16";
};

ld1_s16b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*1+s)*1) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_s16b_reg( 0b01001100110[11] : rm[5] : 0b011100[6] : rn[5] : rt[5] );
ld1_s16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1684"};

ld1_s16b_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_s16b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*1+s)*1) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_s4h_imm( 0b0000110011011111011101[22] : rn[5] : rt[5] );
ld1_s4h_imm.var format : {char const*} = {"2793"};

ld1_s4h_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,4,1) << ", [" << DisasmGSXR(rn) << "], #8";
};

ld1_s4h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*1+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_s4h_reg( 0b00001100110[11] : rm[5] : 0b011101[6] : rn[5] : rt[5] );
ld1_s4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1738"};

ld1_s4h_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_s4h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*1+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_s8h_imm( 0b0100110011011111011101[22] : rn[5] : rt[5] );
ld1_s8h_imm.var format : {char const*} = {"2883"};

ld1_s8h_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,8,1) << ", [" << DisasmGSXR(rn) << "], #16";
};

ld1_s8h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*1+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_s8h_reg( 0b01001100110[11] : rm[5] : 0b011101[6] : rn[5] : rt[5] );
ld1_s8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1783"};

ld1_s8h_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_s8h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*1+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_s2s_imm( 0b0000110011011111011110[22] : rn[5] : rt[5] );
ld1_s2s_imm.var format : {char const*} = {"2763"};

ld1_s2s_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,2,2) << ", [" << DisasmGSXR(rn) << "], #8";
};

ld1_s2s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*1+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_s2s_reg( 0b00001100110[11] : rm[5] : 0b011110[6] : rn[5] : rt[5] );
ld1_s2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1723"};

ld1_s2s_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_s2s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*1+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_s4s_imm( 0b0100110011011111011110[22] : rn[5] : rt[5] );
ld1_s4s_imm.var format : {char const*} = {"2823"};

ld1_s4s_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,4,2) << ", [" << DisasmGSXR(rn) << "], #16";
};

ld1_s4s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*1+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_s4s_reg( 0b01001100110[11] : rm[5] : 0b011110[6] : rn[5] : rt[5] );
ld1_s4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1753"};

ld1_s4s_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_s4s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*1+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_s1d_imm( 0b0000110011011111011111[22] : rn[5] : rt[5] );
ld1_s1d_imm.var format : {char const*} = {"2703"};

ld1_s1d_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,1,3) << ", [" << DisasmGSXR(rn) << "], #8";
};

ld1_s1d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 1; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*1+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_s1d_reg( 0b00001100110[11] : rm[5] : 0b011111[6] : rn[5] : rt[5] );
ld1_s1d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1693"};

ld1_s1d_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,1,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_s1d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 1; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*1+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_s2d_imm( 0b0100110011011111011111[22] : rn[5] : rt[5] );
ld1_s2d_imm.var format : {char const*} = {"2733"};

ld1_s2d_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,2,3) << ", [" << DisasmGSXR(rn) << "], #16";
};

ld1_s2d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*1+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_s2d_reg( 0b01001100110[11] : rm[5] : 0b011111[6] : rn[5] : rt[5] );
ld1_s2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1708"};

ld1_s2d_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_s2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*1+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_d8b_imm( 0b0000110011011111101000[22] : rn[5] : rt[5] );
ld1_d8b_imm.var format : {char const*} = {"2847"};

ld1_d8b_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "], #16";
};

ld1_d8b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*8+e)*1) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_d8b_reg( 0b00001100110[11] : rm[5] : 0b101000[6] : rn[5] : rt[5] );
ld1_d8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1765"};

ld1_d8b_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_d8b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*8+e)*1) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_d16b_imm( 0b0100110011011111101000[22] : rn[5] : rt[5] );
ld1_d16b_imm.var format : {char const*} = {"2679"};

ld1_d16b_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld1_d16b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*16+e)*1) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_d16b_reg( 0b01001100110[11] : rm[5] : 0b101000[6] : rn[5] : rt[5] );
ld1_d16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1681"};

ld1_d16b_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_d16b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*16+e)*1) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_d4h_imm( 0b0000110011011111101001[22] : rn[5] : rt[5] );
ld1_d4h_imm.var format : {char const*} = {"2787"};

ld1_d4h_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "], #16";
};

ld1_d4h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*4+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_d4h_reg( 0b00001100110[11] : rm[5] : 0b101001[6] : rn[5] : rt[5] );
ld1_d4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1735"};

ld1_d4h_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_d4h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*4+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_d8h_imm( 0b0100110011011111101001[22] : rn[5] : rt[5] );
ld1_d8h_imm.var format : {char const*} = {"2877"};

ld1_d8h_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld1_d8h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*8+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_d8h_reg( 0b01001100110[11] : rm[5] : 0b101001[6] : rn[5] : rt[5] );
ld1_d8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1780"};

ld1_d8h_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_d8h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*8+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_d2s_imm( 0b0000110011011111101010[22] : rn[5] : rt[5] );
ld1_d2s_imm.var format : {char const*} = {"2757"};

ld1_d2s_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "], #16";
};

ld1_d2s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*2+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_d2s_reg( 0b00001100110[11] : rm[5] : 0b101010[6] : rn[5] : rt[5] );
ld1_d2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1720"};

ld1_d2s_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_d2s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*2+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_d4s_imm( 0b0100110011011111101010[22] : rn[5] : rt[5] );
ld1_d4s_imm.var format : {char const*} = {"2817"};

ld1_d4s_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld1_d4s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*4+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_d4s_reg( 0b01001100110[11] : rm[5] : 0b101010[6] : rn[5] : rt[5] );
ld1_d4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1750"};

ld1_d4s_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_d4s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*4+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_d1d_imm( 0b0000110011011111101011[22] : rn[5] : rt[5] );
ld1_d1d_imm.var format : {char const*} = {"2698"};

ld1_d1d_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,1,3) << ", [" << DisasmGSXR(rn) << "], #16";
};

ld1_d1d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*1+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_d1d_reg( 0b00001100110[11] : rm[5] : 0b101011[6] : rn[5] : rt[5] );
ld1_d1d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1691"};

ld1_d1d_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,1,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_d1d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*1+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_d2d_imm( 0b0100110011011111101011[22] : rn[5] : rt[5] );
ld1_d2d_imm.var format : {char const*} = {"2727"};

ld1_d2d_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld1_d2d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*2+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_d2d_reg( 0b01001100110[11] : rm[5] : 0b101011[6] : rn[5] : rt[5] );
ld1_d2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1705"};

ld1_d2d_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_d2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*2+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_t8b_imm( 0b0000110011011111011000[22] : rn[5] : rt[5] );
ld1_t8b_imm.var format : {char const*} = {"2839"};

ld1_t8b_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "], #24";
};

ld1_t8b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*8+e)*1) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_t8b_reg( 0b00001100110[11] : rm[5] : 0b011000[6] : rn[5] : rt[5] );
ld1_t8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1761"};

ld1_t8b_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_t8b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*8+e)*1) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_t16b_imm( 0b0100110011011111011000[22] : rn[5] : rt[5] );
ld1_t16b_imm.var format : {char const*} = {"2671"};

ld1_t16b_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "], #48";
};

ld1_t16b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*16+e)*1) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_t16b_reg( 0b01001100110[11] : rm[5] : 0b011000[6] : rn[5] : rt[5] );
ld1_t16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1677"};

ld1_t16b_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_t16b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*16+e)*1) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_t4h_imm( 0b0000110011011111011001[22] : rn[5] : rt[5] );
ld1_t4h_imm.var format : {char const*} = {"2779"};

ld1_t4h_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "], #24";
};

ld1_t4h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*4+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_t4h_reg( 0b00001100110[11] : rm[5] : 0b011001[6] : rn[5] : rt[5] );
ld1_t4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1731"};

ld1_t4h_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_t4h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*4+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_t8h_imm( 0b0100110011011111011001[22] : rn[5] : rt[5] );
ld1_t8h_imm.var format : {char const*} = {"2869"};

ld1_t8h_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "], #48";
};

ld1_t8h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*8+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_t8h_reg( 0b01001100110[11] : rm[5] : 0b011001[6] : rn[5] : rt[5] );
ld1_t8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1776"};

ld1_t8h_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_t8h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*8+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_t2s_imm( 0b0000110011011111011010[22] : rn[5] : rt[5] );
ld1_t2s_imm.var format : {char const*} = {"2749"};

ld1_t2s_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "], #24";
};

ld1_t2s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*2+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_t2s_reg( 0b00001100110[11] : rm[5] : 0b011010[6] : rn[5] : rt[5] );
ld1_t2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1716"};

ld1_t2s_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_t2s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*2+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_t4s_imm( 0b0100110011011111011010[22] : rn[5] : rt[5] );
ld1_t4s_imm.var format : {char const*} = {"2809"};

ld1_t4s_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "], #48";
};

ld1_t4s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*4+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_t4s_reg( 0b01001100110[11] : rm[5] : 0b011010[6] : rn[5] : rt[5] );
ld1_t4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1746"};

ld1_t4s_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_t4s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*4+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_t1d_imm( 0b0000110011011111011011[22] : rn[5] : rt[5] );
ld1_t1d_imm.var format : {char const*} = {"2693"};

ld1_t1d_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,1,3) << ", [" << DisasmGSXR(rn) << "], #24";
};

ld1_t1d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*1+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_t1d_reg( 0b00001100110[11] : rm[5] : 0b011011[6] : rn[5] : rt[5] );
ld1_t1d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1688"};

ld1_t1d_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,1,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_t1d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*1+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_t2d_imm( 0b0100110011011111011011[22] : rn[5] : rt[5] );
ld1_t2d_imm.var format : {char const*} = {"2719"};

ld1_t2d_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "], #48";
};

ld1_t2d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*2+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_t2d_reg( 0b01001100110[11] : rm[5] : 0b011011[6] : rn[5] : rt[5] );
ld1_t2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1701"};

ld1_t2d_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_t2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*2+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_q8b_imm( 0b0000110011011111001000[22] : rn[5] : rt[5] );
ld1_q8b_imm.var format : {char const*} = {"2831"};

ld1_q8b_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld1_q8b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*8+e)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_q8b_reg( 0b00001100110[11] : rm[5] : 0b001000[6] : rn[5] : rt[5] );
ld1_q8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1757"};

ld1_q8b_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_q8b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*8+e)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_q16b_imm( 0b0100110011011111001000[22] : rn[5] : rt[5] );
ld1_q16b_imm.var format : {char const*} = {"2663"};

ld1_q16b_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "], #64";
};

ld1_q16b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*16+e)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_q16b_reg( 0b01001100110[11] : rm[5] : 0b001000[6] : rn[5] : rt[5] );
ld1_q16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1673"};

ld1_q16b_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_q16b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.SetVU8((rt+r)%32, e, cpu.MemRead8( addr + U64((r*16+e)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_q4h_imm( 0b0000110011011111001001[22] : rn[5] : rt[5] );
ld1_q4h_imm.var format : {char const*} = {"2771"};

ld1_q4h_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld1_q4h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*4+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_q4h_reg( 0b00001100110[11] : rm[5] : 0b001001[6] : rn[5] : rt[5] );
ld1_q4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1727"};

ld1_q4h_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_q4h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*4+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_q8h_imm( 0b0100110011011111001001[22] : rn[5] : rt[5] );
ld1_q8h_imm.var format : {char const*} = {"2861"};

ld1_q8h_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "], #64";
};

ld1_q8h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*8+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_q8h_reg( 0b01001100110[11] : rm[5] : 0b001001[6] : rn[5] : rt[5] );
ld1_q8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1772"};

ld1_q8h_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_q8h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.SetVU16((rt+r)%32, e, cpu.MemRead16( addr + U64((r*8+e)*2) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_q2s_imm( 0b0000110011011111001010[22] : rn[5] : rt[5] );
ld1_q2s_imm.var format : {char const*} = {"2741"};

ld1_q2s_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld1_q2s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*2+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_q2s_reg( 0b00001100110[11] : rm[5] : 0b001010[6] : rn[5] : rt[5] );
ld1_q2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1712"};

ld1_q2s_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_q2s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*2+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_q4s_imm( 0b0100110011011111001010[22] : rn[5] : rt[5] );
ld1_q4s_imm.var format : {char const*} = {"2801"};

ld1_q4s_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "], #64";
};

ld1_q4s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*4+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_q4s_reg( 0b01001100110[11] : rm[5] : 0b001010[6] : rn[5] : rt[5] );
ld1_q4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1742"};

ld1_q4s_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_q4s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.SetVU32((rt+r)%32, e, cpu.MemRead32( addr + U64((r*4+e)*4) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_q1d_imm( 0b0000110011011111001011[22] : rn[5] : rt[5] );
ld1_q1d_imm.var format : {char const*} = {"2689"};

ld1_q1d_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,1,3) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld1_q1d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*1+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op ld1_q1d_reg( 0b00001100110[11] : rm[5] : 0b001011[6] : rn[5] : rt[5] );
ld1_q1d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1686"};

ld1_q1d_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,1,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_q1d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*1+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld1_q2d_imm( 0b0100110011011111001011[22] : rn[5] : rt[5] );
ld1_q2d_imm.var format : {char const*} = {"2711"};

ld1_q2d_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "], #64";
};

ld1_q2d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*2+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld1_q2d_reg( 0b01001100110[11] : rm[5] : 0b001011[6] : rn[5] : rt[5] );
ld1_q2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1697"};

ld1_q2d_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld1_q2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.SetVU64((rt+r)%32, e, cpu.MemRead64( addr + U64((r*2+e)*8) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

/*
 * end of LD1 (multiple structure)
 *******************************************************************/

/*******************************************************************
 * LD1 (single structure)
 *
 * Load single 1-element structure to one lane of one register
 */

op ld1_sbi( 0b0[1] : shl<3> index1[1] : 0b00110101000000000[17] : index0[3] : rn[5] : rt[5] );
ld1_sbi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1815"};

ld1_sbi.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld1_shi( 0b0[1] : shl<2> index1[1] : 0b00110101000000010[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
ld1_shi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1909"};

ld1_shi.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld1_ssi( 0b0[1] : shl<1> index1[1] : 0b00110101000000100[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
ld1_ssi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"2008"};

ld1_ssi.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld1_sdi( 0b0[1] : index[1] : 0b00110101000000100001[20] : rn[5] : rt[5] );
ld1_sdi.var format : {char const*} = {"2032"};

ld1_sdi.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld1_sbi_imm( 0b0[1] : shl<3> index1[1] : 0b00110111011111000[17] : index0[3] : rn[5] : rt[5] );
ld1_sbi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1818"};

ld1_sbi_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #1";
};

op ld1_sbi_reg( 0b0[1] : shl<3> index1[1] : 0b001101110[9] : rm[5] : 0b000[3] : index0[3] : rn[5] : rt[5] );
ld1_sbi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"257"};

ld1_sbi_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld1_shi_imm( 0b0[1] : shl<2> index1[1] : 0b00110111011111010[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
ld1_shi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1912"};

ld1_shi_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #2";
};

op ld1_shi_reg( 0b0[1] : shl<2> index1[1] : 0b001101110[9] : rm[5] : 0b010[3] : index0[2] : 0b0[1] : rn[5] : rt[5] );
ld1_shi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"361"};

ld1_shi_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld1_ssi_imm( 0b0[1] : shl<1> index1[1] : 0b00110111011111100[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
ld1_ssi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"2011"};

ld1_ssi_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #4";
};

op ld1_ssi_reg( 0b0[1] : shl<1> index1[1] : 0b001101110[9] : rm[5] : 0b100[3] : index0[1] : 0b00[2] : rn[5] : rt[5] );
ld1_ssi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"447"};

ld1_ssi_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld1_sdi_imm( 0b0[1] : index[1] : 0b00110111011111100001[20] : rn[5] : rt[5] );
ld1_sdi_imm.var format : {char const*} = {"2035"};

ld1_sdi_imm.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #8";
};

op ld1_sdi_reg( 0b0[1] : index[1] : 0b001101110[9] : rm[5] : 0b100001[6] : rn[5] : rt[5] );
ld1_sdi_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"534"};

ld1_sdi_reg.disasm = {
  sink << "ld1\t" << DisasmBunch(rt,1,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

/*
 * end of LD1 (single structure)
 *******************************************************************/

/*******************************************************************
 * LD1R
 *
 * Load single 1-element structure and replicate to all lanes (of one register)
 */

op ld1r_s8b( 0b0000110101000000110000[22] : rn[5] : rt[5] );
ld1r_s8b.var format : {char const*} = {"2850"};

ld1r_s8b.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

op ld1r_s16b( 0b0100110101000000110000[22] : rn[5] : rt[5] );
ld1r_s16b.var format : {char const*} = {"2682"};

ld1r_s16b.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

op ld1r_s4h( 0b0000110101000000110001[22] : rn[5] : rt[5] );
ld1r_s4h.var format : {char const*} = {"2790"};

ld1r_s4h.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

op ld1r_s8h( 0b0100110101000000110001[22] : rn[5] : rt[5] );
ld1r_s8h.var format : {char const*} = {"2880"};

ld1r_s8h.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

op ld1r_s2s( 0b0000110101000000110010[22] : rn[5] : rt[5] );
ld1r_s2s.var format : {char const*} = {"2760"};

ld1r_s2s.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

op ld1r_s4s( 0b0100110101000000110010[22] : rn[5] : rt[5] );
ld1r_s4s.var format : {char const*} = {"2820"};

ld1r_s4s.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

op ld1r_s1d( 0b0000110101000000110011[22] : rn[5] : rt[5] );
ld1r_s1d.var format : {char const*} = {"2700"};

ld1r_s1d.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,1,3) << ", [" << DisasmGSXR(rn) << "]";
};

op ld1r_s2d( 0b0100110101000000110011[22] : rn[5] : rt[5] );
ld1r_s2d.var format : {char const*} = {"2730"};

ld1r_s2d.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

op ld1r_s8b_imm( 0b0000110111011111110000[22] : rn[5] : rt[5] );
ld1r_s8b_imm.var format : {char const*} = {"2854"};

ld1r_s8b_imm.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,8,0) << ", [" << DisasmGSXR(rn) << "], #1";
};

op ld1r_s8b_reg( 0b00001101110[11] : rm[5] : 0b110000[6] : rn[5] : rt[5] );
ld1r_s8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1769"};

ld1r_s8b_reg.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld1r_s16b_imm( 0b0100110111011111110000[22] : rn[5] : rt[5] );
ld1r_s16b_imm.var format : {char const*} = {"2686"};

ld1r_s16b_imm.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,16,0) << ", [" << DisasmGSXR(rn) << "], #1";
};

op ld1r_s16b_reg( 0b01001101110[11] : rm[5] : 0b110000[6] : rn[5] : rt[5] );
ld1r_s16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1685"};

ld1r_s16b_reg.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld1r_s4h_imm( 0b0000110111011111110001[22] : rn[5] : rt[5] );
ld1r_s4h_imm.var format : {char const*} = {"2794"};

ld1r_s4h_imm.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,4,1) << ", [" << DisasmGSXR(rn) << "], #2";
};

op ld1r_s4h_reg( 0b00001101110[11] : rm[5] : 0b110001[6] : rn[5] : rt[5] );
ld1r_s4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1739"};

ld1r_s4h_reg.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld1r_s8h_imm( 0b0100110111011111110001[22] : rn[5] : rt[5] );
ld1r_s8h_imm.var format : {char const*} = {"2884"};

ld1r_s8h_imm.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,8,1) << ", [" << DisasmGSXR(rn) << "], #2";
};

op ld1r_s8h_reg( 0b01001101110[11] : rm[5] : 0b110001[6] : rn[5] : rt[5] );
ld1r_s8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1784"};

ld1r_s8h_reg.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld1r_s2s_imm( 0b0000110111011111110010[22] : rn[5] : rt[5] );
ld1r_s2s_imm.var format : {char const*} = {"2764"};

ld1r_s2s_imm.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,2,2) << ", [" << DisasmGSXR(rn) << "], #4";
};

op ld1r_s2s_reg( 0b00001101110[11] : rm[5] : 0b110010[6] : rn[5] : rt[5] );
ld1r_s2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1724"};

ld1r_s2s_reg.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld1r_s4s_imm( 0b0100110111011111110010[22] : rn[5] : rt[5] );
ld1r_s4s_imm.var format : {char const*} = {"2824"};

ld1r_s4s_imm.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,4,2) << ", [" << DisasmGSXR(rn) << "], #4";
};

op ld1r_s4s_reg( 0b01001101110[11] : rm[5] : 0b110010[6] : rn[5] : rt[5] );
ld1r_s4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1754"};

ld1r_s4s_reg.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld1r_s1d_imm( 0b0000110111011111110011[22] : rn[5] : rt[5] );
ld1r_s1d_imm.var format : {char const*} = {"2704"};

ld1r_s1d_imm.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,1,3) << ", [" << DisasmGSXR(rn) << "], #8";
};

op ld1r_s1d_reg( 0b00001101110[11] : rm[5] : 0b110011[6] : rn[5] : rt[5] );
ld1r_s1d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1694"};

ld1r_s1d_reg.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,1,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld1r_s2d_imm( 0b0100110111011111110011[22] : rn[5] : rt[5] );
ld1r_s2d_imm.var format : {char const*} = {"2734"};

ld1r_s2d_imm.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,2,3) << ", [" << DisasmGSXR(rn) << "], #8";
};

op ld1r_s2d_reg( 0b01001101110[11] : rm[5] : 0b110011[6] : rn[5] : rt[5] );
ld1r_s2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1709"};

ld1r_s2d_reg.disasm = {
  sink << "ld1r\t" << DisasmBunch(rt,1,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

/*
 * end of LD1R
 *******************************************************************/

/*******************************************************************
 * LD2 (multiple structures)
 *
 * Load multiple 2-element structures to two registers
 */

op ld2_d8b( 0b0000110001000000100000[22] : rn[5] : rt[5] );
ld2_d8b.var format : {char const*} = {"2842"};

ld2_d8b.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

ld2_d8b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*2+s)*1) ));
    }
  }
};

op ld2_d16b( 0b0100110001000000100000[22] : rn[5] : rt[5] );
ld2_d16b.var format : {char const*} = {"2674"};

ld2_d16b.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

ld2_d16b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*2+s)*1) ));
    }
  }
};

op ld2_d4h( 0b0000110001000000100001[22] : rn[5] : rt[5] );
ld2_d4h.var format : {char const*} = {"2782"};

ld2_d4h.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

ld2_d4h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*2+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op ld2_d8h( 0b0100110001000000100001[22] : rn[5] : rt[5] );
ld2_d8h.var format : {char const*} = {"2872"};

ld2_d8h.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

ld2_d8h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*2+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op ld2_d2s( 0b0000110001000000100010[22] : rn[5] : rt[5] );
ld2_d2s.var format : {char const*} = {"2752"};

ld2_d2s.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

ld2_d2s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*2+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op ld2_d4s( 0b0100110001000000100010[22] : rn[5] : rt[5] );
ld2_d4s.var format : {char const*} = {"2812"};

ld2_d4s.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

ld2_d4s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*2+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op ld2_d2d( 0b0100110001000000100011[22] : rn[5] : rt[5] );
ld2_d2d.var format : {char const*} = {"2722"};

ld2_d2d.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

ld2_d2d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*2+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op ld2_d8b_imm( 0b0000110011011111100000[22] : rn[5] : rt[5] );
ld2_d8b_imm.var format : {char const*} = {"2848"};

ld2_d8b_imm.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "], #16";
};

ld2_d8b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*2+s)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + U64(16) );
};

op ld2_d8b_reg( 0b00001100110[11] : rm[5] : 0b100000[6] : rn[5] : rt[5] );
ld2_d8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1766"};

ld2_d8b_reg.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld2_d8b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*2+s)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld2_d16b_imm( 0b0100110011011111100000[22] : rn[5] : rt[5] );
ld2_d16b_imm.var format : {char const*} = {"2680"};

ld2_d16b_imm.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld2_d16b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*2+s)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + U64(32) );
};

op ld2_d16b_reg( 0b01001100110[11] : rm[5] : 0b100000[6] : rn[5] : rt[5] );
ld2_d16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1682"};

ld2_d16b_reg.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld2_d16b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*2+s)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld2_d4h_imm( 0b0000110011011111100001[22] : rn[5] : rt[5] );
ld2_d4h_imm.var format : {char const*} = {"2788"};

ld2_d4h_imm.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "], #16";
};

ld2_d4h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*2+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld2_d4h_reg( 0b00001100110[11] : rm[5] : 0b100001[6] : rn[5] : rt[5] );
ld2_d4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1736"};

ld2_d4h_reg.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld2_d4h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*2+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld2_d8h_imm( 0b0100110011011111100001[22] : rn[5] : rt[5] );
ld2_d8h_imm.var format : {char const*} = {"2878"};

ld2_d8h_imm.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld2_d8h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*2+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(32) );
};

op ld2_d8h_reg( 0b01001100110[11] : rm[5] : 0b100001[6] : rn[5] : rt[5] );
ld2_d8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1781"};

ld2_d8h_reg.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld2_d8h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*2+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld2_d2s_imm( 0b0000110011011111100010[22] : rn[5] : rt[5] );
ld2_d2s_imm.var format : {char const*} = {"2758"};

ld2_d2s_imm.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "], #16";
};

ld2_d2s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*2+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op ld2_d2s_reg( 0b00001100110[11] : rm[5] : 0b100010[6] : rn[5] : rt[5] );
ld2_d2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1721"};

ld2_d2s_reg.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld2_d2s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*2+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld2_d4s_imm( 0b0100110011011111100010[22] : rn[5] : rt[5] );
ld2_d4s_imm.var format : {char const*} = {"2818"};

ld2_d4s_imm.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld2_d4s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*2+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(32) );
};

op ld2_d4s_reg( 0b01001100110[11] : rm[5] : 0b100010[6] : rn[5] : rt[5] );
ld2_d4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1751"};

ld2_d4s_reg.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld2_d4s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*2+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld2_d2d_imm( 0b0100110011011111100011[22] : rn[5] : rt[5] );
ld2_d2d_imm.var format : {char const*} = {"2728"};

ld2_d2d_imm.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld2_d2d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*2+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(32) );
};

op ld2_d2d_reg( 0b01001100110[11] : rm[5] : 0b100011[6] : rn[5] : rt[5] );
ld2_d2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1706"};

ld2_d2d_reg.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld2_d2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*2+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

/*
 * end of LD2 (multiple structures)
 *******************************************************************/

/*******************************************************************
 * LD2 (single structure)
 *
 * Load single 2-element structure to one lane of two registers
 */

op ld2_dbi( 0b0[1] : shl<3> index1[1] : 0b00110101100000000[17] : index0[3] : rn[5] : rt[5] );
ld2_dbi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1811"};

ld2_dbi.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld2_dhi( 0b0[1] : shl<2> index1[1] : 0b00110101100000010[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
ld2_dhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1905"};

ld2_dhi.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld2_dsi( 0b0[1] : shl<1> index1[1] : 0b00110101100000100[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
ld2_dsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"2004"};

ld2_dsi.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld2_ddi( 0b0[1] : index[1] : 0b00110101100000100001[20] : rn[5] : rt[5] );
ld2_ddi.var format : {char const*} = {"2028"};

ld2_ddi.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld2_dbi_imm( 0b0[1] : shl<3> index1[1] : 0b00110111111111000[17] : index0[3] : rn[5] : rt[5] );
ld2_dbi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1814"};

ld2_dbi_imm.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #2";
};

op ld2_dbi_reg( 0b0[1] : shl<3> index1[1] : 0b001101111[9] : rm[5] : 0b000[3] : index0[3] : rn[5] : rt[5] );
ld2_dbi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"255"};

ld2_dbi_reg.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld2_dhi_imm( 0b0[1] : shl<2> index1[1] : 0b00110111111111010[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
ld2_dhi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1908"};

ld2_dhi_imm.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #4";
};

op ld2_dhi_reg( 0b0[1] : shl<2> index1[1] : 0b001101111[9] : rm[5] : 0b010[3] : index0[2] : 0b0[1] : rn[5] : rt[5] );
ld2_dhi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"359"};

ld2_dhi_reg.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld2_dsi_imm( 0b0[1] : shl<1> index1[1] : 0b00110111111111100[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
ld2_dsi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"2007"};

ld2_dsi_imm.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #8";
};

op ld2_dsi_reg( 0b0[1] : shl<1> index1[1] : 0b001101111[9] : rm[5] : 0b100[3] : index0[1] : 0b00[2] : rn[5] : rt[5] );
ld2_dsi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"445"};

ld2_dsi_reg.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld2_ddi_imm( 0b0[1] : index[1] : 0b00110111111111100001[20] : rn[5] : rt[5] );
ld2_ddi_imm.var format : {char const*} = {"2031"};

ld2_ddi_imm.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #16";
};

op ld2_ddi_reg( 0b0[1] : index[1] : 0b001101111[9] : rm[5] : 0b100001[6] : rn[5] : rt[5] );
ld2_ddi_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"532"};

ld2_ddi_reg.disasm = {
  sink << "ld2\t" << DisasmBunch(rt,2,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

/*
 * end of LD2 (single structure)
 *******************************************************************/

/*******************************************************************
 * LD2R
 *
 * Load single 2-element structure and replicate to all lanes of two
 * registers
 */

op ld2r_d8b( 0b0000110101100000110[19] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld2r_d8b.var format : {char const*} = {"2081"};

ld2r_d8b.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

op ld2r_d16b( 0b0100110101100000110[19] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld2r_d16b.var format : {char const*} = {"2045"};

ld2r_d16b.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

op ld2r_d4h( 0b0000110101100000110[19] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld2r_d4h.var format : {char const*} = {"2069"};

ld2r_d4h.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

op ld2r_d8h( 0b0100110101100000110[19] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld2r_d8h.var format : {char const*} = {"2087"};

ld2r_d8h.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

op ld2r_d2s( 0b0000110101100000110[19] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld2r_d2s.var format : {char const*} = {"2063"};

ld2r_d2s.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

op ld2r_d4s( 0b0100110101100000110[19] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld2r_d4s.var format : {char const*} = {"2075"};

ld2r_d4s.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

op ld2r_d1d( 0b0000110101100000110[19] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld2r_d1d.var format : {char const*} = {"2051"};

ld2r_d1d.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,1,3) << ", [" << DisasmGSXR(rn) << "]";
};

op ld2r_d2d( 0b0100110101100000110[19] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld2r_d2d.var format : {char const*} = {"2057"};

ld2r_d2d.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

op ld2r_d8b_imm( 0b0000110111111111110[19] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld2r_d8b_imm.var format : {char const*} = {"2082"};

ld2r_d8b_imm.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "], #2";
};

op ld2r_d8b_reg( 0b00001101111[11] : rm[5] : 0b110[3] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld2r_d8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"674"};

ld2r_d8b_reg.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld2r_d16b_imm( 0b0100110111111111110[19] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld2r_d16b_imm.var format : {char const*} = {"2046"};

ld2r_d16b_imm.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "], #2";
};

op ld2r_d16b_reg( 0b01001101111[11] : rm[5] : 0b110[3] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld2r_d16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"656"};

ld2r_d16b_reg.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld2r_d4h_imm( 0b0000110111111111110[19] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld2r_d4h_imm.var format : {char const*} = {"2070"};

ld2r_d4h_imm.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "], #4";
};

op ld2r_d4h_reg( 0b00001101111[11] : rm[5] : 0b110[3] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld2r_d4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"668"};

ld2r_d4h_reg.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld2r_d8h_imm( 0b0100110111111111110[19] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld2r_d8h_imm.var format : {char const*} = {"2088"};

ld2r_d8h_imm.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "], #4";
};

op ld2r_d8h_reg( 0b01001101111[11] : rm[5] : 0b110[3] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld2r_d8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"677"};

ld2r_d8h_reg.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld2r_d2s_imm( 0b0000110111111111110[19] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld2r_d2s_imm.var format : {char const*} = {"2064"};

ld2r_d2s_imm.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "], #8";
};

op ld2r_d2s_reg( 0b00001101111[11] : rm[5] : 0b110[3] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld2r_d2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"665"};

ld2r_d2s_reg.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld2r_d4s_imm( 0b0100110111111111110[19] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld2r_d4s_imm.var format : {char const*} = {"2076"};

ld2r_d4s_imm.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "], #8";
};

op ld2r_d4s_reg( 0b01001101111[11] : rm[5] : 0b110[3] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld2r_d4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"671"};

ld2r_d4s_reg.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld2r_d1d_imm( 0b0000110111111111110[19] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld2r_d1d_imm.var format : {char const*} = {"2052"};

ld2r_d1d_imm.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,1,3) << ", [" << DisasmGSXR(rn) << "], #16";
};

op ld2r_d1d_reg( 0b00001101111[11] : rm[5] : 0b110[3] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld2r_d1d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"659"};

ld2r_d1d_reg.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,1,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld2r_d2d_imm( 0b0100110111111111110[19] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld2r_d2d_imm.var format : {char const*} = {"2058"};

ld2r_d2d_imm.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "], #16";
};

op ld2r_d2d_reg( 0b01001101111[11] : rm[5] : 0b110[3] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld2r_d2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"662"};

ld2r_d2d_reg.disasm = {
  sink << "ld2r\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

/*
 * end of LD2R
 *******************************************************************/

/*******************************************************************
 * LD3 (multiple structures)
 *
 * Load multiple 3-element structures to three registers
 */

op ld3_t8b( 0b0000110001000000010000[22] : rn[5] : rt[5] );
ld3_t8b.var format : {char const*} = {"2833"};

ld3_t8b.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

ld3_t8b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*3+s)*1) ));
    }
  }
};

op ld3_t16b( 0b0100110001000000010000[22] : rn[5] : rt[5] );
ld3_t16b.var format : {char const*} = {"2665"};

ld3_t16b.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

ld3_t16b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*3+s)*1) ));
    }
  }
};

op ld3_t4h( 0b0000110001000000010001[22] : rn[5] : rt[5] );
ld3_t4h.var format : {char const*} = {"2773"};

ld3_t4h.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

ld3_t4h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*3+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op ld3_t8h( 0b0100110001000000010001[22] : rn[5] : rt[5] );
ld3_t8h.var format : {char const*} = {"2863"};

ld3_t8h.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

ld3_t8h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*3+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op ld3_t2s( 0b0000110001000000010010[22] : rn[5] : rt[5] );
ld3_t2s.var format : {char const*} = {"2743"};

ld3_t2s.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

ld3_t2s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*3+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op ld3_t4s( 0b0100110001000000010010[22] : rn[5] : rt[5] );
ld3_t4s.var format : {char const*} = {"2803"};

ld3_t4s.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

ld3_t4s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*3+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op ld3_t2d( 0b0100110001000000010011[22] : rn[5] : rt[5] );
ld3_t2d.var format : {char const*} = {"2713"};

ld3_t2d.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

ld3_t2d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*3+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op ld3_t8b_imm( 0b0000110011011111010000[22] : rn[5] : rt[5] );
ld3_t8b_imm.var format : {char const*} = {"2837"};

ld3_t8b_imm.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "], #24";
};

ld3_t8b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*3+s)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + U64(24) );
};

op ld3_t8b_reg( 0b00001100110[11] : rm[5] : 0b010000[6] : rn[5] : rt[5] );
ld3_t8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1759"};

ld3_t8b_reg.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld3_t8b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*3+s)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld3_t16b_imm( 0b0100110011011111010000[22] : rn[5] : rt[5] );
ld3_t16b_imm.var format : {char const*} = {"2669"};

ld3_t16b_imm.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "], #48";
};

ld3_t16b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*3+s)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + U64(48) );
};

op ld3_t16b_reg( 0b01001100110[11] : rm[5] : 0b010000[6] : rn[5] : rt[5] );
ld3_t16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1675"};

ld3_t16b_reg.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld3_t16b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*3+s)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld3_t4h_imm( 0b0000110011011111010001[22] : rn[5] : rt[5] );
ld3_t4h_imm.var format : {char const*} = {"2777"};

ld3_t4h_imm.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "], #24";
};

ld3_t4h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*3+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(24) );
};

op ld3_t4h_reg( 0b00001100110[11] : rm[5] : 0b010001[6] : rn[5] : rt[5] );
ld3_t4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1729"};

ld3_t4h_reg.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld3_t4h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*3+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld3_t8h_imm( 0b0100110011011111010001[22] : rn[5] : rt[5] );
ld3_t8h_imm.var format : {char const*} = {"2867"};

ld3_t8h_imm.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "], #48";
};

ld3_t8h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*3+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(48) );
};

op ld3_t8h_reg( 0b01001100110[11] : rm[5] : 0b010001[6] : rn[5] : rt[5] );
ld3_t8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1774"};

ld3_t8h_reg.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld3_t8h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*3+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld3_t2s_imm( 0b0000110011011111010010[22] : rn[5] : rt[5] );
ld3_t2s_imm.var format : {char const*} = {"2747"};

ld3_t2s_imm.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "], #24";
};

ld3_t2s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*3+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(24) );
};

op ld3_t2s_reg( 0b00001100110[11] : rm[5] : 0b010010[6] : rn[5] : rt[5] );
ld3_t2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1714"};

ld3_t2s_reg.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld3_t2s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*3+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld3_t4s_imm( 0b0100110011011111010010[22] : rn[5] : rt[5] );
ld3_t4s_imm.var format : {char const*} = {"2807"};

ld3_t4s_imm.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "], #48";
};

ld3_t4s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*3+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(48) );
};

op ld3_t4s_reg( 0b01001100110[11] : rm[5] : 0b010010[6] : rn[5] : rt[5] );
ld3_t4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1744"};

ld3_t4s_reg.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld3_t4s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*3+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld3_t2d_imm( 0b0100110011011111010011[22] : rn[5] : rt[5] );
ld3_t2d_imm.var format : {char const*} = {"2717"};

ld3_t2d_imm.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "], #48";
};

ld3_t2d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*3+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(48) );
};

op ld3_t2d_reg( 0b01001100110[11] : rm[5] : 0b010011[6] : rn[5] : rt[5] );
ld3_t2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1699"};

ld3_t2d_reg.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld3_t2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*3+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

/*
 * end of LD3 (multiple structures)
 *******************************************************************/

/*******************************************************************
 * LD3 (single structure)
 *
 * Load single 3-element structure to one lane of three registers)
 */

op ld3_tbi( 0b0[1] : shl<3> index1[1] : 0b00110101000000001[17] : index0[3] : rn[5] : rt[5] );
ld3_tbi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1807"};

ld3_tbi.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld3_thi( 0b0[1] : shl<2> index1[1] : 0b00110101000000011[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
ld3_thi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1901"};

ld3_thi.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld3_tsi( 0b0[1] : shl<1> index1[1] : 0b00110101000000101[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
ld3_tsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"2000"};

ld3_tsi.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld3_tdi( 0b0[1] : index[1] : 0b00110101000000101001[20] : rn[5] : rt[5] );
ld3_tdi.var format : {char const*} = {"2024"};

ld3_tdi.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld3_tbi_imm( 0b0[1] : shl<3> index1[1] : 0b00110111011111001[17] : index0[3] : rn[5] : rt[5] );
ld3_tbi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1809"};

ld3_tbi_imm.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #3";
};

op ld3_tbi_reg( 0b0[1] : shl<3> index1[1] : 0b001101110[9] : rm[5] : 0b001[3] : index0[3] : rn[5] : rt[5] );
ld3_tbi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"252"};

ld3_tbi_reg.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld3_thi_imm( 0b0[1] : shl<2> index1[1] : 0b00110111011111011[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
ld3_thi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1903"};

ld3_thi_imm.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #6";
};

op ld3_thi_reg( 0b0[1] : shl<2> index1[1] : 0b001101110[9] : rm[5] : 0b011[3] : index0[2] : 0b0[1] : rn[5] : rt[5] );
ld3_thi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"356"};

ld3_thi_reg.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld3_tsi_imm( 0b0[1] : shl<1> index1[1] : 0b00110111011111101[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
ld3_tsi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"2002"};

ld3_tsi_imm.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #12";
};

op ld3_tsi_reg( 0b0[1] : shl<1> index1[1] : 0b001101110[9] : rm[5] : 0b101[3] : index0[1] : 0b00[2] : rn[5] : rt[5] );
ld3_tsi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"442"};

ld3_tsi_reg.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld3_tdi_imm( 0b0[1] : index[1] : 0b00110111011111101001[20] : rn[5] : rt[5] );
ld3_tdi_imm.var format : {char const*} = {"2026"};

ld3_tdi_imm.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #24";
};

op ld3_tdi_reg( 0b0[1] : index[1] : 0b001101110[9] : rm[5] : 0b101001[6] : rn[5] : rt[5] );
ld3_tdi_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"529"};

ld3_tdi_reg.disasm = {
  sink << "ld3\t" << DisasmBunch(rt,3,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

/*
 * end of LD3 (single structure)
 *******************************************************************/

/*******************************************************************
 * LD3R
 *
 * Load single 3-element structure and replicate to all lanes of three registers
 */

op ld3r_t8b( 0b0000110101000000111[19] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld3r_t8b.var format : {char const*} = {"2079"};

ld3r_t8b.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

op ld3r_t16b( 0b0100110101000000111[19] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld3r_t16b.var format : {char const*} = {"2043"};

ld3r_t16b.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

op ld3r_t4h( 0b0000110101000000111[19] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld3r_t4h.var format : {char const*} = {"2067"};

ld3r_t4h.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

op ld3r_t8h( 0b0100110101000000111[19] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld3r_t8h.var format : {char const*} = {"2085"};

ld3r_t8h.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

op ld3r_t2s( 0b0000110101000000111[19] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld3r_t2s.var format : {char const*} = {"2061"};

ld3r_t2s.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

op ld3r_t4s( 0b0100110101000000111[19] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld3r_t4s.var format : {char const*} = {"2073"};

ld3r_t4s.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

op ld3r_t1d( 0b0000110101000000111[19] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld3r_t1d.var format : {char const*} = {"2049"};

ld3r_t1d.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,1,3) << ", [" << DisasmGSXR(rn) << "]";
};

op ld3r_t2d( 0b0100110101000000111[19] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld3r_t2d.var format : {char const*} = {"2055"};

ld3r_t2d.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

op ld3r_t8b_imm( 0b0000110111011111111[19] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld3r_t8b_imm.var format : {char const*} = {"2080"};

ld3r_t8b_imm.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "], #3";
};

op ld3r_t8b_reg( 0b00001101110[11] : rm[5] : 0b111[3] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld3r_t8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"673"};

ld3r_t8b_reg.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld3r_t16b_imm( 0b0100110111011111111[19] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld3r_t16b_imm.var format : {char const*} = {"2044"};

ld3r_t16b_imm.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "], #3";
};

op ld3r_t16b_reg( 0b01001101110[11] : rm[5] : 0b111[3] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld3r_t16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"655"};

ld3r_t16b_reg.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld3r_t4h_imm( 0b0000110111011111111[19] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld3r_t4h_imm.var format : {char const*} = {"2068"};

ld3r_t4h_imm.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "], #6";
};

op ld3r_t4h_reg( 0b00001101110[11] : rm[5] : 0b111[3] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld3r_t4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"667"};

ld3r_t4h_reg.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld3r_t8h_imm( 0b0100110111011111111[19] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld3r_t8h_imm.var format : {char const*} = {"2086"};

ld3r_t8h_imm.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "], #6";
};

op ld3r_t8h_reg( 0b01001101110[11] : rm[5] : 0b111[3] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld3r_t8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"676"};

ld3r_t8h_reg.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld3r_t2s_imm( 0b0000110111011111111[19] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld3r_t2s_imm.var format : {char const*} = {"2062"};

ld3r_t2s_imm.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "], #12";
};

op ld3r_t2s_reg( 0b00001101110[11] : rm[5] : 0b111[3] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld3r_t2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"664"};

ld3r_t2s_reg.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld3r_t4s_imm( 0b0100110111011111111[19] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld3r_t4s_imm.var format : {char const*} = {"2074"};

ld3r_t4s_imm.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "], #12";
};

op ld3r_t4s_reg( 0b01001101110[11] : rm[5] : 0b111[3] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld3r_t4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"670"};

ld3r_t4s_reg.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld3r_t1d_imm( 0b0000110111011111111[19] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld3r_t1d_imm.var format : {char const*} = {"2050"};

ld3r_t1d_imm.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,1,3) << ", [" << DisasmGSXR(rn) << "], #24";
};

op ld3r_t1d_reg( 0b00001101110[11] : rm[5] : 0b111[3] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld3r_t1d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"658"};

ld3r_t1d_reg.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,1,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld3r_t2d_imm( 0b0100110111011111111[19] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld3r_t2d_imm.var format : {char const*} = {"2056"};

ld3r_t2d_imm.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "], #24";
};

op ld3r_t2d_reg( 0b01001101110[11] : rm[5] : 0b111[3] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld3r_t2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"661"};

ld3r_t2d_reg.disasm = {
  sink << "ld3r\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

/*
 * end of LD3R
 *******************************************************************/

/*******************************************************************
 * LD4 (multiple structures)
 *
 * Load multiple 4-element structures to four registers
 */

op ld4_q8b( 0b0000110001000000000000[22] : rn[5] : rt[5] );
ld4_q8b.var format : {char const*} = {"2827"};

ld4_q8b.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

ld4_q8b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*4+s)*1) ));
    }
  }
};

op ld4_q16b( 0b0100110001000000000000[22] : rn[5] : rt[5] );
ld4_q16b.var format : {char const*} = {"2659"};

ld4_q16b.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

ld4_q16b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*4+s)*1) ));
    }
  }
};

op ld4_q4h( 0b0000110001000000000001[22] : rn[5] : rt[5] );
ld4_q4h.var format : {char const*} = {"2767"};

ld4_q4h.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

ld4_q4h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*4+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op ld4_q8h( 0b0100110001000000000001[22] : rn[5] : rt[5] );
ld4_q8h.var format : {char const*} = {"2857"};

ld4_q8h.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

ld4_q8h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*4+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op ld4_q2s( 0b0000110001000000000010[22] : rn[5] : rt[5] );
ld4_q2s.var format : {char const*} = {"2737"};

ld4_q2s.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

ld4_q2s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*4+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op ld4_q4s( 0b0100110001000000000010[22] : rn[5] : rt[5] );
ld4_q4s.var format : {char const*} = {"2797"};

ld4_q4s.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

ld4_q4s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*4+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op ld4_q2d( 0b0100110001000000000011[22] : rn[5] : rt[5] );
ld4_q2d.var format : {char const*} = {"2707"};

ld4_q2d.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

ld4_q2d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*4+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op ld4_q8b_imm( 0b0000110011011111000000[22] : rn[5] : rt[5] );
ld4_q8b_imm.var format : {char const*} = {"2829"};

ld4_q8b_imm.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld4_q8b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*4+s)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + U64(32) );
};

op ld4_q8b_reg( 0b00001100110[11] : rm[5] : 0b000000[6] : rn[5] : rt[5] );
ld4_q8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1755"};

ld4_q8b_reg.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld4_q8b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*4+s)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld4_q16b_imm( 0b0100110011011111000000[22] : rn[5] : rt[5] );
ld4_q16b_imm.var format : {char const*} = {"2661"};

ld4_q16b_imm.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "], #64";
};

ld4_q16b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*4+s)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + U64(64) );
};

op ld4_q16b_reg( 0b01001100110[11] : rm[5] : 0b000000[6] : rn[5] : rt[5] );
ld4_q16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1671"};

ld4_q16b_reg.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld4_q16b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU8((rt+s)%32, e, cpu.MemRead8( addr + U64((e*4+s)*1) ));
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld4_q4h_imm( 0b0000110011011111000001[22] : rn[5] : rt[5] );
ld4_q4h_imm.var format : {char const*} = {"2769"};

ld4_q4h_imm.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld4_q4h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*4+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(32) );
};

op ld4_q4h_reg( 0b00001100110[11] : rm[5] : 0b000001[6] : rn[5] : rt[5] );
ld4_q4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1725"};

ld4_q4h_reg.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld4_q4h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*4+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld4_q8h_imm( 0b0100110011011111000001[22] : rn[5] : rt[5] );
ld4_q8h_imm.var format : {char const*} = {"2859"};

ld4_q8h_imm.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "], #64";
};

ld4_q8h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*4+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(64) );
};

op ld4_q8h_reg( 0b01001100110[11] : rm[5] : 0b000001[6] : rn[5] : rt[5] );
ld4_q8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1770"};

ld4_q8h_reg.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld4_q8h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU16((rt+s)%32, e, cpu.MemRead16( addr + U64((e*4+s)*2) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld4_q2s_imm( 0b0000110011011111000010[22] : rn[5] : rt[5] );
ld4_q2s_imm.var format : {char const*} = {"2739"};

ld4_q2s_imm.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "], #32";
};

ld4_q2s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*4+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(32) );
};

op ld4_q2s_reg( 0b00001100110[11] : rm[5] : 0b000010[6] : rn[5] : rt[5] );
ld4_q2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1710"};

ld4_q2s_reg.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld4_q2s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*4+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld4_q4s_imm( 0b0100110011011111000010[22] : rn[5] : rt[5] );
ld4_q4s_imm.var format : {char const*} = {"2799"};

ld4_q4s_imm.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "], #64";
};

ld4_q4s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*4+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(64) );
};

op ld4_q4s_reg( 0b01001100110[11] : rm[5] : 0b000010[6] : rn[5] : rt[5] );
ld4_q4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1740"};

ld4_q4s_reg.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld4_q4s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU32((rt+s)%32, e, cpu.MemRead32( addr + U64((e*4+s)*4) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op ld4_q2d_imm( 0b0100110011011111000011[22] : rn[5] : rt[5] );
ld4_q2d_imm.var format : {char const*} = {"2709"};

ld4_q2d_imm.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "], #64";
};

ld4_q2d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*4+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(64) );
};

op ld4_q2d_reg( 0b01001100110[11] : rm[5] : 0b000011[6] : rn[5] : rt[5] );
ld4_q2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1695"};

ld4_q2d_reg.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

ld4_q2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.SetVU64((rt+s)%32, e, cpu.MemRead64( addr + U64((e*4+s)*8) ));
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

/*
 * end of LD4 (multiple structures)
 *******************************************************************/

/*******************************************************************
 * LD4 (single structure)
 *
 * Load single 4-element structure to one lane of four registers
 */

op ld4_qbi( 0b0[1] : shl<3> index1[1] : 0b00110101100000001[17] : index0[3] : rn[5] : rt[5] );
ld4_qbi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1803"};

ld4_qbi.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld4_qhi( 0b0[1] : shl<2> index1[1] : 0b00110101100000011[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
ld4_qhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1897"};

ld4_qhi.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld4_qsi( 0b0[1] : shl<1> index1[1] : 0b00110101100000101[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
ld4_qsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1996"};

ld4_qsi.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld4_qdi( 0b0[1] : index[1] : 0b00110101100000101001[20] : rn[5] : rt[5] );
ld4_qdi.var format : {char const*} = {"2020"};

ld4_qdi.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op ld4_qbi_imm( 0b0[1] : shl<3> index1[1] : 0b00110111111111001[17] : index0[3] : rn[5] : rt[5] );
ld4_qbi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1805"};

ld4_qbi_imm.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #4";
};

op ld4_qbi_reg( 0b0[1] : shl<3> index1[1] : 0b001101111[9] : rm[5] : 0b001[3] : index0[3] : rn[5] : rt[5] );
ld4_qbi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"250"};

ld4_qbi_reg.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld4_qhi_imm( 0b0[1] : shl<2> index1[1] : 0b00110111111111011[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
ld4_qhi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1899"};

ld4_qhi_imm.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #8";
};

op ld4_qhi_reg( 0b0[1] : shl<2> index1[1] : 0b001101111[9] : rm[5] : 0b011[3] : index0[2] : 0b0[1] : rn[5] : rt[5] );
ld4_qhi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"354"};

ld4_qhi_reg.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld4_qsi_imm( 0b0[1] : shl<1> index1[1] : 0b00110111111111101[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
ld4_qsi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1998"};

ld4_qsi_imm.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #16";
};

op ld4_qsi_reg( 0b0[1] : shl<1> index1[1] : 0b001101111[9] : rm[5] : 0b101[3] : index0[1] : 0b00[2] : rn[5] : rt[5] );
ld4_qsi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"440"};

ld4_qsi_reg.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld4_qdi_imm( 0b0[1] : index[1] : 0b00110111111111101001[20] : rn[5] : rt[5] );
ld4_qdi_imm.var format : {char const*} = {"2022"};

ld4_qdi_imm.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #32";
};

op ld4_qdi_reg( 0b0[1] : index[1] : 0b001101111[9] : rm[5] : 0b101001[6] : rn[5] : rt[5] );
ld4_qdi_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"527"};

ld4_qdi_reg.disasm = {
  sink << "ld4\t" << DisasmBunch(rt,4,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

/*
 * end of LD4 (single structure)
 *******************************************************************/

/*******************************************************************
 * LD4R
 *
 * Load single 4-element structure and replicate to all lanes of four
 * registers
 */

op ld4r_q8b( 0b0000110101100000111[19] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld4r_q8b.var format : {char const*} = {"2077"};

ld4r_q8b.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

op ld4r_q16b( 0b0100110101100000111[19] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld4r_q16b.var format : {char const*} = {"2041"};

ld4r_q16b.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

op ld4r_q4h( 0b0000110101100000111[19] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld4r_q4h.var format : {char const*} = {"2065"};

ld4r_q4h.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

op ld4r_q8h( 0b0100110101100000111[19] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld4r_q8h.var format : {char const*} = {"2083"};

ld4r_q8h.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

op ld4r_q2s( 0b0000110101100000111[19] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld4r_q2s.var format : {char const*} = {"2059"};

ld4r_q2s.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

op ld4r_q4s( 0b0100110101100000111[19] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld4r_q4s.var format : {char const*} = {"2071"};

ld4r_q4s.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

op ld4r_q1d( 0b0000110101100000111[19] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld4r_q1d.var format : {char const*} = {"2047"};

ld4r_q1d.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,1,3) << ", [" << DisasmGSXR(rn) << "]";
};

op ld4r_q2d( 0b0100110101100000111[19] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld4r_q2d.var format : {char const*} = {"2053"};

ld4r_q2d.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

op ld4r_q8b_imm( 0b0000110111111111111[19] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld4r_q8b_imm.var format : {char const*} = {"2078"};

ld4r_q8b_imm.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "], #4";
};

op ld4r_q8b_reg( 0b00001101111[11] : rm[5] : 0b111[3] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld4r_q8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"672"};

ld4r_q8b_reg.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld4r_q16b_imm( 0b0100110111111111111[19] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld4r_q16b_imm.var format : {char const*} = {"2042"};

ld4r_q16b_imm.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "], #4";
};

op ld4r_q16b_reg( 0b01001101111[11] : rm[5] : 0b111[3] : ?[1] : 0b00[2] : rn[5] : rt[5] );
ld4r_q16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"654"};

ld4r_q16b_reg.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld4r_q4h_imm( 0b0000110111111111111[19] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld4r_q4h_imm.var format : {char const*} = {"2066"};

ld4r_q4h_imm.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "], #8";
};

op ld4r_q4h_reg( 0b00001101111[11] : rm[5] : 0b111[3] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld4r_q4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"666"};

ld4r_q4h_reg.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld4r_q8h_imm( 0b0100110111111111111[19] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld4r_q8h_imm.var format : {char const*} = {"2084"};

ld4r_q8h_imm.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "], #8";
};

op ld4r_q8h_reg( 0b01001101111[11] : rm[5] : 0b111[3] : ?[1] : 0b01[2] : rn[5] : rt[5] );
ld4r_q8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"675"};

ld4r_q8h_reg.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld4r_q2s_imm( 0b0000110111111111111[19] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld4r_q2s_imm.var format : {char const*} = {"2060"};

ld4r_q2s_imm.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "], #16";
};

op ld4r_q2s_reg( 0b00001101111[11] : rm[5] : 0b111[3] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld4r_q2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"663"};

ld4r_q2s_reg.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld4r_q4s_imm( 0b0100110111111111111[19] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld4r_q4s_imm.var format : {char const*} = {"2072"};

ld4r_q4s_imm.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "], #16";
};

op ld4r_q4s_reg( 0b01001101111[11] : rm[5] : 0b111[3] : ?[1] : 0b10[2] : rn[5] : rt[5] );
ld4r_q4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"669"};

ld4r_q4s_reg.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld4r_q1d_imm( 0b0000110111111111111[19] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld4r_q1d_imm.var format : {char const*} = {"2048"};

ld4r_q1d_imm.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,1,3) << ", [" << DisasmGSXR(rn) << "], #32";
};

op ld4r_q1d_reg( 0b00001101111[11] : rm[5] : 0b111[3] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld4r_q1d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"657"};

ld4r_q1d_reg.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,1,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op ld4r_q2d_imm( 0b0100110111111111111[19] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld4r_q2d_imm.var format : {char const*} = {"2054"};

ld4r_q2d_imm.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "], #32";
};

op ld4r_q2d_reg( 0b01001101111[11] : rm[5] : 0b111[3] : ?[1] : 0b11[2] : rn[5] : rt[5] );
ld4r_q2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"660"};

ld4r_q2d_reg.disasm = {
  sink << "ld4r\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

/*
 * end of LD4R
 *******************************************************************/

op ldnp_do( 0b0110110001[10] : shl<3> sext imm[7] : rt2[5] : rn[5] : rt[5] );
ldnp_do.var format : {char const*} = {"37"};

ldnp_do.disasm = {
  sink << "ldnp\t" << DisasmD(rt) << ", " << DisasmD(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

op ldnp_qo( 0b1010110001[10] : shl<4> sext imm[7] : rt2[5] : rn[5] : rt[5] );
ldnp_qo.var format : {char const*} = {"49"};

ldnp_qo.disasm = {
  sink << "ldnp\t" << DisasmQ(rt) << ", " << DisasmQ(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

op ldnp_so( 0b0010110001[10] : shl<2> sext imm[7] : rt2[5] : rn[5] : rt[5] );
ldnp_so.var format : {char const*} = {"59"};

ldnp_so.disasm = {
  sink << "ldnp\t" << DisasmS(rt) << ", " << DisasmS(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

/*******************************************************************
 * LDP (SIMD&FP)
 *
 * Load pair of SIMD&FP registers
 */

op ldp_spo( 0b0010110011[10] : shl<2> sext imm[7] : rt2[5] : rn[5] : rt[5] );
ldp_spo.var format : {char const*} = {"65"};

ldp_spo.disasm = {
  sink << "ldp\t" << DisasmS(rt) << ", " << DisasmS(rt2) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

ldp_spo.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) );
  U32 data0( cpu.MemRead32( addr + U64(0) ) ),
      data1( cpu.MemRead32( addr + U64(4) ) );
  cpu.SetVU32(rt,  data0);
  cpu.SetVU32(rt2, data1);
  cpu.SetGSR(rn, addr + U64(S64(imm)) );
};

op ldp_dpo( 0b0110110011[10] : shl<3> sext imm[7] : rt2[5] : rn[5] : rt[5] );
ldp_dpo.var format : {char const*} = {"43"};

ldp_dpo.disasm = {
  sink << "ldp\t" << DisasmD(rt) << ", " << DisasmD(rt2) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

ldp_dpo.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) );
  U64 data0( cpu.MemRead64( addr + U64(0) ) ),
      data1( cpu.MemRead64( addr + U64(8) ) );
  cpu.SetVU64(rt,  data0);
  cpu.SetVU64(rt2, data1);
  cpu.SetGSR(rn, addr + U64(S64(imm)) );
};

op ldp_qpo( 0b1010110011[10] : shl<4> sext imm[7] : rt2[5] : rn[5] : rt[5] );
ldp_qpo.var format : {char const*} = {"55"};

ldp_qpo.disasm = {
  sink << "ldp\t" << DisasmQ(rt) << ", " << DisasmQ(rt2) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

op ldp_sop( 0b0010110111[10] : shl<2> sext imm[7] : rt2[5] : rn[5] : rt[5] );
ldp_sop.var format : {char const*} = {"63"};

ldp_sop.disasm = {
  sink << "ldp\t" << DisasmS(rt) << ", " << DisasmS(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

ldp_sop.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U32 data0( cpu.MemRead32( addr + U64(0) ) ),
      data1( cpu.MemRead32( addr + U64(4) ) );
  cpu.SetVU32(rt,  data0);
  cpu.SetVU32(rt2, data1);
  cpu.SetGSR(rn, addr);
};

op ldp_dop( 0b0110110111[10] : shl<3> sext imm[7] : rt2[5] : rn[5] : rt[5] );
ldp_dop.var format : {char const*} = {"41"};

ldp_dop.disasm = {
  sink << "ldp\t" << DisasmD(rt) << ", " << DisasmD(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

ldp_dop.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U64 data0( cpu.MemRead64( addr + U64(0) ) ),
      data1( cpu.MemRead64( addr + U64(8) ) );
  cpu.SetVU64(rt,  data0);
  cpu.SetVU64(rt2, data1);
  cpu.SetGSR(rn, addr);
};

op ldp_qop( 0b1010110111[10] : shl<4> sext imm[7] : rt2[5] : rn[5] : rt[5] );
ldp_qop.var format : {char const*} = {"53"};

ldp_qop.disasm = {
  sink << "ldp\t" << DisasmQ(rt) << ", " << DisasmQ(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

op ldp_so( 0b0010110101[10] : shl<2> sext imm[7] : rt2[5] : rn[5] : rt[5] );
ldp_so.var format : {char const*} = {"60"};

ldp_so.disasm = {
  sink << "ldp\t" << DisasmS(rt) << ", " << DisasmS(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

ldp_so.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U32 data0( cpu.MemRead32( addr + U64(0) ) ),
      data1( cpu.MemRead32( addr + U64(4) ) );
  cpu.SetVU32(rt,  data0);
  cpu.SetVU32(rt2, data1);
};

op ldp_do( 0b0110110101[10] : shl<3> sext imm[7] : rt2[5] : rn[5] : rt[5] );
ldp_do.var format : {char const*} = {"38"};

ldp_do.disasm = {
  sink << "ldp\t" << DisasmD(rt) << ", " << DisasmD(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

ldp_do.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U64 data0( cpu.MemRead64( addr + U64(0) ) ),
      data1( cpu.MemRead64( addr + U64(8) ) );
  cpu.SetVU64(rt,  data0);
  cpu.SetVU64(rt2, data1);
};

op ldp_qo( 0b1010110101[10] : shl<4> sext imm[7] : rt2[5] : rn[5] : rt[5] );
ldp_qo.var format : {char const*} = {"50"};

ldp_qo.disasm = {
  sink << "ldp\t" << DisasmQ(rt) << ", " << DisasmQ(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

/*
 * end of LDP (SIMD&FP)
 *******************************************************************/

/*******************************************************************
 * LDR (immediate, SIMD&FP)
 *
 * Load SIMD&FP register (immediate offset)
 */

op ldr_bsopost( 0b00111100010[11] : sext imm[9] : 0b01[2] : rn[5] : rt[5] );
ldr_bsopost.var format : {char const*} = {"263"};

ldr_bsopost.disasm = {
  sink << "ldr\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

ldr_bsopost.execute = {
  typedef typename ARCH::U8 U8;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) );
  U8 data( cpu.MemRead8(addr) );
  cpu.SetVU8(rt, data);
  cpu.SetGSR(rn, addr + U64(S64(imm)) );
};

op ldr_hsopost( 0b01111100010[11] : sext imm[9] : 0b01[2] : rn[5] : rt[5] );
ldr_hsopost.var format : {char const*} = {"276"};

ldr_hsopost.disasm = {
  sink << "ldr\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

ldr_hsopost.execute = {
  typedef typename ARCH::U16 U16;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) );
  U16 data( cpu.MemRead16(addr) );
  cpu.SetVU16(rt, data);
  cpu.SetGSR(rn, addr + U64(S64(imm)) );
};

op ldr_ssopost( 0b10111100010[11] : sext imm[9] : 0b01[2] : rn[5] : rt[5] );
ldr_ssopost.var format : {char const*} = {"289"};

ldr_ssopost.disasm = {
  sink << "ldr\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

ldr_ssopost.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) );
  U32 data( cpu.MemRead32(addr) );
  cpu.SetVU32(rt, data);
  cpu.SetGSR(rn, addr + U64(S64(imm)) );
};

op ldr_dsopost( 0b11111100010[11] : sext imm[9] : 0b01[2] : rn[5] : rt[5] );
ldr_dsopost.var format : {char const*} = {"270"};

ldr_dsopost.disasm = {
  sink << "ldr\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

ldr_dsopost.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) );
  U64 data( cpu.MemRead64(addr) );
  cpu.SetVU64(rt, data);
  cpu.SetGSR(rn, addr + U64(S64(imm)) );
};

op ldr_qsopost( 0b00111100110[11] : sext imm[9] : 0b01[2] : rn[5] : rt[5] );
ldr_qsopost.var format : {char const*} = {"282"};

ldr_qsopost.disasm = {
  sink << "ldr\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

op ldr_bsopre( 0b00111100010[11] : sext imm[9] : 0b11[2] : rn[5] : rt[5] );
ldr_bsopre.var format : {char const*} = {"261"};

ldr_bsopre.disasm = {
  sink << "ldr\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

ldr_bsopre.execute = {
  typedef typename ARCH::U8 U8;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U8 data( cpu.MemRead8(addr) );
  cpu.SetVU8(rt, data);
  cpu.SetGSR(rn, addr);
};

op ldr_hsopre( 0b01111100010[11] : sext imm[9] : 0b11[2] : rn[5] : rt[5] );
ldr_hsopre.var format : {char const*} = {"274"};

ldr_hsopre.disasm = {
  sink << "ldr\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

ldr_hsopre.execute = {
  typedef typename ARCH::U16 U16;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U16 data( cpu.MemRead16(addr) );
  cpu.SetVU16(rt, data);
  cpu.SetGSR(rn, addr);
};

op ldr_ssopre( 0b10111100010[11] : sext imm[9] : 0b11[2] : rn[5] : rt[5] );
ldr_ssopre.var format : {char const*} = {"287"};

ldr_ssopre.disasm = {
  sink << "ldr\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

ldr_ssopre.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U32 data( cpu.MemRead32(addr) );
  cpu.SetVU32(rt, data);
  cpu.SetGSR(rn, addr);
};

op ldr_dsopre( 0b11111100010[11] : sext imm[9] : 0b11[2] : rn[5] : rt[5] );
ldr_dsopre.var format : {char const*} = {"268"};

ldr_dsopre.disasm = {
  sink << "ldr\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

ldr_dsopre.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U64 data( cpu.MemRead64(addr) );
  cpu.SetVU64(rt, data);
  cpu.SetGSR(rn, addr);
};

op ldr_qsopre( 0b00111100110[11] : sext imm[9] : 0b11[2] : rn[5] : rt[5] );
ldr_qsopre.var format : {char const*} = {"280"};

ldr_qsopre.disasm = {
  sink << "ldr\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

op ldr_buo( 0b0011110101[10] : imm[12] : rn[5] : rt[5] );
ldr_buo.var format : {char const*} = {"35"};

ldr_buo.disasm = {
  sink << "ldr\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

ldr_buo.execute = {
  typedef typename ARCH::U8 U8;
  typedef typename ARCH::U64 U64;
  
  U64 addr( cpu.GetGSR(rn) + U64(imm) );
  U8 data( cpu.MemRead8(addr) );
  cpu.SetVU8(rt, data);
};

op ldr_huo( 0b0111110101[10] : shl<1> imm[12] : rn[5] : rt[5] );
ldr_huo.var format : {char const*} = {"47"};

ldr_huo.disasm = {
  sink << "ldr\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

ldr_huo.execute = {
  typedef typename ARCH::U16 U16;
  typedef typename ARCH::U64 U64;
  
  U64 addr( cpu.GetGSR(rn) + U64(imm) );
  U16 data( cpu.MemRead16(addr) );
  cpu.SetVU16(rt, data);
};

op ldr_suo( 0b1011110101[10] : shl<2> imm[12] : rn[5] : rt[5] );
ldr_suo.var format : {char const*} = {"67"};

ldr_suo.disasm = {
  sink << "ldr\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

ldr_suo.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  
  U64 addr( cpu.GetGSR(rn) + U64(imm) );
  U32 data( cpu.MemRead32(addr) );
  cpu.SetVU32(rt, data);
};

op ldr_duo( 0b1111110101[10] : shl<3> imm[12] : rn[5] : rt[5] );
ldr_duo.var format : {char const*} = {"45"};

ldr_duo.disasm = {
  sink << "ldr\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

ldr_duo.execute = {
  typedef typename ARCH::U64 U64;
  
  U64 addr( cpu.GetGSR(rn) + U64(imm) );
  U64 data( cpu.MemRead64(addr) );
  cpu.SetVU64(rt, data);
};

op ldr_quo( 0b0011110111[10] : shl<4> imm[12] : rn[5] : rt[5] );
ldr_quo.var format : {char const*} = {"57"};

ldr_quo.disasm = {
  sink << "ldr\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

/*
 * end of LDR (immediate, SIMD&FP)
 *******************************************************************/

/*******************************************************************
 * LDR (literal, SIMD&FP)
 *
 * Load SIMD&FP register (PC-relative literal)
 */

op ldr_slit( 0b00011100[8] : shl<2> sext imm[19] : rt[5] );
ldr_slit.var format : {char const*} = {"11"};

ldr_slit.disasm = {
  sink << "ldr\t" << DisasmS(rt) << ", 0x" << std::hex << (this->GetAddr()+imm);
};

ldr_slit.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetPC() + U64(S64(imm)) );
  U32 data( cpu.MemRead32(addr) );
  cpu.SetVU32(rt, data);
};

op ldr_dlit( 0b01011100[8] : shl<2> sext imm[19] : rt[5] );
ldr_dlit.var format : {char const*} = {"9"};

ldr_dlit.disasm = {
  sink << "ldr\t" << DisasmD(rt) << ", 0x" << std::hex << (this->GetAddr()+imm);
};

ldr_dlit.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetPC() + U64(S64(imm)) );
  U64 data( cpu.MemRead64(addr) );
  cpu.SetVU64(rt, data);
};

op ldr_qlit( 0b10011100[8] : shl<2> sext imm[19] : rt[5] );
ldr_qlit.var format : {char const*} = {"10"};

ldr_qlit.disasm = {
  sink << "ldr\t" << DisasmQ(rt) << ", 0x" << std::hex << (this->GetAddr()+imm);
};

/*
 * end of LDR (literal, SIMD&FP)
 *******************************************************************/

/*******************************************************************
 * LDR (register, SIMD&FP)
 *
 * Load SIMD&FP register (register offset)
 */

op ldr_bxwu( 0b00111100011[11] : rm[5] : 0b010[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_bxwu.var shift : {uint8_t} = {s*0}, format : {char const*} = {"587"};

ldr_bxwu.disasm = {
  sink << "ldr\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",uxtw" << DisasmINZ(" ", shift) << "]";
};

ldr_bxwu.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( U64(U32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.MemRead8(addr) );
  cpu.SetVU8(rt, data);
};

op ldr_bxxu( 0b00111100011[11] : rm[5] : 0b011[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_bxxu.var format : {char const*} = {"703"}, shift : {uint8_t} = {s*0};

ldr_bxxu.disasm = {
  sink << "ldr\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << DisasmINZ(",lsl ",shift) << "]";
};

ldr_bxxu.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( U64(U64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.MemRead8(addr) );
  cpu.SetVU8(rt, data);
};

op ldr_bxws( 0b00111100011[11] : rm[5] : 0b110[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_bxws.var shift : {uint8_t} = {s*0}, format : {char const*} = {"585"};

ldr_bxws.disasm = {
  sink << "ldr\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",sxtw" << DisasmINZ(" ", shift) << "]";
};

ldr_bxws.execute = {
  typedef typename ARCH::S32 S32;
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( S64(S32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.MemRead8(addr) );
  cpu.SetVU8(rt, data);
};

op ldr_bxxs( 0b00111100011[11] : rm[5] : 0b111[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_bxxs.var shift : {uint8_t} = {s*0}, format : {char const*} = {"589"};

ldr_bxxs.disasm = {
  sink << "ldr\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << ",sxtx" << DisasmINZ(" ", shift) << "]";
};

ldr_bxxs.execute = {
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( S64(S64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.MemRead8(addr) );
  cpu.SetVU8(rt, data);
};

op ldr_hxwu( 0b01111100011[11] : rm[5] : 0b010[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_hxwu.var shift : {uint8_t} = {s*1}, format : {char const*} = {"599"};

ldr_hxwu.disasm = {
  sink << "ldr\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",uxtw" << DisasmINZ(" ", shift) << "]";
};

ldr_hxwu.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( U64(U32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.MemRead16(addr) );
  cpu.SetVU16(rt, data);
};

op ldr_hxxu( 0b01111100011[11] : rm[5] : 0b011[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_hxxu.var format : {char const*} = {"762"}, shift : {uint8_t} = {s*1};

ldr_hxxu.disasm = {
  sink << "ldr\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << DisasmINZ(",lsl ",shift) << "]";
};

ldr_hxxu.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( U64(U64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.MemRead16(addr) );
  cpu.SetVU16(rt, data);
};

op ldr_hxws( 0b01111100011[11] : rm[5] : 0b110[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_hxws.var shift : {uint8_t} = {s*1}, format : {char const*} = {"597"};

ldr_hxws.disasm = {
  sink << "ldr\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",sxtw" << DisasmINZ(" ", shift) << "]";
};

ldr_hxws.execute = {
  typedef typename ARCH::S32 S32;
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( S64(S32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.MemRead16(addr) );
  cpu.SetVU16(rt, data);
};

op ldr_hxxs( 0b01111100011[11] : rm[5] : 0b111[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_hxxs.var shift : {uint8_t} = {s*1}, format : {char const*} = {"601"};

ldr_hxxs.disasm = {
  sink << "ldr\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << ",sxtx" << DisasmINZ(" ", shift) << "]";
};

ldr_hxxs.execute = {
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( S64(S64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.MemRead16(addr) );
  cpu.SetVU16(rt, data);
};

op ldr_sxwu( 0b10111100011[11] : rm[5] : 0b010[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_sxwu.var shift : {uint8_t} = {s*2}, format : {char const*} = {"611"};

ldr_sxwu.disasm = {
  sink << "ldr\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",uxtw" << DisasmINZ(" ", shift) << "]";
};

ldr_sxwu.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( U64(U32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.MemRead32(addr) );
  cpu.SetVU32(rt, data);
};

op ldr_sxxu( 0b10111100011[11] : rm[5] : 0b011[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_sxxu.var format : {char const*} = {"819"}, shift : {uint8_t} = {s*2};

ldr_sxxu.disasm = {
  sink << "ldr\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << DisasmINZ(",lsl ",shift) << "]";
};

ldr_sxxu.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( U64(U64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.MemRead32(addr) );
  cpu.SetVU32(rt, data);
};

op ldr_sxws( 0b10111100011[11] : rm[5] : 0b110[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_sxws.var shift : {uint8_t} = {s*2}, format : {char const*} = {"609"};

ldr_sxws.disasm = {
  sink << "ldr\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",sxtw" << DisasmINZ(" ", shift) << "]";
};

ldr_sxws.execute = {
  typedef typename ARCH::S32 S32;
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( S64(S32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.MemRead32(addr) );
  cpu.SetVU32(rt, data);
};

op ldr_sxxs( 0b10111100011[11] : rm[5] : 0b111[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_sxxs.var shift : {uint8_t} = {s*2}, format : {char const*} = {"613"};

ldr_sxxs.disasm = {
  sink << "ldr\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << ",sxtx" << DisasmINZ(" ", shift) << "]";
};

ldr_sxxs.execute = {
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( S64(S64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.MemRead32(addr) );
  cpu.SetVU32(rt, data);
};

op ldr_dxwu( 0b11111100011[11] : rm[5] : 0b010[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_dxwu.var shift : {uint8_t} = {s*3}, format : {char const*} = {"593"};

ldr_dxwu.disasm = {
  sink << "ldr\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",uxtw" << DisasmINZ(" ", shift) << "]";
};

ldr_dxwu.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( U64(U32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U64 data( cpu.MemRead64(addr) );
  cpu.SetVU64(rt, data);
};

op ldr_dxxu( 0b11111100011[11] : rm[5] : 0b011[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_dxxu.var format : {char const*} = {"748"}, shift : {uint8_t} = {s*3};

ldr_dxxu.disasm = {
  sink << "ldr\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << DisasmINZ(",lsl ",shift) << "]";
};

ldr_dxxu.execute = {
  typedef typename ARCH::U64 U64;

  U64 offset( U64(U64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U64 data( cpu.MemRead64(addr) );
  cpu.SetVU64(rt, data);
};

op ldr_dxws( 0b11111100011[11] : rm[5] : 0b110[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_dxws.var shift : {uint8_t} = {s*3}, format : {char const*} = {"591"};

ldr_dxws.disasm = {
  sink << "ldr\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",sxtw" << DisasmINZ(" ", shift) << "]";
};

ldr_dxws.execute = {
  typedef typename ARCH::S32 S32;
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U64 U64;

  U64 offset( S64(S32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U64 data( cpu.MemRead64(addr) );
  cpu.SetVU64(rt, data);
};

op ldr_dxxs( 0b11111100011[11] : rm[5] : 0b111[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_dxxs.var shift : {uint8_t} = {s*3}, format : {char const*} = {"595"};

ldr_dxxs.disasm = {
  sink << "ldr\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << ",sxtx" << DisasmINZ(" ", shift) << "]";
};

ldr_dxxs.execute = {
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U64 U64;

  U64 offset( S64(S64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U64 data( cpu.MemRead64(addr) );
  cpu.SetVU64(rt, data);
};

op ldr_qxwu( 0b00111100111[11] : rm[5] : 0b010[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_qxwu.var shift : {uint8_t} = {s*4}, format : {char const*} = {"605"};

ldr_qxwu.disasm = {
  sink << "ldr\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",uxtw" << DisasmINZ(" ", shift) << "]";
};

op ldr_qxxu( 0b00111100111[11] : rm[5] : 0b011[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_qxxu.var format : {char const*} = {"771"}, shift : {uint8_t} = {s*4};

ldr_qxxu.disasm = {
  sink << "ldr\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << DisasmINZ(",lsl ",shift) << "]";
};

op ldr_qxws( 0b00111100111[11] : rm[5] : 0b110[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_qxws.var shift : {uint8_t} = {s*4}, format : {char const*} = {"603"};

ldr_qxws.disasm = {
  sink << "ldr\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",sxtw" << DisasmINZ(" ", shift) << "]";
};

op ldr_qxxs( 0b00111100111[11] : rm[5] : 0b111[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
ldr_qxxs.var shift : {uint8_t} = {s*4}, format : {char const*} = {"607"};

ldr_qxxs.disasm = {
  sink << "ldr\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << ",sxtx" << DisasmINZ(" ", shift) << "]";
};

/*
 * end of LDR (register, SIMD&FP)
 *******************************************************************/

/*******************************************************************
 * LDUR (SIMD&FP)
 *
 * Load SIMD&FP register (unscaled offset)
 */

op ldur_bbo( 0b00111100010[11] : sext imm[9] : 0b00[2] : rn[5] : rt[5] );
ldur_bbo.var format : {char const*} = {"259"};

ldur_bbo.disasm = {
  sink << "ldr\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

ldur_bbo.execute = {
  typedef typename ARCH::U8 U8;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U8 data( cpu.MemRead8(addr) );
  cpu.SetVU8(rt, data);
};

op ldur_hbo( 0b01111100010[11] : sext imm[9] : 0b00[2] : rn[5] : rt[5] );
ldur_hbo.var format : {char const*} = {"272"};

ldur_hbo.disasm = {
  sink << "ldr\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

ldur_hbo.execute = {
  typedef typename ARCH::U16 U16;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U16 data( cpu.MemRead16(addr) );
  cpu.SetVU16(rt, data);
};

op ldur_sbo( 0b10111100010[11] : sext imm[9] : 0b00[2] : rn[5] : rt[5] );
ldur_sbo.var format : {char const*} = {"285"};

ldur_sbo.disasm = {
  sink << "ldr\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

ldur_sbo.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U32 data( cpu.MemRead32(addr) );
  cpu.SetVU32(rt, data);
};

op ldur_dbo( 0b11111100010[11] : sext imm[9] : 0b00[2] : rn[5] : rt[5] );
ldur_dbo.var format : {char const*} = {"266"};

ldur_dbo.disasm = {
  sink << "ldr\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

ldur_dbo.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U64 data( cpu.MemRead64(addr) );
  cpu.SetVU64(rt, data);
};

op ldur_qbo( 0b00111100110[11] : sext imm[9] : 0b00[2] : rn[5] : rt[5] );
ldur_qbo.var format : {char const*} = {"278"};

ldur_qbo.disasm = {
  sink << "ldr\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

/*
 * end of LDUR (SIMD&FP)
 *******************************************************************/

op mla_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b100101[6] : rn[5] : rd[5] );
mla_v16bv16bv16b.var format : {char const*} = {"837"};

mla_v16bv16bv16b.disasm = {
  sink << "mla\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op mla_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b100101[6] : rn[5] : rd[5] );
mla_v2sv2sv2s.var format : {char const*} = {"1053"};

mla_v2sv2sv2s.disasm = {
  sink << "mla\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op mla_v2sv2svsi( 0b0010111110[10] : index0[1] : rm[5] : 0b0000[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
mla_v2sv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"484"};

mla_v2sv2svsi.disasm = {
  sink << "mla\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op mla_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b100101[6] : rn[5] : rd[5] );
mla_v4hv4hv4h.var format : {char const*} = {"1103"};

mla_v4hv4hv4h.disasm = {
  sink << "mla\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op mla_v4hv4hvhi( 0b0010111101[10] : index0[2] : rm[4] : 0b0000[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
mla_v4hv4hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"489"};

mla_v4hv4hvhi.disasm = {
  sink << "mla\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op mla_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b100101[6] : rn[5] : rd[5] );
mla_v4sv4sv4s.var format : {char const*} = {"1232"};

mla_v4sv4sv4s.disasm = {
  sink << "mla\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op mla_v4sv4svsi( 0b0110111110[10] : index0[1] : rm[5] : 0b0000[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
mla_v4sv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"507"};

mla_v4sv4svsi.disasm = {
  sink << "mla\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op mla_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b100101[6] : rn[5] : rd[5] );
mla_v8bv8bv8b.var format : {char const*} = {"1311"};

mla_v8bv8bv8b.disasm = {
  sink << "mla\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op mla_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b100101[6] : rn[5] : rd[5] );
mla_v8hv8hv8h.var format : {char const*} = {"1416"};

mla_v8hv8hv8h.disasm = {
  sink << "mla\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op mla_v8hv8hvhi( 0b0110111101[10] : index0[2] : rm[4] : 0b0000[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
mla_v8hv8hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"521"};

mla_v8hv8hvhi.disasm = {
  sink << "mla\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op mls_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b100101[6] : rn[5] : rd[5] );
mls_v16bv16bv16b.var format : {char const*} = {"838"};

mls_v16bv16bv16b.disasm = {
  sink << "mls\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op mls_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b100101[6] : rn[5] : rd[5] );
mls_v2sv2sv2s.var format : {char const*} = {"1054"};

mls_v2sv2sv2s.disasm = {
  sink << "mls\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op mls_v2sv2svsi( 0b0010111110[10] : index0[1] : rm[5] : 0b0100[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
mls_v2sv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"485"};

mls_v2sv2svsi.disasm = {
  sink << "mls\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op mls_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b100101[6] : rn[5] : rd[5] );
mls_v4hv4hv4h.var format : {char const*} = {"1104"};

mls_v4hv4hv4h.disasm = {
  sink << "mls\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op mls_v4hv4hvhi( 0b0010111101[10] : index0[2] : rm[4] : 0b0100[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
mls_v4hv4hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"490"};

mls_v4hv4hvhi.disasm = {
  sink << "mls\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op mls_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b100101[6] : rn[5] : rd[5] );
mls_v4sv4sv4s.var format : {char const*} = {"1233"};

mls_v4sv4sv4s.disasm = {
  sink << "mls\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op mls_v4sv4svsi( 0b0110111110[10] : index0[1] : rm[5] : 0b0100[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
mls_v4sv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"508"};

mls_v4sv4svsi.disasm = {
  sink << "mls\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op mls_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b100101[6] : rn[5] : rd[5] );
mls_v8bv8bv8b.var format : {char const*} = {"1312"};

mls_v8bv8bv8b.disasm = {
  sink << "mls\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op mls_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b100101[6] : rn[5] : rd[5] );
mls_v8hv8hv8h.var format : {char const*} = {"1417"};

mls_v8hv8hv8h.disasm = {
  sink << "mls\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op mls_v8hv8hvhi( 0b0110111101[10] : index0[2] : rm[4] : 0b0100[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
mls_v8hv8hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"522"};

mls_v8hv8hvhi.disasm = {
  sink << "mls\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op mov_bvb( 0b01011110000[11] : index[4] : 0b1000001[7] : rn[5] : rd[5] );
mov_bvb.var format : {char const*} = {"1819"};

mov_bvb.disasm = {
  sink << "mov\t" << DisasmB(rd) << ", " << DisasmTV(rn,0,0) << DisasmSubscript(index);
};

op mov_dvd( 0b01011110000[11] : index[1] : 0b1000000001[10] : rn[5] : rd[5] );
mov_dvd.var format : {char const*} = {"2036"};

mov_dvd.disasm = {
  sink << "mov\t" << DisasmD(rd) << ", " << DisasmTV(rn,0,3) << DisasmSubscript(index);
};

op mov_hvh( 0b01011110000[11] : index[3] : 0b10000001[8] : rn[5] : rd[5] );
mov_hvh.var format : {char const*} = {"1923"};

mov_hvh.disasm = {
  sink << "mov\t" << DisasmH(rd) << ", " << DisasmTV(rn,0,1) << DisasmSubscript(index);
};

op mov_svs( 0b01011110000[11] : index[2] : 0b100000001[9] : rn[5] : rd[5] );
mov_svs.var format : {char const*} = {"2012"};

mov_svs.disasm = {
  sink << "mov\t" << DisasmS(rd) << ", " << DisasmTV(rn,0,2) << DisasmSubscript(index);
};

op mov_vbii( 0b01101110000[11] : index1[4] : 0b10[2] : index2[4] : 0b1[1] : rn[5] : rd[5] );
mov_vbii.var format : {char const*} = {"439"};

mov_vbii.disasm = {
  sink << "mov\t" << DisasmTV(rd,0,0) << DisasmSubscript(index1) << ", " << DisasmTV(rn,0,0) << DisasmSubscript(index2);
};

op mov_vdii( 0b01101110000[11] : index1[1] : 0b10000[5] : index2[1] : ?[3] : 0b1[1] : rn[5] : rd[5] );
mov_vdii.var format : {char const*} = {"1785"};

mov_vdii.disasm = {
  sink << "mov\t" << DisasmTV(rd,0,3) << DisasmSubscript(index1) << ", " << DisasmTV(rn,0,3) << DisasmSubscript(index2);
};

op mov_vhii( 0b01101110000[11] : index1[3] : 0b100[3] : index2[3] : ?[1] : 0b1[1] : rn[5] : rd[5] );
mov_vhii.var format : {char const*} = {"526"};

mov_vhii.disasm = {
  sink << "mov\t" << DisasmTV(rd,0,1) << DisasmSubscript(index1) << ", " << DisasmTV(rn,0,1) << DisasmSubscript(index2);
};

op mov_vsii( 0b01101110000[11] : index1[2] : 0b1000[4] : index2[2] : ?[2] : 0b1[1] : rn[5] : rd[5] );
mov_vsii.var format : {char const*} = {"686"};

mov_vsii.disasm = {
  sink << "mov\t" << DisasmTV(rd,0,2) << DisasmSubscript(index1) << ", " << DisasmTV(rn,0,2) << DisasmSubscript(index2);
};

/*******************************************************************
 * INS (general)
 *
 * Insert vector element from general-purpose register
 */

op ins_vbw( 0b01001110000[11] : index[4] : 0b1000111[7] : rn[5] : rd[5] );
ins_vbw.var format : {char const*} = {"1824"};

ins_vbw.disasm = {
  sink << "ins\t" << DisasmTV(rd,0,0) << DisasmSubscript(index) << ", " << DisasmGZWR(rn);
};

ins_vbw.execute = {
  cpu.SetVU8(rd,index,typename ARCH::U8(cpu.GetGZR(rn)));
};

op ins_vhw( 0b01001110000[11] : index[3] : 0b10000111[8] : rn[5] : rd[5] );
ins_vhw.var format : {char const*} = {"1928"};

ins_vhw.disasm = {
  sink << "ins\t" << DisasmTV(rd,0,1) << DisasmSubscript(index) << ", " << DisasmGZWR(rn);
};

ins_vhw.execute = {
  cpu.SetVU16(rd,index,typename ARCH::U16(cpu.GetGZR(rn)));
};

op ins_vsw( 0b01001110000[11] : index[2] : 0b100000111[9] : rn[5] : rd[5] );
ins_vsw.var format : {char const*} = {"2017"};

ins_vsw.disasm = {
  sink << "ins\t" << DisasmTV(rd,0,2) << DisasmSubscript(index) << ", " << DisasmGZWR(rn);
};

ins_vsw.execute = {
  cpu.SetVU32(rd,index,typename ARCH::U32(cpu.GetGZR(rn)));
};

op ins_vdx( 0b01001110000[11] : index[1] : 0b1000000111[10] : rn[5] : rd[5] );
ins_vdx.var format : {char const*} = {"2039"};

ins_vdx.disasm = {
  sink << "ins\t" << DisasmTV(rd,0,3) << DisasmSubscript(index) << ", " << DisasmGZXR(rn);
};

ins_vdx.execute = {
  cpu.SetVU64(rd,index,cpu.GetGZR(rn));
};

/*
 * end of INS (general)
 *******************************************************************/

op movi_di( 0b0010111100000[13] : a[1] : b[1] : c[1] : 0b111001[6] : d[1] : e[1] : f[1] : g[1] : h[1] : rd[5] );
movi_di.var imm : {uint64_t} = {((uint64_t(a)<<56)|(uint64_t(b)<<48)|(uint64_t(c)<<40)|(uint64_t(d)<<32)|(uint64_t(e)<<24)|(uint64_t(f)<<16)|(uint64_t(g)<<8)|(uint64_t(h)<<0))*0xff}, format : {char const*} = {"1941"};

movi_di.disasm = {
  sink << "movi\t" << DisasmD(rd) << ", " << DisasmI(imm,16);
};

op movi_v16bi( 0b0100111100000[13] : shl<5> imm1[3] : 0b111001[6] : imm0[5] : rd[5] );
movi_v16bi.var imm : {uint8_t} = {imm1|imm0}, format : {char const*} = {"1942"};

movi_v16bi.disasm = {
  sink << "movi\t" << DisasmTV(rd,16,0) << ", " << DisasmI(imm,16);
};

op movi_v2di( 0b0110111100000[13] : a[1] : b[1] : c[1] : 0b111001[6] : d[1] : e[1] : f[1] : g[1] : h[1] : rd[5] );
movi_v2di.var imm : {uint64_t} = {((uint64_t(a)<<56)|(uint64_t(b)<<48)|(uint64_t(c)<<40)|(uint64_t(d)<<32)|(uint64_t(e)<<24)|(uint64_t(f)<<16)|(uint64_t(g)<<8)|(uint64_t(h)<<0))*0xff}, format : {char const*} = {"1965"};

movi_v2di.disasm = {
  sink << "movi\t" << DisasmTV(rd,2,3) << ", " << DisasmI(imm,16);
};

op movi_v2si( 0b0000111100000[13] : shl<5> imm1[3] : 0b0[1] : shl<3> sh[2] : 0b001[3] : imm0[5] : rd[5] );
movi_v2si.var imm : {uint32_t} = {uint32_t(imm1|imm0) << sh}, format : {char const*} = {"1787"};

movi_v2si.disasm = {
  sink << "movi\t" << DisasmTV(rd,2,2) << ", " << DisasmI(imm,16);
};

op movi_v2smsl( 0b0000111100000[13] : shl<21> imm1[3] : 0b110[3] : sh[1] : 0b01[2] : shl<16> imm0[5] : rd[5] );
movi_v2smsl.var imm : {uint32_t} = {(imm1|imm0|0xffff) >> (sh ? 0 : 8)}, format : {char const*} = {"1893"};

movi_v2smsl.disasm = {
  sink << "movi\t" << DisasmTV(rd,2,2) << ", " << DisasmI(imm,16);
};

op movi_v4hi( 0b0000111100000[13] : shl<5> imm1[3] : 0b10[2] : shl<3> sh[1] : 0b001[3] : imm0[5] : rd[5] );
movi_v4hi.var imm : {uint16_t} = {uint16_t(imm1|imm0) << sh}, format : {char const*} = {"1886"};

movi_v4hi.disasm = {
  sink << "movi\t" << DisasmTV(rd,4,1) << ", " << DisasmI(imm,16);
};

op movi_v4si( 0b0100111100000[13] : shl<5> imm1[3] : 0b0[1] : shl<3> sh[2] : 0b001[3] : imm0[5] : rd[5] );
movi_v4si.var imm : {uint32_t} = {uint32_t(imm1|imm0) << sh}, format : {char const*} = {"1791"};

movi_v4si.disasm = {
  sink << "movi\t" << DisasmTV(rd,4,2) << ", " << DisasmI(imm,16);
};

op movi_v4smsl( 0b0100111100000[13] : shl<21> imm1[3] : 0b110[3] : sh[1] : 0b01[2] : shl<16> imm0[5] : rd[5] );
movi_v4smsl.var imm : {uint32_t} = {(imm1|imm0|0xffff) >> (sh ? 0 : 8)}, format : {char const*} = {"1895"};

movi_v4smsl.disasm = {
  sink << "movi\t" << DisasmTV(rd,4,2) << ", " << DisasmI(imm,16);
};

op movi_v8bi( 0b0000111100000[13] : shl<5> imm1[3] : 0b111001[6] : imm0[5] : rd[5] );
movi_v8bi.var imm : {uint8_t} = {imm1|imm0}, format : {char const*} = {"1969"};

movi_v8bi.disasm = {
  sink << "movi\t" << DisasmTV(rd,8,0) << ", " << DisasmI(imm,16);
};

op movi_v8hi( 0b0100111100000[13] : shl<5> imm1[3] : 0b10[2] : shl<3> sh[1] : 0b001[3] : imm0[5] : rd[5] );
movi_v8hi.var imm : {uint16_t} = {uint16_t(imm1|imm0) << sh}, format : {char const*} = {"1890"};

movi_v8hi.disasm = {
  sink << "movi\t" << DisasmTV(rd,8,1) << ", " << DisasmI(imm,16);
};

op mul_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b100111[6] : rn[5] : rd[5] );
mul_v16bv16bv16b.var format : {char const*} = {"839"};

mul_v16bv16bv16b.disasm = {
  sink << "mul\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op mul_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b100111[6] : rn[5] : rd[5] );
mul_v2sv2sv2s.var format : {char const*} = {"1055"};

mul_v2sv2sv2s.disasm = {
  sink << "mul\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op mul_v2sv2svsi( 0b0000111110[10] : index0[1] : rm[5] : 0b1000[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
mul_v2sv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"486"};

mul_v2sv2svsi.disasm = {
  sink << "mul\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op mul_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b100111[6] : rn[5] : rd[5] );
mul_v4hv4hv4h.var format : {char const*} = {"1105"};

mul_v4hv4hv4h.disasm = {
  sink << "mul\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op mul_v4hv4hvhi( 0b0000111101[10] : index0[2] : rm[4] : 0b1000[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
mul_v4hv4hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"491"};

mul_v4hv4hvhi.disasm = {
  sink << "mul\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op mul_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b100111[6] : rn[5] : rd[5] );
mul_v4sv4sv4s.var format : {char const*} = {"1234"};

mul_v4sv4sv4s.disasm = {
  sink << "mul\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op mul_v4sv4svsi( 0b0100111110[10] : index0[1] : rm[5] : 0b1000[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
mul_v4sv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"509"};

mul_v4sv4svsi.disasm = {
  sink << "mul\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op mul_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b100111[6] : rn[5] : rd[5] );
mul_v8bv8bv8b.var format : {char const*} = {"1313"};

mul_v8bv8bv8b.disasm = {
  sink << "mul\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op mul_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b100111[6] : rn[5] : rd[5] );
mul_v8hv8hv8h.var format : {char const*} = {"1418"};

mul_v8hv8hv8h.disasm = {
  sink << "mul\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op mul_v8hv8hvhi( 0b0100111101[10] : index0[2] : rm[4] : 0b1000[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
mul_v8hv8hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"523"};

mul_v8hv8hvhi.disasm = {
  sink << "mul\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op mvn_v16b16b( 0b0110111000100000010110[22] : rn[5] : rd[5] );
mvn_v16b16b.var format : {char const*} = {"2333"};

mvn_v16b16b.disasm = {
  sink << "mvn\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op mvn_v8b8b( 0b0010111000100000010110[22] : rn[5] : rd[5] );
mvn_v8b8b.var format : {char const*} = {"2548"};

mvn_v8b8b.disasm = {
  sink << "mvn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
};

op mvni_v2si( 0b0010111100000[13] : shl<5> imm1[3] : 0b0[1] : shl<3> sh[2] : 0b001[3] : imm0[5] : rd[5] );
mvni_v2si.var imm : {uint32_t} = {uint32_t(imm1|imm0) << sh}, format : {char const*} = {"1788"};

mvni_v2si.disasm = {
  sink << "mvni\t" << DisasmTV(rd,2,2) << ", " << DisasmI(imm,16);
};

op mvni_v2smsl( 0b0010111100000[13] : shl<21> imm1[3] : 0b110[3] : sh[1] : 0b01[2] : shl<16> imm0[5] : rd[5] );
mvni_v2smsl.var imm : {uint32_t} = {(imm1|imm0|0xffff) >> (sh ? 0 : 8)}, format : {char const*} = {"1894"};

mvni_v2smsl.disasm = {
  sink << "mvni\t" << DisasmTV(rd,2,2) << ", " << DisasmI(imm,16);
};

op mvni_v4hi( 0b0010111100000[13] : shl<5> imm1[3] : 0b10[2] : shl<3> sh[1] : 0b001[3] : imm0[5] : rd[5] );
mvni_v4hi.var imm : {uint16_t} = {uint16_t(imm1|imm0) << sh}, format : {char const*} = {"1887"};

mvni_v4hi.disasm = {
  sink << "mvni\t" << DisasmTV(rd,4,1) << ", " << DisasmI(imm,16);
};

op mvni_v4si( 0b0110111100000[13] : shl<5> imm1[3] : 0b0[1] : shl<3> sh[2] : 0b001[3] : imm0[5] : rd[5] );
mvni_v4si.var imm : {uint32_t} = {uint32_t(imm1|imm0) << sh}, format : {char const*} = {"1792"};

mvni_v4si.disasm = {
  sink << "mvni\t" << DisasmTV(rd,4,2) << ", " << DisasmI(imm,16);
};

op mvni_v4smsl( 0b0110111100000[13] : shl<21> imm1[3] : 0b110[3] : sh[1] : 0b01[2] : shl<16> imm0[5] : rd[5] );
mvni_v4smsl.var imm : {uint32_t} = {(imm1|imm0|0xffff) >> (sh ? 0 : 8)}, format : {char const*} = {"1896"};

mvni_v4smsl.disasm = {
  sink << "mvni\t" << DisasmTV(rd,4,2) << ", " << DisasmI(imm,16);
};

op mvni_v8hi( 0b0110111100000[13] : shl<5> imm1[3] : 0b10[2] : shl<3> sh[1] : 0b001[3] : imm0[5] : rd[5] );
mvni_v8hi.var imm : {uint16_t} = {uint16_t(imm1|imm0) << sh}, format : {char const*} = {"1891"};

mvni_v8hi.disasm = {
  sink << "mvni\t" << DisasmTV(rd,8,1) << ", " << DisasmI(imm,16);
};

op neg_dd( 0b0111111011100000101110[22] : rn[5] : rd[5] );
neg_dd.var format : {char const*} = {"2203"};

neg_dd.disasm = {
  sink << "neg\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op neg_v16b16b( 0b0110111000100000101110[22] : rn[5] : rd[5] );
neg_v16b16b.var format : {char const*} = {"2334"};

neg_v16b16b.disasm = {
  sink << "neg\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op neg_v2d2d( 0b0110111011100000101110[22] : rn[5] : rd[5] );
neg_v2d2d.var format : {char const*} = {"2379"};

neg_v2d2d.disasm = {
  sink << "neg\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op neg_v2s2s( 0b0010111010100000101110[22] : rn[5] : rd[5] );
neg_v2s2s.var format : {char const*} = {"2435"};

neg_v2s2s.disasm = {
  sink << "neg\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op neg_v4h4h( 0b0010111001100000101110[22] : rn[5] : rd[5] );
neg_v4h4h.var format : {char const*} = {"2462"};

neg_v4h4h.disasm = {
  sink << "neg\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1);
};

op neg_v4s4s( 0b0110111010100000101110[22] : rn[5] : rd[5] );
neg_v4s4s.var format : {char const*} = {"2516"};

neg_v4s4s.disasm = {
  sink << "neg\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op neg_v8b8b( 0b0010111000100000101110[22] : rn[5] : rd[5] );
neg_v8b8b.var format : {char const*} = {"2549"};

neg_v8b8b.disasm = {
  sink << "neg\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
};

op neg_v8hv8h( 0b0110111001100000101110[22] : rn[5] : rd[5] );
neg_v8hv8h.var format : {char const*} = {"2580"};

neg_v8hv8h.disasm = {
  sink << "neg\t" << DisasmTV(rd,8,1) <<  ", " << DisasmTV(rn,8,1);
};

/*******************************************************************
 * ORN (vector)
 *
 * Bitwise inclusive OR NOT (vector)
 */

op orn_v8bv8bv8b( 0b00001110111[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
orn_v8bv8bv8b.var format : {char const*} = {"1314"};

orn_v8bv8bv8b.disasm = {
  sink << "orn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

orn_v8bv8bv8b.execute = {
  for (unsigned idx = 0; idx < 8; ++idx)
    cpu.SetVU8(rd,idx,cpu.GetVU8(rn,idx) | ~cpu.GetVU8(rm,idx));
  cpu.ClearHighV(rd,8);
};

op orn_v16bv16bv16b( 0b01001110111[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
orn_v16bv16bv16b.var format : {char const*} = {"840"};

orn_v16bv16bv16b.disasm = {
  sink << "orn\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

orn_v16bv16bv16b.execute = {
  for (unsigned idx = 0; idx < 16; ++idx)
    cpu.SetVU8(rd,idx,cpu.GetVU8(rn,idx) | ~cpu.GetVU8(rm,idx));
  cpu.ClearHighV(rd,16);
};

/*
 * end of ORN (vector)
 *******************************************************************/

op orr_v2si( 0b0000111100000[13] : shl<5> imm1[3] : 0b0[1] : shl<3> sh[2] : 0b101[3] : imm0[5] : rd[5] );
orr_v2si.var imm : {uint32_t} = {uint32_t(imm1|imm0) << sh}, format : {char const*} = {"1789"};

orr_v2si.disasm = {
  sink << "orr\t" << DisasmTV(rd,2,2) << ", " << DisasmI(imm,16);
};

op orr_v4hi( 0b0000111100000[13] : shl<5> imm1[3] : 0b10[2] : shl<3> sh[1] : 0b101[3] : imm0[5] : rd[5] );
orr_v4hi.var imm : {uint16_t} = {uint16_t(imm1|imm0) << sh}, format : {char const*} = {"1888"};

orr_v4hi.disasm = {
  sink << "orr\t" << DisasmTV(rd,4,1) << ", " << DisasmI(imm,16);
};

op orr_v4si( 0b0100111100000[13] : shl<5> imm1[3] : 0b0[1] : shl<3> sh[2] : 0b101[3] : imm0[5] : rd[5] );
orr_v4si.var imm : {uint32_t} = {uint32_t(imm1|imm0) << sh}, format : {char const*} = {"1793"};

orr_v4si.disasm = {
  sink << "orr\t" << DisasmTV(rd,4,2) << ", " << DisasmI(imm,16);
};

op orr_v8hi( 0b0100111100000[13] : shl<5> imm1[3] : 0b10[2] : shl<3> sh[1] : 0b101[3] : imm0[5] : rd[5] );
orr_v8hi.var imm : {uint16_t} = {uint16_t(imm1|imm0) << sh}, format : {char const*} = {"1892"};

orr_v8hi.disasm = {
  sink << "orr\t" << DisasmTV(rd,8,1) << ", " << DisasmI(imm,16);
};

/*******************************************************************
 * ORR (vector, register)
 * Bitwise inclusive OR (vector, register)
 */

op orr_v8bv8bv8b( 0b00001110101[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
orr_v8bv8bv8b.var format : {char const*} = {"1315"};

orr_v8bv8bv8b.disasm = {
  if (rn == rm)
    sink << "mov\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
  else
    sink << "orr\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

orr_v8bv8bv8b.execute = {
  for (unsigned idx = 0; idx < 8; ++idx)
    cpu.SetVU8(rd,idx,cpu.GetVU8(rn,idx) | cpu.GetVU8(rm,idx));
  cpu.ClearHighV(rd,8);
};

op orr_v16bv16bv16b( 0b01001110101[11] : rm[5] : 0b000111[6] : rn[5] : rd[5] );
orr_v16bv16bv16b.var format : {char const*} = {"841"};

orr_v16bv16bv16b.disasm = {
  if (rn == rm)
    sink << "mov\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
  else
    sink << "orr\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

orr_v16bv16bv16b.execute = {
  for (unsigned idx = 0; idx < 16; ++idx)
    cpu.SetVU8(rd,idx,cpu.GetVU8(rn,idx) | cpu.GetVU8(rm,idx));
  cpu.ClearHighV(rd,16);
};

/*
 * end of ORR (vector, register)
 *******************************************************************/

op pmul_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b100111[6] : rn[5] : rd[5] );
pmul_v16bv16bv16b.var format : {char const*} = {"842"};

pmul_v16bv16bv16b.disasm = {
  sink << "pmul\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op pmul_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b100111[6] : rn[5] : rd[5] );
pmul_v8bv8bv8b.var format : {char const*} = {"1316"};

pmul_v8bv8bv8b.disasm = {
  sink << "pmul\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op pmull( 0b00001110111[11] : rm[5] : 0b111000[6] : rn[5] : rd[5] );
pmull.var format : {char const*} = {"892"};

pmull.disasm = {
  sink << "pmull\t" << DisasmTV(rd,1,4) << ", " << DisasmTV(rn,1,3) << ", " << DisasmTV(rm,1,3);
};

op pmull2( 0b01001110111[11] : rm[5] : 0b111000[6] : rn[5] : rd[5] );
pmull2.var format : {char const*} = {"893"};

pmull2.disasm = {
  sink << "pmull2\t" << DisasmTV(rd,1,4) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op pmull2_v8hv16bv16b( 0b01001110001[11] : rm[5] : 0b111000[6] : rn[5] : rd[5] );
pmull2_v8hv16bv16b.var format : {char const*} = {"1366"};

pmull2_v8hv16bv16b.disasm = {
  sink << "pmull2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op pmull_v8hv8bv8b( 0b00001110001[11] : rm[5] : 0b111000[6] : rn[5] : rd[5] );
pmull_v8hv8bv8b.var format : {char const*} = {"1385"};

pmull_v8hv8bv8b.disasm = {
  sink << "pmull\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op raddhn2_v16bv8hv8h( 0b01101110001[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
raddhn2_v16bv8hv8h.var format : {char const*} = {"881"};

raddhn2_v16bv8hv8h.disasm = {
  sink << "raddhn2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op raddhn2_v4sv2dv2d( 0b01101110101[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
raddhn2_v4sv2dv2d.var format : {char const*} = {"1158"};

raddhn2_v4sv2dv2d.disasm = {
  sink << "raddhn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op raddhn2_v8hv4sv4s( 0b01101110011[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
raddhn2_v8hv4sv4s.var format : {char const*} = {"1382"};

raddhn2_v8hv4sv4s.disasm = {
  sink << "raddhn2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op raddhn_v2sv2dv2d( 0b00101110101[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
raddhn_v2sv2dv2d.var format : {char const*} = {"1000"};

raddhn_v2sv2dv2d.disasm = {
  sink << "raddhn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op raddhn_v4hv4sv4s( 0b00101110011[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
raddhn_v4hv4sv4s.var format : {char const*} = {"1146"};

raddhn_v4hv4sv4s.disasm = {
  sink << "raddhn\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op raddhn_v8bv8hv8h( 0b00101110001[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
raddhn_v8bv8hv8h.var format : {char const*} = {"1355"};

raddhn_v8bv8hv8h.disasm = {
  sink << "raddhn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op rbit_v16b16b( 0b0110111001100000010110[22] : rn[5] : rd[5] );
rbit_v16b16b.var format : {char const*} = {"2335"};

rbit_v16b16b.disasm = {
  sink << "rbit\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op rbit_v8b8b( 0b0010111001100000010110[22] : rn[5] : rd[5] );
rbit_v8b8b.var format : {char const*} = {"2550"};

rbit_v8b8b.disasm = {
  sink << "rbit\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
};

op rev16_v16b16b( 0b0100111000100000000110[22] : rn[5] : rd[5] );
rev16_v16b16b.var format : {char const*} = {"2336"};

rev16_v16b16b.disasm = {
  sink << "rev16\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op rev16_v8b8b( 0b0000111000100000000110[22] : rn[5] : rd[5] );
rev16_v8b8b.var format : {char const*} = {"2551"};

rev16_v8b8b.disasm = {
  sink << "rev16\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
};

op rev32_v16b16b( 0b0110111000100000000010[22] : rn[5] : rd[5] );
rev32_v16b16b.var format : {char const*} = {"2337"};

rev32_v16b16b.disasm = {
  sink << "rev32\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op rev32_v4h4h( 0b0010111001100000000010[22] : rn[5] : rd[5] );
rev32_v4h4h.var format : {char const*} = {"2463"};

rev32_v4h4h.disasm = {
  sink << "rev32\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1);
};

op rev32_v8b8b( 0b0010111000100000000010[22] : rn[5] : rd[5] );
rev32_v8b8b.var format : {char const*} = {"2552"};

rev32_v8b8b.disasm = {
  sink << "rev32\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
};

op rev32_v8hv8h( 0b0110111001100000000010[22] : rn[5] : rd[5] );
rev32_v8hv8h.var format : {char const*} = {"2581"};

rev32_v8hv8h.disasm = {
  sink << "rev32\t" << DisasmTV(rd,8,1) <<  ", " << DisasmTV(rn,8,1);
};

op rev64_v16b16b( 0b0100111000100000000010[22] : rn[5] : rd[5] );
rev64_v16b16b.var format : {char const*} = {"2338"};

rev64_v16b16b.disasm = {
  sink << "rev64\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op rev64_v2s2s( 0b0000111010100000000010[22] : rn[5] : rd[5] );
rev64_v2s2s.var format : {char const*} = {"2436"};

rev64_v2s2s.disasm = {
  sink << "rev64\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op rev64_v4h4h( 0b0000111001100000000010[22] : rn[5] : rd[5] );
rev64_v4h4h.var format : {char const*} = {"2464"};

rev64_v4h4h.disasm = {
  sink << "rev64\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1);
};

op rev64_v4s4s( 0b0100111010100000000010[22] : rn[5] : rd[5] );
rev64_v4s4s.var format : {char const*} = {"2517"};

rev64_v4s4s.disasm = {
  sink << "rev64\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op rev64_v8b8b( 0b0000111000100000000010[22] : rn[5] : rd[5] );
rev64_v8b8b.var format : {char const*} = {"2553"};

rev64_v8b8b.disasm = {
  sink << "rev64\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
};

op rev64_v8hv8h( 0b0100111001100000000010[22] : rn[5] : rd[5] );
rev64_v8hv8h.var format : {char const*} = {"2582"};

rev64_v8hv8h.disasm = {
  sink << "rev64\t" << DisasmTV(rd,8,1) <<  ", " << DisasmTV(rn,8,1);
};

op rshrn2_v16b8hi( 0b0100111100001[13] : lro[3] : 0b100011[6] : rn[5] : rd[5] );
rshrn2_v16b8hi.var format : {char const*} = {"1957"}, shift : {unsigned} = {8 - lro};

rshrn2_v16b8hi.disasm = {
  sink << "rshrn2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op rshrn2_v4s2di( 0b01001111001[11] : lro[5] : 0b100011[6] : rn[5] : rd[5] );
rshrn2_v4s2di.var format : {char const*} = {"1149"}, shift : {unsigned} = {32 - lro};

rshrn2_v4s2di.disasm = {
  sink << "rshrn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op rshrn2_v8h4si( 0b010011110001[12] : lro[4] : 0b100011[6] : rn[5] : rd[5] );
rshrn2_v8h4si.var format : {char const*} = {"1863"}, shift : {unsigned} = {16 - lro};

rshrn2_v8h4si.disasm = {
  sink << "rshrn2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op rshrn_v2s2di( 0b00001111001[11] : lro[5] : 0b100011[6] : rn[5] : rd[5] );
rshrn_v2s2di.var format : {char const*} = {"991"}, shift : {unsigned} = {32 - lro};

rshrn_v2s2di.disasm = {
  sink << "rshrn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op rshrn_v4h4si( 0b000011110001[12] : lro[4] : 0b100011[6] : rn[5] : rd[5] );
rshrn_v4h4si.var format : {char const*} = {"1851"}, shift : {unsigned} = {16 - lro};

rshrn_v4h4si.disasm = {
  sink << "rshrn\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op rshrn_v8b8hi( 0b0000111100001[13] : lro[3] : 0b100011[6] : rn[5] : rd[5] );
rshrn_v8b8hi.var format : {char const*} = {"1984"}, shift : {unsigned} = {8 - lro};

rshrn_v8b8hi.disasm = {
  sink << "rshrn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op rsubhn2_v16bv8hv8h( 0b01101110001[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
rsubhn2_v16bv8hv8h.var format : {char const*} = {"882"};

rsubhn2_v16bv8hv8h.disasm = {
  sink << "rsubhn2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op rsubhn2_v4sv2dv2d( 0b01101110101[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
rsubhn2_v4sv2dv2d.var format : {char const*} = {"1159"};

rsubhn2_v4sv2dv2d.disasm = {
  sink << "rsubhn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op rsubhn2_v8hv4sv4s( 0b01101110011[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
rsubhn2_v8hv4sv4s.var format : {char const*} = {"1383"};

rsubhn2_v8hv4sv4s.disasm = {
  sink << "rsubhn2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op rsubhn_v2sv2dv2d( 0b00101110101[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
rsubhn_v2sv2dv2d.var format : {char const*} = {"1001"};

rsubhn_v2sv2dv2d.disasm = {
  sink << "rsubhn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op rsubhn_v4hv4sv4s( 0b00101110011[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
rsubhn_v4hv4sv4s.var format : {char const*} = {"1147"};

rsubhn_v4hv4sv4s.disasm = {
  sink << "rsubhn\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op rsubhn_v8bv8hv8h( 0b00101110001[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
rsubhn_v8bv8hv8h.var format : {char const*} = {"1356"};

rsubhn_v8bv8hv8h.disasm = {
  sink << "rsubhn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op saba_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b011111[6] : rn[5] : rd[5] );
saba_v16bv16bv16b.var format : {char const*} = {"843"};

saba_v16bv16bv16b.disasm = {
  sink << "saba\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op saba_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b011111[6] : rn[5] : rd[5] );
saba_v2sv2sv2s.var format : {char const*} = {"1056"};

saba_v2sv2sv2s.disasm = {
  sink << "saba\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op saba_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b011111[6] : rn[5] : rd[5] );
saba_v4hv4hv4h.var format : {char const*} = {"1106"};

saba_v4hv4hv4h.disasm = {
  sink << "saba\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op saba_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b011111[6] : rn[5] : rd[5] );
saba_v4sv4sv4s.var format : {char const*} = {"1235"};

saba_v4sv4sv4s.disasm = {
  sink << "saba\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op saba_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b011111[6] : rn[5] : rd[5] );
saba_v8bv8bv8b.var format : {char const*} = {"1317"};

saba_v8bv8bv8b.disasm = {
  sink << "saba\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op saba_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b011111[6] : rn[5] : rd[5] );
saba_v8hv8hv8h.var format : {char const*} = {"1419"};

saba_v8hv8hv8h.disasm = {
  sink << "saba\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sabal2_v2dv4sv4s( 0b01001110101[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
sabal2_v2dv4sv4s.var format : {char const*} = {"974"};

sabal2_v2dv4sv4s.disasm = {
  sink << "sabal2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sabal2_v4sv8hv8h( 0b01001110011[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
sabal2_v4sv8hv8h.var format : {char const*} = {"1280"};

sabal2_v4sv8hv8h.disasm = {
  sink << "sabal2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sabal2_v8hv16bv16b( 0b01001110001[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
sabal2_v8hv16bv16b.var format : {char const*} = {"1367"};

sabal2_v8hv16bv16b.disasm = {
  sink << "sabal2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op sabal_v2dv2sv2s( 0b00001110101[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
sabal_v2dv2sv2s.var format : {char const*} = {"955"};

sabal_v2dv2sv2s.disasm = {
  sink << "sabal\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sabal_v4sv4hv4h( 0b00001110011[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
sabal_v4sv4hv4h.var format : {char const*} = {"1161"};

sabal_v4sv4hv4h.disasm = {
  sink << "sabal\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sabal_v8hv8bv8b( 0b00001110001[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
sabal_v8hv8bv8b.var format : {char const*} = {"1386"};

sabal_v8hv8bv8b.disasm = {
  sink << "sabal\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op sabd_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b011101[6] : rn[5] : rd[5] );
sabd_v16bv16bv16b.var format : {char const*} = {"844"};

sabd_v16bv16bv16b.disasm = {
  sink << "sabd\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op sabd_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b011101[6] : rn[5] : rd[5] );
sabd_v2sv2sv2s.var format : {char const*} = {"1057"};

sabd_v2sv2sv2s.disasm = {
  sink << "sabd\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sabd_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b011101[6] : rn[5] : rd[5] );
sabd_v4hv4hv4h.var format : {char const*} = {"1107"};

sabd_v4hv4hv4h.disasm = {
  sink << "sabd\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sabd_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b011101[6] : rn[5] : rd[5] );
sabd_v4sv4sv4s.var format : {char const*} = {"1236"};

sabd_v4sv4sv4s.disasm = {
  sink << "sabd\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sabd_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b011101[6] : rn[5] : rd[5] );
sabd_v8bv8bv8b.var format : {char const*} = {"1318"};

sabd_v8bv8bv8b.disasm = {
  sink << "sabd\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op sabd_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b011101[6] : rn[5] : rd[5] );
sabd_v8hv8hv8h.var format : {char const*} = {"1420"};

sabd_v8hv8hv8h.disasm = {
  sink << "sabd\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sabdl2_v2dv4sv4s( 0b01001110101[11] : rm[5] : 0b011100[6] : rn[5] : rd[5] );
sabdl2_v2dv4sv4s.var format : {char const*} = {"975"};

sabdl2_v2dv4sv4s.disasm = {
  sink << "sabdl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sabdl2_v4sv8hv8h( 0b01001110011[11] : rm[5] : 0b011100[6] : rn[5] : rd[5] );
sabdl2_v4sv8hv8h.var format : {char const*} = {"1281"};

sabdl2_v4sv8hv8h.disasm = {
  sink << "sabdl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sabdl2_v8hv16bv16b( 0b01001110001[11] : rm[5] : 0b011100[6] : rn[5] : rd[5] );
sabdl2_v8hv16bv16b.var format : {char const*} = {"1368"};

sabdl2_v8hv16bv16b.disasm = {
  sink << "sabdl2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op sabdl_v2dv2sv2s( 0b00001110101[11] : rm[5] : 0b011100[6] : rn[5] : rd[5] );
sabdl_v2dv2sv2s.var format : {char const*} = {"956"};

sabdl_v2dv2sv2s.disasm = {
  sink << "sabdl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sabdl_v4sv4hv4h( 0b00001110011[11] : rm[5] : 0b011100[6] : rn[5] : rd[5] );
sabdl_v4sv4hv4h.var format : {char const*} = {"1162"};

sabdl_v4sv4hv4h.disasm = {
  sink << "sabdl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sabdl_v8hv8bv8b( 0b00001110001[11] : rm[5] : 0b011100[6] : rn[5] : rd[5] );
sabdl_v8hv8bv8b.var format : {char const*} = {"1387"};

sabdl_v8hv8bv8b.disasm = {
  sink << "sabdl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op sadalp_v1d2s( 0b0000111010100000011010[22] : rn[5] : rd[5] );
sadalp_v1d2s.var format : {char const*} = {"2352"};

sadalp_v1d2s.disasm = {
  sink << "sadalp\t" << DisasmTV(rd,1,3) << ", " << DisasmTV(rn,2,2);
};

op sadalp_v2d4s( 0b0100111010100000011010[22] : rn[5] : rd[5] );
sadalp_v2d4s.var format : {char const*} = {"2399"};

sadalp_v2d4s.disasm = {
  sink << "sadalp\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2);
};

op sadalp_v2s4h( 0b0000111001100000011010[22] : rn[5] : rd[5] );
sadalp_v2s4h.var format : {char const*} = {"2455"};

sadalp_v2s4h.disasm = {
  sink << "sadalp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,4,1);
};

op sadalp_v4h8b( 0b0000111000100000011010[22] : rn[5] : rd[5] );
sadalp_v4h8b.var format : {char const*} = {"2479"};

sadalp_v4h8b.disasm = {
  sink << "sadalp\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,8,0);
};

op sadalp_v4s8h( 0b0100111001100000011010[22] : rn[5] : rd[5] );
sadalp_v4s8h.var format : {char const*} = {"2539"};

sadalp_v4s8h.disasm = {
  sink << "sadalp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1);
};

op sadalp_v8h16b( 0b0100111000100000011010[22] : rn[5] : rd[5] );
sadalp_v8h16b.var format : {char const*} = {"2567"};

sadalp_v8h16b.disasm = {
  sink << "sadalp\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0);
};

op saddl2_v2dv4sv4s( 0b01001110101[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
saddl2_v2dv4sv4s.var format : {char const*} = {"976"};

saddl2_v2dv4sv4s.disasm = {
  sink << "saddl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op saddl2_v4sv8hv8h( 0b01001110011[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
saddl2_v4sv8hv8h.var format : {char const*} = {"1282"};

saddl2_v4sv8hv8h.disasm = {
  sink << "saddl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op saddl2_v8hv16bv16b( 0b01001110001[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
saddl2_v8hv16bv16b.var format : {char const*} = {"1369"};

saddl2_v8hv16bv16b.disasm = {
  sink << "saddl2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op saddl_v2dv2sv2s( 0b00001110101[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
saddl_v2dv2sv2s.var format : {char const*} = {"957"};

saddl_v2dv2sv2s.disasm = {
  sink << "saddl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op saddl_v4sv4hv4h( 0b00001110011[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
saddl_v4sv4hv4h.var format : {char const*} = {"1163"};

saddl_v4sv4hv4h.disasm = {
  sink << "saddl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op saddl_v8hv8bv8b( 0b00001110001[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
saddl_v8hv8bv8b.var format : {char const*} = {"1388"};

saddl_v8hv8bv8b.disasm = {
  sink << "saddl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op saddlp_v1d2s( 0b0000111010100000001010[22] : rn[5] : rd[5] );
saddlp_v1d2s.var format : {char const*} = {"2353"};

saddlp_v1d2s.disasm = {
  sink << "saddlp\t" << DisasmTV(rd,1,3) << ", " << DisasmTV(rn,2,2);
};

op saddlp_v2d4s( 0b0100111010100000001010[22] : rn[5] : rd[5] );
saddlp_v2d4s.var format : {char const*} = {"2400"};

saddlp_v2d4s.disasm = {
  sink << "saddlp\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2);
};

op saddlp_v2s4h( 0b0000111001100000001010[22] : rn[5] : rd[5] );
saddlp_v2s4h.var format : {char const*} = {"2456"};

saddlp_v2s4h.disasm = {
  sink << "saddlp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,4,1);
};

op saddlp_v4h8b( 0b0000111000100000001010[22] : rn[5] : rd[5] );
saddlp_v4h8b.var format : {char const*} = {"2480"};

saddlp_v4h8b.disasm = {
  sink << "saddlp\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,8,0);
};

op saddlp_v4s8h( 0b0100111001100000001010[22] : rn[5] : rd[5] );
saddlp_v4s8h.var format : {char const*} = {"2540"};

saddlp_v4s8h.disasm = {
  sink << "saddlp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1);
};

op saddlp_v8h16b( 0b0100111000100000001010[22] : rn[5] : rd[5] );
saddlp_v8h16b.var format : {char const*} = {"2568"};

saddlp_v8h16b.disasm = {
  sink << "saddlp\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0);
};

op saddlv_dv4s( 0b0100111010110000001110[22] : rn[5] : rd[5] );
saddlv_dv4s.var format : {char const*} = {"2228"};

saddlv_dv4s.disasm = {
  sink << "saddlv\t" << DisasmD(rd) << ", " << DisasmTV(rn,4,2);
};

op saddlv_hv16b( 0b0100111000110000001110[22] : rn[5] : rd[5] );
saddlv_hv16b.var format : {char const*} = {"2245"};

saddlv_hv16b.disasm = {
  sink << "saddlv\t" << DisasmH(rd) << ", " << DisasmTV(rn,16,0);
};

op saddlv_hv8b( 0b0000111000110000001110[22] : rn[5] : rd[5] );
saddlv_hv8b.var format : {char const*} = {"2252"};

saddlv_hv8b.disasm = {
  sink << "saddlv\t" << DisasmH(rd) << ", " << DisasmTV(rn,8,0);
};

op saddlv_sv4h( 0b0000111001110000001110[22] : rn[5] : rd[5] );
saddlv_sv4h.var format : {char const*} = {"2306"};

saddlv_sv4h.disasm = {
  sink << "saddlv\t" << DisasmS(rd) << ", " << DisasmTV(rn,4,1);
};

op saddlv_sv8h( 0b0100111001110000001110[22] : rn[5] : rd[5] );
saddlv_sv8h.var format : {char const*} = {"2317"};

saddlv_sv8h.disasm = {
  sink << "saddlv\t" << DisasmS(rd) << ", " << DisasmTV(rn,8,1);
};

op saddw2_v2dv2dv4s( 0b01001110101[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
saddw2_v2dv2dv4s.var format : {char const*} = {"949"};

saddw2_v2dv2dv4s.disasm = {
  sink << "saddw2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,4,2);
};

op saddw2_v4sv4sv8h( 0b01001110011[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
saddw2_v4sv4sv8h.var format : {char const*} = {"1276"};

saddw2_v4sv4sv8h.disasm = {
  sink << "saddw2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,8,1);
};

op saddw2_v8hv8hv16b( 0b01001110001[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
saddw2_v8hv8hv16b.var format : {char const*} = {"1400"};

saddw2_v8hv8hv16b.disasm = {
  sink << "saddw2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,16,0);
};

op saddw_v2dv2dv2s( 0b00001110101[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
saddw_v2dv2dv2s.var format : {char const*} = {"945"};

saddw_v2dv2dv2s.disasm = {
  sink << "saddw\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,2);
};

op saddw_v4sv4sv4h( 0b00001110011[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
saddw_v4sv4sv4h.var format : {char const*} = {"1196"};

saddw_v4sv4sv4h.disasm = {
  sink << "saddw\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,1);
};

op saddw_v8hv8hv8b( 0b00001110001[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
saddw_v8hv8hv8b.var format : {char const*} = {"1404"};

saddw_v8hv8hv8b.disasm = {
  sink << "saddw\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,0);
};

op scvtf_dd( 0b0101111001100001110110[22] : rn[5] : rd[5] );
scvtf_dd.var format : {char const*} = {"2204"};

scvtf_dd.disasm = {
  sink << "scvtf\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op scvtf_ddi( 0b0101111101[10] : lro[6] : 0b111001[6] : rn[5] : rd[5] );
scvtf_ddi.var format : {char const*} = {"537"}, shift : {unsigned} = {64 - lro};

scvtf_ddi.disasm = {
  sink << "scvtf\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op scvtf_dw( 0b0001111001100010000000[22] : rn[5] : rd[5] );
scvtf_dw.var format : {char const*} = {"2231"};

scvtf_dw.disasm = {
  sink << "scvtf\t" << DisasmD(rd) << ", " << DisasmGZWR(rn);
};

op scvtf_dwi( 0b00011110010000101[17] : scale[5] : rn[5] : rd[5] );
scvtf_dwi.var fbits : {unsigned} = {32-scale}, format : {char const*} = {"1795"};

scvtf_dwi.disasm = {
  sink << "scvtf\t" << DisasmD(rd) << ", " << DisasmGZWR(rn) << ", " << DisasmI(fbits);
};

op scvtf_dx( 0b1001111001100010000000[22] : rn[5] : rd[5] );
scvtf_dx.var format : {char const*} = {"2234"};

scvtf_dx.disasm = {
  sink << "scvtf\t" << DisasmD(rd) << ", " << DisasmGZXR(rn);
};

op scvtf_dxi( 0b1001111001000010[16] : scale[6] : rn[5] : rd[5] );
scvtf_dxi.var fbits : {unsigned} = {64-scale}, format : {char const*} = {"687"};

scvtf_dxi.disasm = {
  sink << "scvtf\t" << DisasmD(rd) << ", " << DisasmGZXR(rn) << ", " << DisasmI(fbits);
};

op scvtf_ss( 0b0101111000100001110110[22] : rn[5] : rd[5] );
scvtf_ss.var format : {char const*} = {"2289"};

scvtf_ss.disasm = {
  sink << "scvtf\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op scvtf_ssi( 0b01011111001[11] : lro[5] : 0b111001[6] : rn[5] : rd[5] );
scvtf_ssi.var format : {char const*} = {"786"}, shift : {unsigned} = {32 - lro};

scvtf_ssi.disasm = {
  sink << "scvtf\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmI(shift);
};

op scvtf_sw( 0b0001111000100010000000[22] : rn[5] : rd[5] );
scvtf_sw.var format : {char const*} = {"2320"};

scvtf_sw.disasm = {
  sink << "scvtf\t" << DisasmS(rd) << ", " << DisasmGZWR(rn);
};

op scvtf_swi( 0b00011110000000101[17] : scale[5] : rn[5] : rd[5] );
scvtf_swi.var fbits : {unsigned} = {32-scale}, format : {char const*} = {"1797"};

scvtf_swi.disasm = {
  sink << "scvtf\t" << DisasmS(rd) << ", " << DisasmGZWR(rn) << ", " << DisasmI(fbits);
};

op scvtf_sx( 0b1001111000100010000000[22] : rn[5] : rd[5] );
scvtf_sx.var format : {char const*} = {"2323"};

scvtf_sx.disasm = {
  sink << "scvtf\t" << DisasmS(rd) << ", " << DisasmGZXR(rn);
};

op scvtf_sxi( 0b1001111000000010[16] : scale[6] : rn[5] : rd[5] );
scvtf_sxi.var fbits : {unsigned} = {64-scale}, format : {char const*} = {"689"};

scvtf_sxi.disasm = {
  sink << "scvtf\t" << DisasmS(rd) << ", " << DisasmGZXR(rn) << ", " << DisasmI(fbits);
};

op scvtf_v2d2d( 0b0100111001100001110110[22] : rn[5] : rd[5] );
scvtf_v2d2d.var format : {char const*} = {"2380"};

scvtf_v2d2d.disasm = {
  sink << "scvtf\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op scvtf_v2d2di( 0b0100111101[10] : lro[6] : 0b111001[6] : rn[5] : rd[5] );
scvtf_v2d2di.var format : {char const*} = {"555"}, shift : {unsigned} = {64 - lro};

scvtf_v2d2di.disasm = {
  sink << "scvtf\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op scvtf_v2s2s( 0b0000111000100001110110[22] : rn[5] : rd[5] );
scvtf_v2s2s.var format : {char const*} = {"2437"};

scvtf_v2s2s.disasm = {
  sink << "scvtf\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op scvtf_v2s2si( 0b00001111001[11] : lro[5] : 0b111001[6] : rn[5] : rd[5] );
scvtf_v2s2si.var format : {char const*} = {"1005"}, shift : {unsigned} = {32 - lro};

scvtf_v2s2si.disasm = {
  sink << "scvtf\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(shift);
};

op scvtf_v4s4s( 0b0100111000100001110110[22] : rn[5] : rd[5] );
scvtf_v4s4s.var format : {char const*} = {"2518"};

scvtf_v4s4s.disasm = {
  sink << "scvtf\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op scvtf_v4s4si( 0b01001111001[11] : lro[5] : 0b111001[6] : rn[5] : rd[5] );
scvtf_v4s4si.var format : {char const*} = {"1180"}, shift : {unsigned} = {32 - lro};

scvtf_v4s4si.disasm = {
  sink << "scvtf\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op sha1c( 0b01011110000[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
sha1c.var format : {char const*} = {"768"};

sha1c.disasm = {
  sink << "sha1c\t" << DisasmQ(rd) << ", " << DisasmS(rn) << ", " << DisasmTV(rm,4,2);
};

op sha1h_ss( 0b0101111000101000000010[22] : rn[5] : rd[5] );
sha1h_ss.var format : {char const*} = {"2290"};

sha1h_ss.disasm = {
  sink << "sha1h\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op sha1m( 0b01011110000[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
sha1m.var format : {char const*} = {"769"};

sha1m.disasm = {
  sink << "sha1m\t" << DisasmQ(rd) << ", " << DisasmS(rn) << ", " << DisasmTV(rm,4,2);
};

op sha1p( 0b01011110000[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
sha1p.var format : {char const*} = {"770"};

sha1p.disasm = {
  sink << "sha1p\t" << DisasmQ(rd) << ", " << DisasmS(rn) << ", " << DisasmTV(rm,4,2);
};

op sha1su0_v4sv4sv4s( 0b01011110000[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
sha1su0_v4sv4sv4s.var format : {char const*} = {"1237"};

sha1su0_v4sv4sv4s.disasm = {
  sink << "sha1su0\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sha1su1_v4s4s( 0b0101111000101000000110[22] : rn[5] : rd[5] );
sha1su1_v4s4s.var format : {char const*} = {"2519"};

sha1su1_v4s4s.disasm = {
  sink << "sha1su1\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op sha256h( 0b01011110000[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
sha256h.var format : {char const*} = {"766"};

sha256h.disasm = {
  sink << "sha256h\t" << DisasmQ(rd) << ", " << DisasmQ(rn) << ", " << DisasmTV(rm,4,2);
};

op sha256h2( 0b01011110000[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
sha256h2.var format : {char const*} = {"767"};

sha256h2.disasm = {
  sink << "sha256h2\t" << DisasmQ(rd) << ", " << DisasmQ(rn) << ", " << DisasmTV(rm,4,2);
};

op sha256su0_v4s4s( 0b0101111000101000001010[22] : rn[5] : rd[5] );
sha256su0_v4s4s.var format : {char const*} = {"2520"};

sha256su0_v4s4s.disasm = {
  sink << "sha256su0\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op sha256su1_v4sv4sv4s( 0b01011110000[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
sha256su1_v4sv4sv4s.var format : {char const*} = {"1238"};

sha256su1_v4sv4sv4s.disasm = {
  sink << "sha256su1\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op shadd_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b000001[6] : rn[5] : rd[5] );
shadd_v16bv16bv16b.var format : {char const*} = {"845"};

shadd_v16bv16bv16b.disasm = {
  sink << "shadd\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op shadd_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b000001[6] : rn[5] : rd[5] );
shadd_v2sv2sv2s.var format : {char const*} = {"1058"};

shadd_v2sv2sv2s.disasm = {
  sink << "shadd\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op shadd_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b000001[6] : rn[5] : rd[5] );
shadd_v4hv4hv4h.var format : {char const*} = {"1108"};

shadd_v4hv4hv4h.disasm = {
  sink << "shadd\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op shadd_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b000001[6] : rn[5] : rd[5] );
shadd_v4sv4sv4s.var format : {char const*} = {"1239"};

shadd_v4sv4sv4s.disasm = {
  sink << "shadd\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op shadd_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b000001[6] : rn[5] : rd[5] );
shadd_v8bv8bv8b.var format : {char const*} = {"1319"};

shadd_v8bv8bv8b.disasm = {
  sink << "shadd\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op shadd_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b000001[6] : rn[5] : rd[5] );
shadd_v8hv8hv8h.var format : {char const*} = {"1421"};

shadd_v8hv8hv8h.disasm = {
  sink << "shadd\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op shl_ddi( 0b0101111101[10] : shift[6] : 0b010101[6] : rn[5] : rd[5] );
shl_ddi.var format : {char const*} = {"538"};

shl_ddi.disasm = {
  sink << "shl\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op shl_v16b16bi( 0b0100111100001[13] : imm[3] : 0b010101[6] : rn[5] : rd[5] );
shl_v16b16bi.var format : {char const*} = {"1943"};

shl_v16b16bi.disasm = {
  sink << "shl\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(imm);
};

op shl_v2d2di( 0b0100111101[10] : imm[6] : 0b010101[6] : rn[5] : rd[5] );
shl_v2d2di.var format : {char const*} = {"556"};

shl_v2d2di.disasm = {
  sink << "shl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(imm);
};

op shl_v2s2si( 0b00001111001[11] : imm[5] : 0b010101[6] : rn[5] : rd[5] );
shl_v2s2si.var format : {char const*} = {"1006"};

shl_v2s2si.disasm = {
  sink << "shl\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(imm);
};

op shl_v4h4hi( 0b000011110001[12] : imm[4] : 0b010101[6] : rn[5] : rd[5] );
shl_v4h4hi.var format : {char const*} = {"1837"};

shl_v4h4hi.disasm = {
  sink << "shl\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(imm);
};

op shl_v4s4si( 0b01001111001[11] : imm[5] : 0b010101[6] : rn[5] : rd[5] );
shl_v4s4si.var format : {char const*} = {"1181"};

shl_v4s4si.disasm = {
  sink << "shl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(imm);
};

op shl_v8b8bi( 0b0000111100001[13] : imm[3] : 0b010101[6] : rn[5] : rd[5] );
shl_v8b8bi.var format : {char const*} = {"1970"};

shl_v8b8bi.disasm = {
  sink << "shl\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(imm);
};

op shl_v8h8hi( 0b010011110001[12] : imm[4] : 0b010101[6] : rn[5] : rd[5] );
shl_v8h8hi.var format : {char const*} = {"1871"};

shl_v8h8hi.disasm = {
  sink << "shl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(imm);
};

op shll2_v2d4s( 0b0110111010100001001110[22] : rn[5] : rd[5] );
shll2_v2d4s.var format : {char const*} = {"2403"};

shll2_v2d4s.disasm = {
  sink << "shll2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", #32";
};

op shll2_v4s8h( 0b0110111001100001001110[22] : rn[5] : rd[5] );
shll2_v4s8h.var format : {char const*} = {"2543"};

shll2_v4s8h.disasm = {
  sink << "shll2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", #16";
};

op shll2_v8h16b( 0b0110111000100001001110[22] : rn[5] : rd[5] );
shll2_v8h16b.var format : {char const*} = {"2571"};

shll2_v8h16b.disasm = {
  sink << "shll2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", #8";
};

op shll_v2d2s( 0b0010111010100001001110[22] : rn[5] : rd[5] );
shll_v2d2s.var format : {char const*} = {"2397"};

shll_v2d2s.disasm = {
  sink << "shll\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", #32";
};

op shll_v4s4h( 0b0010111001100001001110[22] : rn[5] : rd[5] );
shll_v4s4h.var format : {char const*} = {"2490"};

shll_v4s4h.disasm = {
  sink << "shll\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", #16";
};

op shll_v8h8b( 0b0010111000100001001110[22] : rn[5] : rd[5] );
shll_v8h8b.var format : {char const*} = {"2576"};

shll_v8h8b.disasm = {
  sink << "shll\t" << DisasmTV(rd,8,1) <<  ", " << DisasmTV(rn,8,0) << ", #8";
};

op shrn2_v16b8hi( 0b0100111100001[13] : lro[3] : 0b100001[6] : rn[5] : rd[5] );
shrn2_v16b8hi.var format : {char const*} = {"1958"}, shift : {unsigned} = {8 - lro};

shrn2_v16b8hi.disasm = {
  sink << "shrn2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op shrn2_v4s2di( 0b01001111001[11] : lro[5] : 0b100001[6] : rn[5] : rd[5] );
shrn2_v4s2di.var format : {char const*} = {"1150"}, shift : {unsigned} = {32 - lro};

shrn2_v4s2di.disasm = {
  sink << "shrn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op shrn2_v8h4si( 0b010011110001[12] : lro[4] : 0b100001[6] : rn[5] : rd[5] );
shrn2_v8h4si.var format : {char const*} = {"1864"}, shift : {unsigned} = {16 - lro};

shrn2_v8h4si.disasm = {
  sink << "shrn2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op shrn_v2s2di( 0b00001111001[11] : lro[5] : 0b100001[6] : rn[5] : rd[5] );
shrn_v2s2di.var format : {char const*} = {"992"}, shift : {unsigned} = {32 - lro};

shrn_v2s2di.disasm = {
  sink << "shrn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op shrn_v4h4si( 0b000011110001[12] : lro[4] : 0b100001[6] : rn[5] : rd[5] );
shrn_v4h4si.var format : {char const*} = {"1852"}, shift : {unsigned} = {16 - lro};

shrn_v4h4si.disasm = {
  sink << "shrn\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op shrn_v8b8hi( 0b0000111100001[13] : lro[3] : 0b100001[6] : rn[5] : rd[5] );
shrn_v8b8hi.var format : {char const*} = {"1985"}, shift : {unsigned} = {8 - lro};

shrn_v8b8hi.disasm = {
  sink << "shrn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op shsub_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b001001[6] : rn[5] : rd[5] );
shsub_v16bv16bv16b.var format : {char const*} = {"846"};

shsub_v16bv16bv16b.disasm = {
  sink << "shsub\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op shsub_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b001001[6] : rn[5] : rd[5] );
shsub_v2sv2sv2s.var format : {char const*} = {"1059"};

shsub_v2sv2sv2s.disasm = {
  sink << "shsub\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op shsub_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b001001[6] : rn[5] : rd[5] );
shsub_v4hv4hv4h.var format : {char const*} = {"1109"};

shsub_v4hv4hv4h.disasm = {
  sink << "shsub\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op shsub_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b001001[6] : rn[5] : rd[5] );
shsub_v4sv4sv4s.var format : {char const*} = {"1240"};

shsub_v4sv4sv4s.disasm = {
  sink << "shsub\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op shsub_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b001001[6] : rn[5] : rd[5] );
shsub_v8bv8bv8b.var format : {char const*} = {"1320"};

shsub_v8bv8bv8b.disasm = {
  sink << "shsub\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op shsub_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b001001[6] : rn[5] : rd[5] );
shsub_v8hv8hv8h.var format : {char const*} = {"1422"};

shsub_v8hv8hv8h.disasm = {
  sink << "shsub\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sli_ddi( 0b0111111101[10] : shift[6] : 0b010101[6] : rn[5] : rd[5] );
sli_ddi.var format : {char const*} = {"539"};

sli_ddi.disasm = {
  sink << "sli\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op sli_v16b16bi( 0b0110111100001[13] : imm[3] : 0b010101[6] : rn[5] : rd[5] );
sli_v16b16bi.var format : {char const*} = {"1944"};

sli_v16b16bi.disasm = {
  sink << "sli\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(imm);
};

op sli_v2d2di( 0b0110111101[10] : imm[6] : 0b010101[6] : rn[5] : rd[5] );
sli_v2d2di.var format : {char const*} = {"557"};

sli_v2d2di.disasm = {
  sink << "sli\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(imm);
};

op sli_v2s2si( 0b00101111001[11] : imm[5] : 0b010101[6] : rn[5] : rd[5] );
sli_v2s2si.var format : {char const*} = {"1007"};

sli_v2s2si.disasm = {
  sink << "sli\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(imm);
};

op sli_v4h4hi( 0b001011110001[12] : imm[4] : 0b010101[6] : rn[5] : rd[5] );
sli_v4h4hi.var format : {char const*} = {"1838"};

sli_v4h4hi.disasm = {
  sink << "sli\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(imm);
};

op sli_v4s4si( 0b01101111001[11] : imm[5] : 0b010101[6] : rn[5] : rd[5] );
sli_v4s4si.var format : {char const*} = {"1182"};

sli_v4s4si.disasm = {
  sink << "sli\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(imm);
};

op sli_v8b8bi( 0b0010111100001[13] : imm[3] : 0b010101[6] : rn[5] : rd[5] );
sli_v8b8bi.var format : {char const*} = {"1971"};

sli_v8b8bi.disasm = {
  sink << "sli\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(imm);
};

op sli_v8h8hi( 0b011011110001[12] : imm[4] : 0b010101[6] : rn[5] : rd[5] );
sli_v8h8hi.var format : {char const*} = {"1872"};

sli_v8h8hi.disasm = {
  sink << "sli\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(imm);
};

op smax_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b011001[6] : rn[5] : rd[5] );
smax_v16bv16bv16b.var format : {char const*} = {"847"};

smax_v16bv16bv16b.disasm = {
  sink << "smax\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op smax_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b011001[6] : rn[5] : rd[5] );
smax_v2sv2sv2s.var format : {char const*} = {"1060"};

smax_v2sv2sv2s.disasm = {
  sink << "smax\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op smax_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b011001[6] : rn[5] : rd[5] );
smax_v4hv4hv4h.var format : {char const*} = {"1110"};

smax_v4hv4hv4h.disasm = {
  sink << "smax\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op smax_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b011001[6] : rn[5] : rd[5] );
smax_v4sv4sv4s.var format : {char const*} = {"1241"};

smax_v4sv4sv4s.disasm = {
  sink << "smax\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op smax_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b011001[6] : rn[5] : rd[5] );
smax_v8bv8bv8b.var format : {char const*} = {"1321"};

smax_v8bv8bv8b.disasm = {
  sink << "smax\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op smax_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b011001[6] : rn[5] : rd[5] );
smax_v8hv8hv8h.var format : {char const*} = {"1423"};

smax_v8hv8hv8h.disasm = {
  sink << "smax\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op smaxp_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b101001[6] : rn[5] : rd[5] );
smaxp_v16bv16bv16b.var format : {char const*} = {"848"};

smaxp_v16bv16bv16b.disasm = {
  sink << "smaxp\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op smaxp_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b101001[6] : rn[5] : rd[5] );
smaxp_v2sv2sv2s.var format : {char const*} = {"1061"};

smaxp_v2sv2sv2s.disasm = {
  sink << "smaxp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op smaxp_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b101001[6] : rn[5] : rd[5] );
smaxp_v4hv4hv4h.var format : {char const*} = {"1111"};

smaxp_v4hv4hv4h.disasm = {
  sink << "smaxp\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op smaxp_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b101001[6] : rn[5] : rd[5] );
smaxp_v4sv4sv4s.var format : {char const*} = {"1242"};

smaxp_v4sv4sv4s.disasm = {
  sink << "smaxp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op smaxp_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b101001[6] : rn[5] : rd[5] );
smaxp_v8bv8bv8b.var format : {char const*} = {"1322"};

smaxp_v8bv8bv8b.disasm = {
  sink << "smaxp\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op smaxp_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b101001[6] : rn[5] : rd[5] );
smaxp_v8hv8hv8h.var format : {char const*} = {"1424"};

smaxp_v8hv8hv8h.disasm = {
  sink << "smaxp\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op smaxv_bv16b( 0b0100111000110000101010[22] : rn[5] : rd[5] );
smaxv_bv16b.var format : {char const*} = {"2169"};

smaxv_bv16b.disasm = {
  sink << "smaxv\t" << DisasmB(rd) << ", " << DisasmTV(rn,16,0);
};

op smaxv_bv8b( 0b0000111000110000101010[22] : rn[5] : rd[5] );
smaxv_bv8b.var format : {char const*} = {"2174"};

smaxv_bv8b.disasm = {
  sink << "smaxv\t" << DisasmB(rd) << ", " << DisasmTV(rn,8,0);
};

op smaxv_hv4h( 0b0000111001110000101010[22] : rn[5] : rd[5] );
smaxv_hv4h.var format : {char const*} = {"2248"};

smaxv_hv4h.disasm = {
  sink << "smaxv\t" << DisasmH(rd) << ", " << DisasmTV(rn,4,1);
};

op smaxv_hv8h( 0b0100111001110000101010[22] : rn[5] : rd[5] );
smaxv_hv8h.var format : {char const*} = {"2255"};

smaxv_hv8h.disasm = {
  sink << "smaxv\t" << DisasmH(rd) << ", " << DisasmTV(rn,8,1);
};

op smaxv_sv4s( 0b0100111010110000101010[22] : rn[5] : rd[5] );
smaxv_sv4s.var format : {char const*} = {"2313"};

smaxv_sv4s.disasm = {
  sink << "smaxv\t" << DisasmS(rd) << ", " << DisasmTV(rn,4,2);
};

op smin_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b011011[6] : rn[5] : rd[5] );
smin_v16bv16bv16b.var format : {char const*} = {"849"};

smin_v16bv16bv16b.disasm = {
  sink << "smin\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op smin_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b011011[6] : rn[5] : rd[5] );
smin_v2sv2sv2s.var format : {char const*} = {"1062"};

smin_v2sv2sv2s.disasm = {
  sink << "smin\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op smin_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b011011[6] : rn[5] : rd[5] );
smin_v4hv4hv4h.var format : {char const*} = {"1112"};

smin_v4hv4hv4h.disasm = {
  sink << "smin\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op smin_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b011011[6] : rn[5] : rd[5] );
smin_v4sv4sv4s.var format : {char const*} = {"1243"};

smin_v4sv4sv4s.disasm = {
  sink << "smin\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op smin_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b011011[6] : rn[5] : rd[5] );
smin_v8bv8bv8b.var format : {char const*} = {"1323"};

smin_v8bv8bv8b.disasm = {
  sink << "smin\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op smin_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b011011[6] : rn[5] : rd[5] );
smin_v8hv8hv8h.var format : {char const*} = {"1425"};

smin_v8hv8hv8h.disasm = {
  sink << "smin\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sminp_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b101011[6] : rn[5] : rd[5] );
sminp_v16bv16bv16b.var format : {char const*} = {"850"};

sminp_v16bv16bv16b.disasm = {
  sink << "sminp\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op sminp_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b101011[6] : rn[5] : rd[5] );
sminp_v2sv2sv2s.var format : {char const*} = {"1063"};

sminp_v2sv2sv2s.disasm = {
  sink << "sminp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sminp_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b101011[6] : rn[5] : rd[5] );
sminp_v4hv4hv4h.var format : {char const*} = {"1113"};

sminp_v4hv4hv4h.disasm = {
  sink << "sminp\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sminp_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b101011[6] : rn[5] : rd[5] );
sminp_v4sv4sv4s.var format : {char const*} = {"1244"};

sminp_v4sv4sv4s.disasm = {
  sink << "sminp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sminp_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b101011[6] : rn[5] : rd[5] );
sminp_v8bv8bv8b.var format : {char const*} = {"1324"};

sminp_v8bv8bv8b.disasm = {
  sink << "sminp\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op sminp_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b101011[6] : rn[5] : rd[5] );
sminp_v8hv8hv8h.var format : {char const*} = {"1426"};

sminp_v8hv8hv8h.disasm = {
  sink << "sminp\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sminv_bv16b( 0b0100111000110001101010[22] : rn[5] : rd[5] );
sminv_bv16b.var format : {char const*} = {"2170"};

sminv_bv16b.disasm = {
  sink << "sminv\t" << DisasmB(rd) << ", " << DisasmTV(rn,16,0);
};

op sminv_bv8b( 0b0000111000110001101010[22] : rn[5] : rd[5] );
sminv_bv8b.var format : {char const*} = {"2175"};

sminv_bv8b.disasm = {
  sink << "sminv\t" << DisasmB(rd) << ", " << DisasmTV(rn,8,0);
};

op sminv_hv4h( 0b0000111001110001101010[22] : rn[5] : rd[5] );
sminv_hv4h.var format : {char const*} = {"2249"};

sminv_hv4h.disasm = {
  sink << "sminv\t" << DisasmH(rd) << ", " << DisasmTV(rn,4,1);
};

op sminv_hv8h( 0b0100111001110001101010[22] : rn[5] : rd[5] );
sminv_hv8h.var format : {char const*} = {"2256"};

sminv_hv8h.disasm = {
  sink << "sminv\t" << DisasmH(rd) << ", " << DisasmTV(rn,8,1);
};

op sminv_sv4s( 0b0100111010110001101010[22] : rn[5] : rd[5] );
sminv_sv4s.var format : {char const*} = {"2314"};

sminv_sv4s.disasm = {
  sink << "sminv\t" << DisasmS(rd) << ", " << DisasmTV(rn,4,2);
};

op smlal2_v2dv4sv4s( 0b01001110101[11] : rm[5] : 0b100000[6] : rn[5] : rd[5] );
smlal2_v2dv4sv4s.var format : {char const*} = {"977"};

smlal2_v2dv4sv4s.disasm = {
  sink << "smlal2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op smlal2_v2dv4svsi( 0b0100111110[10] : index0[1] : rm[5] : 0b0010[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
smlal2_v2dv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"471"};

smlal2_v2dv4svsi.disasm = {
  sink << "smlal2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op smlal2_v4sv8hv8h( 0b01001110011[11] : rm[5] : 0b100000[6] : rn[5] : rd[5] );
smlal2_v4sv8hv8h.var format : {char const*} = {"1283"};

smlal2_v4sv8hv8h.disasm = {
  sink << "smlal2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op smlal2_v4sv8hvhi( 0b0100111101[10] : index0[2] : rm[4] : 0b0010[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
smlal2_v4sv8hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"512"};

smlal2_v4sv8hvhi.disasm = {
  sink << "smlal2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op smlal2_v8hv16bv16b( 0b01001110001[11] : rm[5] : 0b100000[6] : rn[5] : rd[5] );
smlal2_v8hv16bv16b.var format : {char const*} = {"1370"};

smlal2_v8hv16bv16b.disasm = {
  sink << "smlal2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op smlal_v2dv2sv2s( 0b00001110101[11] : rm[5] : 0b100000[6] : rn[5] : rd[5] );
smlal_v2dv2sv2s.var format : {char const*} = {"958"};

smlal_v2dv2sv2s.disasm = {
  sink << "smlal\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op smlal_v2dv2svsi( 0b0000111110[10] : index0[1] : rm[5] : 0b0010[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
smlal_v2dv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"462"};

smlal_v2dv2svsi.disasm = {
  sink << "smlal\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op smlal_v4sv4hv4h( 0b00001110011[11] : rm[5] : 0b100000[6] : rn[5] : rd[5] );
smlal_v4sv4hv4h.var format : {char const*} = {"1164"};

smlal_v4sv4hv4h.disasm = {
  sink << "smlal\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op smlal_v4sv4hvhi( 0b0000111101[10] : index0[2] : rm[4] : 0b0010[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
smlal_v4sv4hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"494"};

smlal_v4sv4hvhi.disasm = {
  sink << "smlal\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op smlal_v8hv8bv8b( 0b00001110001[11] : rm[5] : 0b100000[6] : rn[5] : rd[5] );
smlal_v8hv8bv8b.var format : {char const*} = {"1389"};

smlal_v8hv8bv8b.disasm = {
  sink << "smlal\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op smlsl2_v2dv4sv4s( 0b01001110101[11] : rm[5] : 0b101000[6] : rn[5] : rd[5] );
smlsl2_v2dv4sv4s.var format : {char const*} = {"978"};

smlsl2_v2dv4sv4s.disasm = {
  sink << "smlsl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op smlsl2_v2dv4svsi( 0b0100111110[10] : index0[1] : rm[5] : 0b0110[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
smlsl2_v2dv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"472"};

smlsl2_v2dv4svsi.disasm = {
  sink << "smlsl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op smlsl2_v4sv8hv8h( 0b01001110011[11] : rm[5] : 0b101000[6] : rn[5] : rd[5] );
smlsl2_v4sv8hv8h.var format : {char const*} = {"1284"};

smlsl2_v4sv8hv8h.disasm = {
  sink << "smlsl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op smlsl2_v4sv8hvhi( 0b0100111101[10] : index0[2] : rm[4] : 0b0110[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
smlsl2_v4sv8hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"513"};

smlsl2_v4sv8hvhi.disasm = {
  sink << "smlsl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op smlsl2_v8hv16bv16b( 0b01001110001[11] : rm[5] : 0b101000[6] : rn[5] : rd[5] );
smlsl2_v8hv16bv16b.var format : {char const*} = {"1371"};

smlsl2_v8hv16bv16b.disasm = {
  sink << "smlsl2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op smlsl_v2dv2sv2s( 0b00001110101[11] : rm[5] : 0b101000[6] : rn[5] : rd[5] );
smlsl_v2dv2sv2s.var format : {char const*} = {"959"};

smlsl_v2dv2sv2s.disasm = {
  sink << "smlsl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op smlsl_v2dv2svsi( 0b0000111110[10] : index0[1] : rm[5] : 0b0110[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
smlsl_v2dv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"463"};

smlsl_v2dv2svsi.disasm = {
  sink << "smlsl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op smlsl_v4sv4hv4h( 0b00001110011[11] : rm[5] : 0b101000[6] : rn[5] : rd[5] );
smlsl_v4sv4hv4h.var format : {char const*} = {"1165"};

smlsl_v4sv4hv4h.disasm = {
  sink << "smlsl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op smlsl_v4sv4hvhi( 0b0000111101[10] : index0[2] : rm[4] : 0b0110[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
smlsl_v4sv4hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"495"};

smlsl_v4sv4hvhi.disasm = {
  sink << "smlsl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op smlsl_v8hv8bv8b( 0b00001110001[11] : rm[5] : 0b101000[6] : rn[5] : rd[5] );
smlsl_v8hv8bv8b.var format : {char const*} = {"1390"};

smlsl_v8hv8bv8b.disasm = {
  sink << "smlsl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

/*******************************************************************
 * SMOV
 *
 * Signed move vector element to general-purpose register
 */

op smov_wvb( 0b00001110000[11] : index[4] : 0b1001011[7] : rn[5] : rd[5] );
smov_wvb.var format : {char const*} = {"1825"};

smov_wvb.disasm = {
  sink << "smov\t" << DisasmGZWR(rd) << ", " << DisasmTV(rn,0,0) << DisasmSubscript(index);
};

smov_wvb.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::S32 S32;
  
  cpu.SetGZR(rd, U32(S32(cpu.GetVS8(rn,index))));
};

op smov_wvh( 0b00001110000[11] : index[3] : 0b10001011[8] : rn[5] : rd[5] );
smov_wvh.var format : {char const*} = {"1929"};

smov_wvh.disasm = {
  sink << "smov\t" << DisasmGZWR(rd) << ", " << DisasmTV(rn,0,1) << DisasmSubscript(index);
};

smov_wvh.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::S32 S32;
  
  cpu.SetGZR(rd, U32(S32(cpu.GetVS16(rn,index))));
};

op smov_xvb( 0b01001110000[11] : index[4] : 0b1001011[7] : rn[5] : rd[5] );
smov_xvb.var format : {char const*} = {"1827"};

smov_xvb.disasm = {
  sink << "smov\t" << DisasmGZXR(rd) << ", " << DisasmTV(rn,0,0) << DisasmSubscript(index);
};

smov_xvb.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  cpu.SetGZR(rd, U64(S64(cpu.GetVS8(rn,index))));
};

op smov_xvh( 0b01001110000[11] : index[3] : 0b10001011[8] : rn[5] : rd[5] );
smov_xvh.var format : {char const*} = {"1931"};

smov_xvh.disasm = {
  sink << "smov\t" << DisasmGZXR(rd) << ", " << DisasmTV(rn,0,1) << DisasmSubscript(index);
};

smov_xvh.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  cpu.SetGZR(rd, U64(S64(cpu.GetVS16(rn,index))));
};

op smov_xvs( 0b01001110000[11] : index[2] : 0b100001011[9] : rn[5] : rd[5] );
smov_xvs.var format : {char const*} = {"2019"};

smov_xvs.disasm = {
  sink << "smov\t" << DisasmGZXR(rd) << ", " << DisasmTV(rn,0,2) << DisasmSubscript(index);
};

smov_xvs.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  cpu.SetGZR(rd, U64(S64(cpu.GetVS32(rn,index))));
};

/*
 * end of SMOV
 *******************************************************************/

op smull2_v2dv4sv4s( 0b01001110101[11] : rm[5] : 0b110000[6] : rn[5] : rd[5] );
smull2_v2dv4sv4s.var format : {char const*} = {"979"};

smull2_v2dv4sv4s.disasm = {
  sink << "smull2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op smull2_v2dv4svsi( 0b0100111110[10] : index0[1] : rm[5] : 0b1010[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
smull2_v2dv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"473"};

smull2_v2dv4svsi.disasm = {
  sink << "smull2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op smull2_v4sv8hv8h( 0b01001110011[11] : rm[5] : 0b110000[6] : rn[5] : rd[5] );
smull2_v4sv8hv8h.var format : {char const*} = {"1285"};

smull2_v4sv8hv8h.disasm = {
  sink << "smull2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op smull2_v4sv8hvhi( 0b0100111101[10] : index0[2] : rm[4] : 0b1010[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
smull2_v4sv8hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"514"};

smull2_v4sv8hvhi.disasm = {
  sink << "smull2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op smull2_v8hv16bv16b( 0b01001110001[11] : rm[5] : 0b110000[6] : rn[5] : rd[5] );
smull2_v8hv16bv16b.var format : {char const*} = {"1372"};

smull2_v8hv16bv16b.disasm = {
  sink << "smull2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op smull_v2dv2sv2s( 0b00001110101[11] : rm[5] : 0b110000[6] : rn[5] : rd[5] );
smull_v2dv2sv2s.var format : {char const*} = {"960"};

smull_v2dv2sv2s.disasm = {
  sink << "smull\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op smull_v2dv2svsi( 0b0000111110[10] : index0[1] : rm[5] : 0b1010[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
smull_v2dv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"464"};

smull_v2dv2svsi.disasm = {
  sink << "smull\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op smull_v4sv4hv4h( 0b00001110011[11] : rm[5] : 0b110000[6] : rn[5] : rd[5] );
smull_v4sv4hv4h.var format : {char const*} = {"1166"};

smull_v4sv4hv4h.disasm = {
  sink << "smull\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op smull_v4sv4hvhi( 0b0000111101[10] : index0[2] : rm[4] : 0b1010[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
smull_v4sv4hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"496"};

smull_v4sv4hvhi.disasm = {
  sink << "smull\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op smull_v8hv8bv8b( 0b00001110001[11] : rm[5] : 0b110000[6] : rn[5] : rd[5] );
smull_v8hv8bv8b.var format : {char const*} = {"1391"};

smull_v8hv8bv8b.disasm = {
  sink << "smull\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op sqabs_bb( 0b0101111000100000011110[22] : rn[5] : rd[5] );
sqabs_bb.var format : {char const*} = {"2161"};

sqabs_bb.disasm = {
  sink << "sqabs\t" << DisasmB(rd) << ", " << DisasmB(rn);
};

op sqabs_dd( 0b0101111011100000011110[22] : rn[5] : rd[5] );
sqabs_dd.var format : {char const*} = {"2205"};

sqabs_dd.disasm = {
  sink << "sqabs\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op sqabs_hh( 0b0101111001100000011110[22] : rn[5] : rd[5] );
sqabs_hh.var format : {char const*} = {"2237"};

sqabs_hh.disasm = {
  sink << "sqabs\t" << DisasmH(rd) << ", " << DisasmH(rn);
};

op sqabs_ss( 0b0101111010100000011110[22] : rn[5] : rd[5] );
sqabs_ss.var format : {char const*} = {"2291"};

sqabs_ss.disasm = {
  sink << "sqabs\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op sqabs_v16b16b( 0b0100111000100000011110[22] : rn[5] : rd[5] );
sqabs_v16b16b.var format : {char const*} = {"2339"};

sqabs_v16b16b.disasm = {
  sink << "sqabs\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op sqabs_v2d2d( 0b0100111011100000011110[22] : rn[5] : rd[5] );
sqabs_v2d2d.var format : {char const*} = {"2381"};

sqabs_v2d2d.disasm = {
  sink << "sqabs\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op sqabs_v2s2s( 0b0000111010100000011110[22] : rn[5] : rd[5] );
sqabs_v2s2s.var format : {char const*} = {"2438"};

sqabs_v2s2s.disasm = {
  sink << "sqabs\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op sqabs_v4h4h( 0b0000111001100000011110[22] : rn[5] : rd[5] );
sqabs_v4h4h.var format : {char const*} = {"2465"};

sqabs_v4h4h.disasm = {
  sink << "sqabs\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1);
};

op sqabs_v4s4s( 0b0100111010100000011110[22] : rn[5] : rd[5] );
sqabs_v4s4s.var format : {char const*} = {"2521"};

sqabs_v4s4s.disasm = {
  sink << "sqabs\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op sqabs_v8b8b( 0b0000111000100000011110[22] : rn[5] : rd[5] );
sqabs_v8b8b.var format : {char const*} = {"2554"};

sqabs_v8b8b.disasm = {
  sink << "sqabs\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
};

op sqabs_v8hv8h( 0b0100111001100000011110[22] : rn[5] : rd[5] );
sqabs_v8hv8h.var format : {char const*} = {"2583"};

sqabs_v8hv8h.disasm = {
  sink << "sqabs\t" << DisasmTV(rd,8,1) <<  ", " << DisasmTV(rn,8,1);
};

op sqadd_bbb( 0b01011110001[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
sqadd_bbb.var format : {char const*} = {"695"};

sqadd_bbb.disasm = {
  sink << "sqadd\t" << DisasmB(rd) << ", " << DisasmB(rn) << ", " << DisasmB(rm);
};

op sqadd_ddd( 0b01011110111[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
sqadd_ddd.var format : {char const*} = {"732"};

sqadd_ddd.disasm = {
  sink << "sqadd\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op sqadd_hhh( 0b01011110011[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
sqadd_hhh.var format : {char const*} = {"752"};

sqadd_hhh.disasm = {
  sink << "sqadd\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmH(rm);
};

op sqadd_sss( 0b01011110101[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
sqadd_sss.var format : {char const*} = {"809"};

sqadd_sss.disasm = {
  sink << "sqadd\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op sqadd_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
sqadd_v16bv16bv16b.var format : {char const*} = {"851"};

sqadd_v16bv16bv16b.disasm = {
  sink << "sqadd\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op sqadd_v2dv2dv2d( 0b01001110111[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
sqadd_v2dv2dv2d.var format : {char const*} = {"926"};

sqadd_v2dv2dv2d.disasm = {
  sink << "sqadd\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op sqadd_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
sqadd_v2sv2sv2s.var format : {char const*} = {"1064"};

sqadd_v2sv2sv2s.disasm = {
  sink << "sqadd\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sqadd_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
sqadd_v4hv4hv4h.var format : {char const*} = {"1114"};

sqadd_v4hv4hv4h.disasm = {
  sink << "sqadd\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sqadd_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
sqadd_v4sv4sv4s.var format : {char const*} = {"1245"};

sqadd_v4sv4sv4s.disasm = {
  sink << "sqadd\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sqadd_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
sqadd_v8bv8bv8b.var format : {char const*} = {"1325"};

sqadd_v8bv8bv8b.disasm = {
  sink << "sqadd\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op sqadd_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
sqadd_v8hv8hv8h.var format : {char const*} = {"1427"};

sqadd_v8hv8hv8h.disasm = {
  sink << "sqadd\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sqdmlal2_v2dv4sv4s( 0b01001110101[11] : rm[5] : 0b100100[6] : rn[5] : rd[5] );
sqdmlal2_v2dv4sv4s.var format : {char const*} = {"980"};

sqdmlal2_v2dv4sv4s.disasm = {
  sink << "sqdmlal2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sqdmlal2_v2dv4svsi( 0b0100111110[10] : index0[1] : rm[5] : 0b0011[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmlal2_v2dv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"474"};

sqdmlal2_v2dv4svsi.disasm = {
  sink << "sqdmlal2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqdmlal2_v4sv8hv8h( 0b01001110011[11] : rm[5] : 0b100100[6] : rn[5] : rd[5] );
sqdmlal2_v4sv8hv8h.var format : {char const*} = {"1286"};

sqdmlal2_v4sv8hv8h.disasm = {
  sink << "sqdmlal2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sqdmlal2_v4sv8hvhi( 0b0100111101[10] : index0[2] : rm[4] : 0b0011[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmlal2_v4sv8hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"515"};

sqdmlal2_v4sv8hvhi.disasm = {
  sink << "sqdmlal2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqdmlal_dss( 0b01011110101[11] : rm[5] : 0b100100[6] : rn[5] : rd[5] );
sqdmlal_dss.var format : {char const*} = {"745"};

sqdmlal_dss.disasm = {
  sink << "sqdmlal\t" << DisasmD(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op sqdmlal_dsvsi( 0b0101111110[10] : index0[1] : rm[5] : 0b0011[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmlal_dsvsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"448"};

sqdmlal_dsvsi.disasm = {
  sink << "sqdmlal\t" << DisasmD(rd) << ", " << DisasmS(rn) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqdmlal_shh( 0b01011110011[11] : rm[5] : 0b100100[6] : rn[5] : rd[5] );
sqdmlal_shh.var format : {char const*} = {"781"};

sqdmlal_shh.disasm = {
  sink << "sqdmlal\t" << DisasmS(rd) << ", " << DisasmH(rn) << ", " << DisasmH(rm);
};

op sqdmlal_shvhi( 0b0101111101[10] : index0[2] : rm[4] : 0b0011[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmlal_shvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"453"};

sqdmlal_shvhi.disasm = {
  sink << "sqdmlal\t" << DisasmS(rd) << ", " << DisasmH(rn) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqdmlal_v2dv2sv2s( 0b00001110101[11] : rm[5] : 0b100100[6] : rn[5] : rd[5] );
sqdmlal_v2dv2sv2s.var format : {char const*} = {"961"};

sqdmlal_v2dv2sv2s.disasm = {
  sink << "sqdmlal\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sqdmlal_v2dv2svsi( 0b0000111110[10] : index0[1] : rm[5] : 0b0011[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmlal_v2dv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"465"};

sqdmlal_v2dv2svsi.disasm = {
  sink << "sqdmlal\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqdmlal_v4sv4hv4h( 0b00001110011[11] : rm[5] : 0b100100[6] : rn[5] : rd[5] );
sqdmlal_v4sv4hv4h.var format : {char const*} = {"1167"};

sqdmlal_v4sv4hv4h.disasm = {
  sink << "sqdmlal\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sqdmlal_v4sv4hvhi( 0b0000111101[10] : index0[2] : rm[4] : 0b0011[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmlal_v4sv4hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"497"};

sqdmlal_v4sv4hvhi.disasm = {
  sink << "sqdmlal\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqdmlsl2_v2dv4sv4s( 0b01001110101[11] : rm[5] : 0b101100[6] : rn[5] : rd[5] );
sqdmlsl2_v2dv4sv4s.var format : {char const*} = {"981"};

sqdmlsl2_v2dv4sv4s.disasm = {
  sink << "sqdmlsl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sqdmlsl2_v2dv4svsi( 0b0100111110[10] : index0[1] : rm[5] : 0b0111[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmlsl2_v2dv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"475"};

sqdmlsl2_v2dv4svsi.disasm = {
  sink << "sqdmlsl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqdmlsl2_v4sv8hv8h( 0b01001110011[11] : rm[5] : 0b101100[6] : rn[5] : rd[5] );
sqdmlsl2_v4sv8hv8h.var format : {char const*} = {"1287"};

sqdmlsl2_v4sv8hv8h.disasm = {
  sink << "sqdmlsl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sqdmlsl2_v4sv8hvhi( 0b0100111101[10] : index0[2] : rm[4] : 0b0111[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmlsl2_v4sv8hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"516"};

sqdmlsl2_v4sv8hvhi.disasm = {
  sink << "sqdmlsl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqdmlsl_dss( 0b01011110101[11] : rm[5] : 0b101100[6] : rn[5] : rd[5] );
sqdmlsl_dss.var format : {char const*} = {"746"};

sqdmlsl_dss.disasm = {
  sink << "sqdmlsl\t" << DisasmD(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op sqdmlsl_dsvsi( 0b0101111110[10] : index0[1] : rm[5] : 0b0111[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmlsl_dsvsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"449"};

sqdmlsl_dsvsi.disasm = {
  sink << "sqdmlsl\t" << DisasmD(rd) << ", " << DisasmS(rn) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqdmlsl_shh( 0b01011110011[11] : rm[5] : 0b101100[6] : rn[5] : rd[5] );
sqdmlsl_shh.var format : {char const*} = {"782"};

sqdmlsl_shh.disasm = {
  sink << "sqdmlsl\t" << DisasmS(rd) << ", " << DisasmH(rn) << ", " << DisasmH(rm);
};

op sqdmlsl_shvhi( 0b0101111101[10] : index0[2] : rm[4] : 0b0111[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmlsl_shvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"454"};

sqdmlsl_shvhi.disasm = {
  sink << "sqdmlsl\t" << DisasmS(rd) << ", " << DisasmH(rn) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqdmlsl_v2dv2sv2s( 0b00001110101[11] : rm[5] : 0b101100[6] : rn[5] : rd[5] );
sqdmlsl_v2dv2sv2s.var format : {char const*} = {"962"};

sqdmlsl_v2dv2sv2s.disasm = {
  sink << "sqdmlsl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sqdmlsl_v2dv2svsi( 0b0000111110[10] : index0[1] : rm[5] : 0b0111[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmlsl_v2dv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"466"};

sqdmlsl_v2dv2svsi.disasm = {
  sink << "sqdmlsl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqdmlsl_v4sv4hv4h( 0b00001110011[11] : rm[5] : 0b101100[6] : rn[5] : rd[5] );
sqdmlsl_v4sv4hv4h.var format : {char const*} = {"1168"};

sqdmlsl_v4sv4hv4h.disasm = {
  sink << "sqdmlsl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sqdmlsl_v4sv4hvhi( 0b0000111101[10] : index0[2] : rm[4] : 0b0111[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmlsl_v4sv4hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"498"};

sqdmlsl_v4sv4hvhi.disasm = {
  sink << "sqdmlsl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqdmulh_hhh( 0b01011110011[11] : rm[5] : 0b101101[6] : rn[5] : rd[5] );
sqdmulh_hhh.var format : {char const*} = {"753"};

sqdmulh_hhh.disasm = {
  sink << "sqdmulh\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmH(rm);
};

op sqdmulh_hhvhi( 0b0101111101[10] : index0[2] : rm[4] : 0b1100[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmulh_hhvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"451"};

sqdmulh_hhvhi.disasm = {
  sink << "sqdmulh\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqdmulh_sss( 0b01011110101[11] : rm[5] : 0b101101[6] : rn[5] : rd[5] );
sqdmulh_sss.var format : {char const*} = {"810"};

sqdmulh_sss.disasm = {
  sink << "sqdmulh\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op sqdmulh_ssvsi( 0b0101111110[10] : index0[1] : rm[5] : 0b1100[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmulh_ssvsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"460"};

sqdmulh_ssvsi.disasm = {
  sink << "sqdmulh\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqdmulh_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b101101[6] : rn[5] : rd[5] );
sqdmulh_v2sv2sv2s.var format : {char const*} = {"1065"};

sqdmulh_v2sv2sv2s.disasm = {
  sink << "sqdmulh\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sqdmulh_v2sv2svsi( 0b0000111110[10] : index0[1] : rm[5] : 0b1100[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmulh_v2sv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"487"};

sqdmulh_v2sv2svsi.disasm = {
  sink << "sqdmulh\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqdmulh_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b101101[6] : rn[5] : rd[5] );
sqdmulh_v4hv4hv4h.var format : {char const*} = {"1115"};

sqdmulh_v4hv4hv4h.disasm = {
  sink << "sqdmulh\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sqdmulh_v4hv4hvhi( 0b0000111101[10] : index0[2] : rm[4] : 0b1100[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmulh_v4hv4hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"492"};

sqdmulh_v4hv4hvhi.disasm = {
  sink << "sqdmulh\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqdmulh_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b101101[6] : rn[5] : rd[5] );
sqdmulh_v4sv4sv4s.var format : {char const*} = {"1246"};

sqdmulh_v4sv4sv4s.disasm = {
  sink << "sqdmulh\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sqdmulh_v4sv4svsi( 0b0100111110[10] : index0[1] : rm[5] : 0b1100[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmulh_v4sv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"510"};

sqdmulh_v4sv4svsi.disasm = {
  sink << "sqdmulh\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqdmulh_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b101101[6] : rn[5] : rd[5] );
sqdmulh_v8hv8hv8h.var format : {char const*} = {"1428"};

sqdmulh_v8hv8hv8h.disasm = {
  sink << "sqdmulh\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sqdmulh_v8hv8hvhi( 0b0100111101[10] : index0[2] : rm[4] : 0b1100[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmulh_v8hv8hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"524"};

sqdmulh_v8hv8hvhi.disasm = {
  sink << "sqdmulh\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqdmull2_v2dv4sv4s( 0b01001110101[11] : rm[5] : 0b110100[6] : rn[5] : rd[5] );
sqdmull2_v2dv4sv4s.var format : {char const*} = {"982"};

sqdmull2_v2dv4sv4s.disasm = {
  sink << "sqdmull2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sqdmull2_v2dv4svsi( 0b0100111110[10] : index0[1] : rm[5] : 0b1011[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmull2_v2dv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"476"};

sqdmull2_v2dv4svsi.disasm = {
  sink << "sqdmull2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqdmull2_v4sv8hv8h( 0b01001110011[11] : rm[5] : 0b110100[6] : rn[5] : rd[5] );
sqdmull2_v4sv8hv8h.var format : {char const*} = {"1288"};

sqdmull2_v4sv8hv8h.disasm = {
  sink << "sqdmull2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sqdmull2_v4sv8hvhi( 0b0100111101[10] : index0[2] : rm[4] : 0b1011[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmull2_v4sv8hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"517"};

sqdmull2_v4sv8hvhi.disasm = {
  sink << "sqdmull2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqdmull_dss( 0b01011110101[11] : rm[5] : 0b110100[6] : rn[5] : rd[5] );
sqdmull_dss.var format : {char const*} = {"747"};

sqdmull_dss.disasm = {
  sink << "sqdmull\t" << DisasmD(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op sqdmull_dsvsi( 0b0101111110[10] : index0[1] : rm[5] : 0b1011[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmull_dsvsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"450"};

sqdmull_dsvsi.disasm = {
  sink << "sqdmull\t" << DisasmD(rd) << ", " << DisasmS(rn) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqdmull_shh( 0b01011110011[11] : rm[5] : 0b110100[6] : rn[5] : rd[5] );
sqdmull_shh.var format : {char const*} = {"783"};

sqdmull_shh.disasm = {
  sink << "sqdmull\t" << DisasmS(rd) << ", " << DisasmH(rn) << ", " << DisasmH(rm);
};

op sqdmull_shvhi( 0b0101111101[10] : index0[2] : rm[4] : 0b1011[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmull_shvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"455"};

sqdmull_shvhi.disasm = {
  sink << "sqdmull\t" << DisasmS(rd) << ", " << DisasmH(rn) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqdmull_v2dv2sv2s( 0b00001110101[11] : rm[5] : 0b110100[6] : rn[5] : rd[5] );
sqdmull_v2dv2sv2s.var format : {char const*} = {"963"};

sqdmull_v2dv2sv2s.disasm = {
  sink << "sqdmull\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sqdmull_v2dv2svsi( 0b0000111110[10] : index0[1] : rm[5] : 0b1011[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmull_v2dv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"467"};

sqdmull_v2dv2svsi.disasm = {
  sink << "sqdmull\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqdmull_v4sv4hv4h( 0b00001110011[11] : rm[5] : 0b110100[6] : rn[5] : rd[5] );
sqdmull_v4sv4hv4h.var format : {char const*} = {"1169"};

sqdmull_v4sv4hv4h.disasm = {
  sink << "sqdmull\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sqdmull_v4sv4hvhi( 0b0000111101[10] : index0[2] : rm[4] : 0b1011[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqdmull_v4sv4hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"499"};

sqdmull_v4sv4hvhi.disasm = {
  sink << "sqdmull\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqneg_bb( 0b0111111000100000011110[22] : rn[5] : rd[5] );
sqneg_bb.var format : {char const*} = {"2162"};

sqneg_bb.disasm = {
  sink << "sqneg\t" << DisasmB(rd) << ", " << DisasmB(rn);
};

op sqneg_dd( 0b0111111011100000011110[22] : rn[5] : rd[5] );
sqneg_dd.var format : {char const*} = {"2206"};

sqneg_dd.disasm = {
  sink << "sqneg\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op sqneg_hh( 0b0111111001100000011110[22] : rn[5] : rd[5] );
sqneg_hh.var format : {char const*} = {"2238"};

sqneg_hh.disasm = {
  sink << "sqneg\t" << DisasmH(rd) << ", " << DisasmH(rn);
};

op sqneg_ss( 0b0111111010100000011110[22] : rn[5] : rd[5] );
sqneg_ss.var format : {char const*} = {"2292"};

sqneg_ss.disasm = {
  sink << "sqneg\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op sqneg_v16b16b( 0b0110111000100000011110[22] : rn[5] : rd[5] );
sqneg_v16b16b.var format : {char const*} = {"2340"};

sqneg_v16b16b.disasm = {
  sink << "sqneg\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op sqneg_v2d2d( 0b0110111011100000011110[22] : rn[5] : rd[5] );
sqneg_v2d2d.var format : {char const*} = {"2382"};

sqneg_v2d2d.disasm = {
  sink << "sqneg\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op sqneg_v2s2s( 0b0010111010100000011110[22] : rn[5] : rd[5] );
sqneg_v2s2s.var format : {char const*} = {"2439"};

sqneg_v2s2s.disasm = {
  sink << "sqneg\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op sqneg_v4h4h( 0b0010111001100000011110[22] : rn[5] : rd[5] );
sqneg_v4h4h.var format : {char const*} = {"2466"};

sqneg_v4h4h.disasm = {
  sink << "sqneg\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1);
};

op sqneg_v4s4s( 0b0110111010100000011110[22] : rn[5] : rd[5] );
sqneg_v4s4s.var format : {char const*} = {"2522"};

sqneg_v4s4s.disasm = {
  sink << "sqneg\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op sqneg_v8b8b( 0b0010111000100000011110[22] : rn[5] : rd[5] );
sqneg_v8b8b.var format : {char const*} = {"2555"};

sqneg_v8b8b.disasm = {
  sink << "sqneg\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
};

op sqneg_v8hv8h( 0b0110111001100000011110[22] : rn[5] : rd[5] );
sqneg_v8hv8h.var format : {char const*} = {"2584"};

sqneg_v8hv8h.disasm = {
  sink << "sqneg\t" << DisasmTV(rd,8,1) <<  ", " << DisasmTV(rn,8,1);
};

op sqrdmulh_hhh( 0b01111110011[11] : rm[5] : 0b101101[6] : rn[5] : rd[5] );
sqrdmulh_hhh.var format : {char const*} = {"754"};

sqrdmulh_hhh.disasm = {
  sink << "sqrdmulh\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmH(rm);
};

op sqrdmulh_hhvhi( 0b0101111101[10] : index0[2] : rm[4] : 0b1101[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqrdmulh_hhvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"452"};

sqrdmulh_hhvhi.disasm = {
  sink << "sqrdmulh\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqrdmulh_sss( 0b01111110101[11] : rm[5] : 0b101101[6] : rn[5] : rd[5] );
sqrdmulh_sss.var format : {char const*} = {"811"};

sqrdmulh_sss.disasm = {
  sink << "sqrdmulh\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op sqrdmulh_ssvsi( 0b0101111110[10] : index0[1] : rm[5] : 0b1101[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqrdmulh_ssvsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"461"};

sqrdmulh_ssvsi.disasm = {
  sink << "sqrdmulh\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqrdmulh_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b101101[6] : rn[5] : rd[5] );
sqrdmulh_v2sv2sv2s.var format : {char const*} = {"1066"};

sqrdmulh_v2sv2sv2s.disasm = {
  sink << "sqrdmulh\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sqrdmulh_v2sv2svsi( 0b0000111110[10] : index0[1] : rm[5] : 0b1101[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqrdmulh_v2sv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"488"};

sqrdmulh_v2sv2svsi.disasm = {
  sink << "sqrdmulh\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqrdmulh_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b101101[6] : rn[5] : rd[5] );
sqrdmulh_v4hv4hv4h.var format : {char const*} = {"1116"};

sqrdmulh_v4hv4hv4h.disasm = {
  sink << "sqrdmulh\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sqrdmulh_v4hv4hvhi( 0b0000111101[10] : index0[2] : rm[4] : 0b1101[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqrdmulh_v4hv4hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"493"};

sqrdmulh_v4hv4hvhi.disasm = {
  sink << "sqrdmulh\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqrdmulh_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b101101[6] : rn[5] : rd[5] );
sqrdmulh_v4sv4sv4s.var format : {char const*} = {"1247"};

sqrdmulh_v4sv4sv4s.disasm = {
  sink << "sqrdmulh\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sqrdmulh_v4sv4svsi( 0b0100111110[10] : index0[1] : rm[5] : 0b1101[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqrdmulh_v4sv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"511"};

sqrdmulh_v4sv4svsi.disasm = {
  sink << "sqrdmulh\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op sqrdmulh_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b101101[6] : rn[5] : rd[5] );
sqrdmulh_v8hv8hv8h.var format : {char const*} = {"1429"};

sqrdmulh_v8hv8hv8h.disasm = {
  sink << "sqrdmulh\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sqrdmulh_v8hv8hvhi( 0b0100111101[10] : index0[2] : rm[4] : 0b1101[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
sqrdmulh_v8hv8hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"525"};

sqrdmulh_v8hv8hvhi.disasm = {
  sink << "sqrdmulh\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op sqrshl_bbb( 0b01011110001[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
sqrshl_bbb.var format : {char const*} = {"696"};

sqrshl_bbb.disasm = {
  sink << "sqrshl\t" << DisasmB(rd) << ", " << DisasmB(rn) << ", " << DisasmB(rm);
};

op sqrshl_ddd( 0b01011110111[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
sqrshl_ddd.var format : {char const*} = {"733"};

sqrshl_ddd.disasm = {
  sink << "sqrshl\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op sqrshl_hhh( 0b01011110011[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
sqrshl_hhh.var format : {char const*} = {"755"};

sqrshl_hhh.disasm = {
  sink << "sqrshl\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmH(rm);
};

op sqrshl_sss( 0b01011110101[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
sqrshl_sss.var format : {char const*} = {"812"};

sqrshl_sss.disasm = {
  sink << "sqrshl\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op sqrshl_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
sqrshl_v16bv16bv16b.var format : {char const*} = {"852"};

sqrshl_v16bv16bv16b.disasm = {
  sink << "sqrshl\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op sqrshl_v2dv2dv2d( 0b01001110111[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
sqrshl_v2dv2dv2d.var format : {char const*} = {"927"};

sqrshl_v2dv2dv2d.disasm = {
  sink << "sqrshl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op sqrshl_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
sqrshl_v2sv2sv2s.var format : {char const*} = {"1067"};

sqrshl_v2sv2sv2s.disasm = {
  sink << "sqrshl\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sqrshl_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
sqrshl_v4hv4hv4h.var format : {char const*} = {"1117"};

sqrshl_v4hv4hv4h.disasm = {
  sink << "sqrshl\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sqrshl_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
sqrshl_v4sv4sv4s.var format : {char const*} = {"1248"};

sqrshl_v4sv4sv4s.disasm = {
  sink << "sqrshl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sqrshl_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
sqrshl_v8bv8bv8b.var format : {char const*} = {"1326"};

sqrshl_v8bv8bv8b.disasm = {
  sink << "sqrshl\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op sqrshl_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
sqrshl_v8hv8hv8h.var format : {char const*} = {"1430"};

sqrshl_v8hv8hv8h.disasm = {
  sink << "sqrshl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sqrshrn2_v16b8hi( 0b0100111100001[13] : lro[3] : 0b100111[6] : rn[5] : rd[5] );
sqrshrn2_v16b8hi.var format : {char const*} = {"1959"}, shift : {unsigned} = {8 - lro};

sqrshrn2_v16b8hi.disasm = {
  sink << "sqrshrn2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op sqrshrn2_v4s2di( 0b01001111001[11] : lro[5] : 0b100111[6] : rn[5] : rd[5] );
sqrshrn2_v4s2di.var format : {char const*} = {"1151"}, shift : {unsigned} = {32 - lro};

sqrshrn2_v4s2di.disasm = {
  sink << "sqrshrn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op sqrshrn2_v8h4si( 0b010011110001[12] : lro[4] : 0b100111[6] : rn[5] : rd[5] );
sqrshrn2_v8h4si.var format : {char const*} = {"1865"}, shift : {unsigned} = {16 - lro};

sqrshrn2_v8h4si.disasm = {
  sink << "sqrshrn2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op sqrshrn_bhi( 0b0101111100001[13] : lro[3] : 0b100111[6] : rn[5] : rd[5] );
sqrshrn_bhi.var format : {char const*} = {"1935"}, shift : {unsigned} = {8 - lro};

sqrshrn_bhi.disasm = {
  sink << "sqrshrn\t" << DisasmB(rd) << ", " << DisasmH(rn) << ", " << DisasmI(shift);
};

op sqrshrn_hsi( 0b010111110001[12] : lro[4] : 0b100111[6] : rn[5] : rd[5] );
sqrshrn_hsi.var format : {char const*} = {"1831"}, shift : {unsigned} = {16 - lro};

sqrshrn_hsi.disasm = {
  sink << "sqrshrn\t" << DisasmH(rd) << ", " << DisasmS(rn) << ", " << DisasmI(shift);
};

op sqrshrn_sdi( 0b01011111001[11] : lro[5] : 0b100111[6] : rn[5] : rd[5] );
sqrshrn_sdi.var format : {char const*} = {"775"}, shift : {unsigned} = {32 - lro};

sqrshrn_sdi.disasm = {
  sink << "sqrshrn\t" << DisasmS(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op sqrshrn_v2s2di( 0b00001111001[11] : lro[5] : 0b100111[6] : rn[5] : rd[5] );
sqrshrn_v2s2di.var format : {char const*} = {"993"}, shift : {unsigned} = {32 - lro};

sqrshrn_v2s2di.disasm = {
  sink << "sqrshrn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op sqrshrn_v4h4si( 0b000011110001[12] : lro[4] : 0b100111[6] : rn[5] : rd[5] );
sqrshrn_v4h4si.var format : {char const*} = {"1853"}, shift : {unsigned} = {16 - lro};

sqrshrn_v4h4si.disasm = {
  sink << "sqrshrn\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op sqrshrn_v8b8hi( 0b0000111100001[13] : lro[3] : 0b100111[6] : rn[5] : rd[5] );
sqrshrn_v8b8hi.var format : {char const*} = {"1986"}, shift : {unsigned} = {8 - lro};

sqrshrn_v8b8hi.disasm = {
  sink << "sqrshrn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op sqrshrun2_v16b8hi( 0b0110111100001[13] : lro[3] : 0b100011[6] : rn[5] : rd[5] );
sqrshrun2_v16b8hi.var format : {char const*} = {"1960"}, shift : {unsigned} = {8 - lro};

sqrshrun2_v16b8hi.disasm = {
  sink << "sqrshrun2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op sqrshrun2_v4s2di( 0b01101111001[11] : lro[5] : 0b100011[6] : rn[5] : rd[5] );
sqrshrun2_v4s2di.var format : {char const*} = {"1152"}, shift : {unsigned} = {32 - lro};

sqrshrun2_v4s2di.disasm = {
  sink << "sqrshrun2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op sqrshrun2_v8h4si( 0b011011110001[12] : lro[4] : 0b100011[6] : rn[5] : rd[5] );
sqrshrun2_v8h4si.var format : {char const*} = {"1866"}, shift : {unsigned} = {16 - lro};

sqrshrun2_v8h4si.disasm = {
  sink << "sqrshrun2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op sqrshrun_bhi( 0b0111111100001[13] : lro[3] : 0b100011[6] : rn[5] : rd[5] );
sqrshrun_bhi.var format : {char const*} = {"1936"}, shift : {unsigned} = {8 - lro};

sqrshrun_bhi.disasm = {
  sink << "sqrshrun\t" << DisasmB(rd) << ", " << DisasmH(rn) << ", " << DisasmI(shift);
};

op sqrshrun_hsi( 0b011111110001[12] : lro[4] : 0b100011[6] : rn[5] : rd[5] );
sqrshrun_hsi.var format : {char const*} = {"1832"}, shift : {unsigned} = {16 - lro};

sqrshrun_hsi.disasm = {
  sink << "sqrshrun\t" << DisasmH(rd) << ", " << DisasmS(rn) << ", " << DisasmI(shift);
};

op sqrshrun_sdi( 0b01111111001[11] : lro[5] : 0b100011[6] : rn[5] : rd[5] );
sqrshrun_sdi.var format : {char const*} = {"776"}, shift : {unsigned} = {32 - lro};

sqrshrun_sdi.disasm = {
  sink << "sqrshrun\t" << DisasmS(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op sqrshrun_v2s2di( 0b00101111001[11] : lro[5] : 0b100011[6] : rn[5] : rd[5] );
sqrshrun_v2s2di.var format : {char const*} = {"994"}, shift : {unsigned} = {32 - lro};

sqrshrun_v2s2di.disasm = {
  sink << "sqrshrun\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op sqrshrun_v4h4si( 0b001011110001[12] : lro[4] : 0b100011[6] : rn[5] : rd[5] );
sqrshrun_v4h4si.var format : {char const*} = {"1854"}, shift : {unsigned} = {16 - lro};

sqrshrun_v4h4si.disasm = {
  sink << "sqrshrun\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op sqrshrun_v8b8hi( 0b0010111100001[13] : lro[3] : 0b100011[6] : rn[5] : rd[5] );
sqrshrun_v8b8hi.var format : {char const*} = {"1987"}, shift : {unsigned} = {8 - lro};

sqrshrun_v8b8hi.disasm = {
  sink << "sqrshrun\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op sqshl_bbb( 0b01011110001[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
sqshl_bbb.var format : {char const*} = {"697"};

sqshl_bbb.disasm = {
  sink << "sqshl\t" << DisasmB(rd) << ", " << DisasmB(rn) << ", " << DisasmB(rm);
};

op sqshl_bbi( 0b0101111100001[13] : shift[3] : 0b011101[6] : rn[5] : rd[5] );
sqshl_bbi.var format : {char const*} = {"1932"};

sqshl_bbi.disasm = {
  sink << "sqshl\t" << DisasmB(rd) << ", " << DisasmB(rn) << ", " << DisasmI(shift);
};

op sqshl_ddd( 0b01011110111[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
sqshl_ddd.var format : {char const*} = {"734"};

sqshl_ddd.disasm = {
  sink << "sqshl\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op sqshl_ddi( 0b0101111101[10] : shift[6] : 0b011101[6] : rn[5] : rd[5] );
sqshl_ddi.var format : {char const*} = {"540"};

sqshl_ddi.disasm = {
  sink << "sqshl\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op sqshl_hhh( 0b01011110011[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
sqshl_hhh.var format : {char const*} = {"756"};

sqshl_hhh.disasm = {
  sink << "sqshl\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmH(rm);
};

op sqshl_hhi( 0b010111110001[12] : shift[4] : 0b011101[6] : rn[5] : rd[5] );
sqshl_hhi.var format : {char const*} = {"1828"};

sqshl_hhi.disasm = {
  sink << "sqshl\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmI(shift);
};

op sqshl_ssi( 0b01011111001[11] : shift[5] : 0b011101[6] : rn[5] : rd[5] );
sqshl_ssi.var format : {char const*} = {"787"};

sqshl_ssi.disasm = {
  sink << "sqshl\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmI(shift);
};

op sqshl_sss( 0b01011110101[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
sqshl_sss.var format : {char const*} = {"813"};

sqshl_sss.disasm = {
  sink << "sqshl\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op sqshl_v16b16bi( 0b0100111100001[13] : imm[3] : 0b011101[6] : rn[5] : rd[5] );
sqshl_v16b16bi.var format : {char const*} = {"1945"};

sqshl_v16b16bi.disasm = {
  sink << "sqshl\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(imm);
};

op sqshl_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
sqshl_v16bv16bv16b.var format : {char const*} = {"853"};

sqshl_v16bv16bv16b.disasm = {
  sink << "sqshl\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op sqshl_v2d2di( 0b0100111101[10] : imm[6] : 0b011101[6] : rn[5] : rd[5] );
sqshl_v2d2di.var format : {char const*} = {"558"};

sqshl_v2d2di.disasm = {
  sink << "sqshl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(imm);
};

op sqshl_v2dv2dv2d( 0b01001110111[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
sqshl_v2dv2dv2d.var format : {char const*} = {"928"};

sqshl_v2dv2dv2d.disasm = {
  sink << "sqshl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op sqshl_v2s2si( 0b00001111001[11] : imm[5] : 0b011101[6] : rn[5] : rd[5] );
sqshl_v2s2si.var format : {char const*} = {"1008"};

sqshl_v2s2si.disasm = {
  sink << "sqshl\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(imm);
};

op sqshl_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
sqshl_v2sv2sv2s.var format : {char const*} = {"1068"};

sqshl_v2sv2sv2s.disasm = {
  sink << "sqshl\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sqshl_v4h4hi( 0b000011110001[12] : imm[4] : 0b011101[6] : rn[5] : rd[5] );
sqshl_v4h4hi.var format : {char const*} = {"1839"};

sqshl_v4h4hi.disasm = {
  sink << "sqshl\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(imm);
};

op sqshl_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
sqshl_v4hv4hv4h.var format : {char const*} = {"1118"};

sqshl_v4hv4hv4h.disasm = {
  sink << "sqshl\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sqshl_v4s4si( 0b01001111001[11] : imm[5] : 0b011101[6] : rn[5] : rd[5] );
sqshl_v4s4si.var format : {char const*} = {"1183"};

sqshl_v4s4si.disasm = {
  sink << "sqshl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(imm);
};

op sqshl_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
sqshl_v4sv4sv4s.var format : {char const*} = {"1249"};

sqshl_v4sv4sv4s.disasm = {
  sink << "sqshl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sqshl_v8b8bi( 0b0000111100001[13] : imm[3] : 0b011101[6] : rn[5] : rd[5] );
sqshl_v8b8bi.var format : {char const*} = {"1972"};

sqshl_v8b8bi.disasm = {
  sink << "sqshl\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(imm);
};

op sqshl_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
sqshl_v8bv8bv8b.var format : {char const*} = {"1327"};

sqshl_v8bv8bv8b.disasm = {
  sink << "sqshl\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op sqshl_v8h8hi( 0b010011110001[12] : imm[4] : 0b011101[6] : rn[5] : rd[5] );
sqshl_v8h8hi.var format : {char const*} = {"1873"};

sqshl_v8h8hi.disasm = {
  sink << "sqshl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(imm);
};

op sqshl_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
sqshl_v8hv8hv8h.var format : {char const*} = {"1431"};

sqshl_v8hv8hv8h.disasm = {
  sink << "sqshl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sqshlu_bbi( 0b0111111100001[13] : shift[3] : 0b011001[6] : rn[5] : rd[5] );
sqshlu_bbi.var format : {char const*} = {"1933"};

sqshlu_bbi.disasm = {
  sink << "sqshlu\t" << DisasmB(rd) << ", " << DisasmB(rn) << ", " << DisasmI(shift);
};

op sqshlu_ddi( 0b0111111101[10] : shift[6] : 0b011001[6] : rn[5] : rd[5] );
sqshlu_ddi.var format : {char const*} = {"541"};

sqshlu_ddi.disasm = {
  sink << "sqshlu\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op sqshlu_hhi( 0b011111110001[12] : shift[4] : 0b011001[6] : rn[5] : rd[5] );
sqshlu_hhi.var format : {char const*} = {"1829"};

sqshlu_hhi.disasm = {
  sink << "sqshlu\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmI(shift);
};

op sqshlu_ssi( 0b01111111001[11] : shift[5] : 0b011001[6] : rn[5] : rd[5] );
sqshlu_ssi.var format : {char const*} = {"788"};

sqshlu_ssi.disasm = {
  sink << "sqshlu\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmI(shift);
};

op sqshlu_v16b16bi( 0b0110111100001[13] : imm[3] : 0b011001[6] : rn[5] : rd[5] );
sqshlu_v16b16bi.var format : {char const*} = {"1946"};

sqshlu_v16b16bi.disasm = {
  sink << "sqshlu\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(imm);
};

op sqshlu_v2d2di( 0b0110111101[10] : imm[6] : 0b011001[6] : rn[5] : rd[5] );
sqshlu_v2d2di.var format : {char const*} = {"559"};

sqshlu_v2d2di.disasm = {
  sink << "sqshlu\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(imm);
};

op sqshlu_v2s2si( 0b00101111001[11] : imm[5] : 0b011001[6] : rn[5] : rd[5] );
sqshlu_v2s2si.var format : {char const*} = {"1009"};

sqshlu_v2s2si.disasm = {
  sink << "sqshlu\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(imm);
};

op sqshlu_v4h4hi( 0b001011110001[12] : imm[4] : 0b011001[6] : rn[5] : rd[5] );
sqshlu_v4h4hi.var format : {char const*} = {"1840"};

sqshlu_v4h4hi.disasm = {
  sink << "sqshlu\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(imm);
};

op sqshlu_v4s4si( 0b01101111001[11] : imm[5] : 0b011001[6] : rn[5] : rd[5] );
sqshlu_v4s4si.var format : {char const*} = {"1184"};

sqshlu_v4s4si.disasm = {
  sink << "sqshlu\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(imm);
};

op sqshlu_v8b8bi( 0b0010111100001[13] : imm[3] : 0b011001[6] : rn[5] : rd[5] );
sqshlu_v8b8bi.var format : {char const*} = {"1973"};

sqshlu_v8b8bi.disasm = {
  sink << "sqshlu\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(imm);
};

op sqshlu_v8h8hi( 0b011011110001[12] : imm[4] : 0b011001[6] : rn[5] : rd[5] );
sqshlu_v8h8hi.var format : {char const*} = {"1874"};

sqshlu_v8h8hi.disasm = {
  sink << "sqshlu\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(imm);
};

op sqshrn2_v16b8hi( 0b0100111100001[13] : lro[3] : 0b100101[6] : rn[5] : rd[5] );
sqshrn2_v16b8hi.var format : {char const*} = {"1961"}, shift : {unsigned} = {8 - lro};

sqshrn2_v16b8hi.disasm = {
  sink << "sqshrn2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op sqshrn2_v4s2di( 0b01001111001[11] : lro[5] : 0b100101[6] : rn[5] : rd[5] );
sqshrn2_v4s2di.var format : {char const*} = {"1153"}, shift : {unsigned} = {32 - lro};

sqshrn2_v4s2di.disasm = {
  sink << "sqshrn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op sqshrn2_v8h4si( 0b010011110001[12] : lro[4] : 0b100101[6] : rn[5] : rd[5] );
sqshrn2_v8h4si.var format : {char const*} = {"1867"}, shift : {unsigned} = {16 - lro};

sqshrn2_v8h4si.disasm = {
  sink << "sqshrn2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op sqshrn_bhi( 0b0101111100001[13] : lro[3] : 0b100101[6] : rn[5] : rd[5] );
sqshrn_bhi.var format : {char const*} = {"1937"}, shift : {unsigned} = {8 - lro};

sqshrn_bhi.disasm = {
  sink << "sqshrn\t" << DisasmB(rd) << ", " << DisasmH(rn) << ", " << DisasmI(shift);
};

op sqshrn_hsi( 0b010111110001[12] : lro[4] : 0b100101[6] : rn[5] : rd[5] );
sqshrn_hsi.var format : {char const*} = {"1833"}, shift : {unsigned} = {16 - lro};

sqshrn_hsi.disasm = {
  sink << "sqshrn\t" << DisasmH(rd) << ", " << DisasmS(rn) << ", " << DisasmI(shift);
};

op sqshrn_sdi( 0b01011111001[11] : lro[5] : 0b100101[6] : rn[5] : rd[5] );
sqshrn_sdi.var format : {char const*} = {"777"}, shift : {unsigned} = {32 - lro};

sqshrn_sdi.disasm = {
  sink << "sqshrn\t" << DisasmS(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op sqshrn_v2s2di( 0b00001111001[11] : lro[5] : 0b100101[6] : rn[5] : rd[5] );
sqshrn_v2s2di.var format : {char const*} = {"995"}, shift : {unsigned} = {32 - lro};

sqshrn_v2s2di.disasm = {
  sink << "sqshrn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op sqshrn_v4h4si( 0b000011110001[12] : lro[4] : 0b100101[6] : rn[5] : rd[5] );
sqshrn_v4h4si.var format : {char const*} = {"1855"}, shift : {unsigned} = {16 - lro};

sqshrn_v4h4si.disasm = {
  sink << "sqshrn\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op sqshrn_v8b8hi( 0b0000111100001[13] : lro[3] : 0b100101[6] : rn[5] : rd[5] );
sqshrn_v8b8hi.var format : {char const*} = {"1988"}, shift : {unsigned} = {8 - lro};

sqshrn_v8b8hi.disasm = {
  sink << "sqshrn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op sqshrun2_v16b8hi( 0b0110111100001[13] : lro[3] : 0b100001[6] : rn[5] : rd[5] );
sqshrun2_v16b8hi.var format : {char const*} = {"1962"}, shift : {unsigned} = {8 - lro};

sqshrun2_v16b8hi.disasm = {
  sink << "sqshrun2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op sqshrun2_v4s2di( 0b01101111001[11] : lro[5] : 0b100001[6] : rn[5] : rd[5] );
sqshrun2_v4s2di.var format : {char const*} = {"1154"}, shift : {unsigned} = {32 - lro};

sqshrun2_v4s2di.disasm = {
  sink << "sqshrun2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op sqshrun2_v8h4si( 0b011011110001[12] : lro[4] : 0b100001[6] : rn[5] : rd[5] );
sqshrun2_v8h4si.var format : {char const*} = {"1868"}, shift : {unsigned} = {16 - lro};

sqshrun2_v8h4si.disasm = {
  sink << "sqshrun2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op sqshrun_bhi( 0b0111111100001[13] : lro[3] : 0b100001[6] : rn[5] : rd[5] );
sqshrun_bhi.var format : {char const*} = {"1938"}, shift : {unsigned} = {8 - lro};

sqshrun_bhi.disasm = {
  sink << "sqshrun\t" << DisasmB(rd) << ", " << DisasmH(rn) << ", " << DisasmI(shift);
};

op sqshrun_hsi( 0b011111110001[12] : lro[4] : 0b100001[6] : rn[5] : rd[5] );
sqshrun_hsi.var format : {char const*} = {"1834"}, shift : {unsigned} = {16 - lro};

sqshrun_hsi.disasm = {
  sink << "sqshrun\t" << DisasmH(rd) << ", " << DisasmS(rn) << ", " << DisasmI(shift);
};

op sqshrun_sdi( 0b01111111001[11] : lro[5] : 0b100001[6] : rn[5] : rd[5] );
sqshrun_sdi.var format : {char const*} = {"778"}, shift : {unsigned} = {32 - lro};

sqshrun_sdi.disasm = {
  sink << "sqshrun\t" << DisasmS(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op sqshrun_v2s2di( 0b00101111001[11] : lro[5] : 0b100001[6] : rn[5] : rd[5] );
sqshrun_v2s2di.var format : {char const*} = {"996"}, shift : {unsigned} = {32 - lro};

sqshrun_v2s2di.disasm = {
  sink << "sqshrun\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op sqshrun_v4h4si( 0b001011110001[12] : lro[4] : 0b100001[6] : rn[5] : rd[5] );
sqshrun_v4h4si.var format : {char const*} = {"1856"}, shift : {unsigned} = {16 - lro};

sqshrun_v4h4si.disasm = {
  sink << "sqshrun\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op sqshrun_v8b8hi( 0b0010111100001[13] : lro[3] : 0b100001[6] : rn[5] : rd[5] );
sqshrun_v8b8hi.var format : {char const*} = {"1989"}, shift : {unsigned} = {8 - lro};

sqshrun_v8b8hi.disasm = {
  sink << "sqshrun\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op sqsub_bbb( 0b01011110001[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
sqsub_bbb.var format : {char const*} = {"698"};

sqsub_bbb.disasm = {
  sink << "sqsub\t" << DisasmB(rd) << ", " << DisasmB(rn) << ", " << DisasmB(rm);
};

op sqsub_ddd( 0b01011110111[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
sqsub_ddd.var format : {char const*} = {"735"};

sqsub_ddd.disasm = {
  sink << "sqsub\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op sqsub_hhh( 0b01011110011[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
sqsub_hhh.var format : {char const*} = {"757"};

sqsub_hhh.disasm = {
  sink << "sqsub\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmH(rm);
};

op sqsub_sss( 0b01011110101[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
sqsub_sss.var format : {char const*} = {"814"};

sqsub_sss.disasm = {
  sink << "sqsub\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op sqsub_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
sqsub_v16bv16bv16b.var format : {char const*} = {"854"};

sqsub_v16bv16bv16b.disasm = {
  sink << "sqsub\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op sqsub_v2dv2dv2d( 0b01001110111[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
sqsub_v2dv2dv2d.var format : {char const*} = {"929"};

sqsub_v2dv2dv2d.disasm = {
  sink << "sqsub\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op sqsub_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
sqsub_v2sv2sv2s.var format : {char const*} = {"1069"};

sqsub_v2sv2sv2s.disasm = {
  sink << "sqsub\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sqsub_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
sqsub_v4hv4hv4h.var format : {char const*} = {"1119"};

sqsub_v4hv4hv4h.disasm = {
  sink << "sqsub\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sqsub_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
sqsub_v4sv4sv4s.var format : {char const*} = {"1250"};

sqsub_v4sv4sv4s.disasm = {
  sink << "sqsub\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sqsub_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
sqsub_v8bv8bv8b.var format : {char const*} = {"1328"};

sqsub_v8bv8bv8b.disasm = {
  sink << "sqsub\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op sqsub_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
sqsub_v8hv8hv8h.var format : {char const*} = {"1432"};

sqsub_v8hv8hv8h.disasm = {
  sink << "sqsub\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sqxtn2_v16b8h( 0b0100111000100001010010[22] : rn[5] : rd[5] );
sqxtn2_v16b8h.var format : {char const*} = {"2348"};

sqxtn2_v16b8h.disasm = {
  sink << "sqxtn2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1);
};

op sqxtn2_v4s2d( 0b0100111010100001010010[22] : rn[5] : rd[5] );
sqxtn2_v4s2d.var format : {char const*} = {"2485"};

sqxtn2_v4s2d.disasm = {
  sink << "sqxtn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3);
};

op sqxtn2_v8h4s( 0b0100111001100001010010[22] : rn[5] : rd[5] );
sqxtn2_v8h4s.var format : {char const*} = {"2573"};

sqxtn2_v8h4s.disasm = {
  sink << "sqxtn2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2);
};

op sqxtn_bh( 0b0101111000100001010010[22] : rn[5] : rd[5] );
sqxtn_bh.var format : {char const*} = {"2165"};

sqxtn_bh.disasm = {
  sink << "sqxtn\t" << DisasmB(rd) << ", " << DisasmH(rn);
};

op sqxtn_hs( 0b0101111001100001010010[22] : rn[5] : rd[5] );
sqxtn_hs.var format : {char const*} = {"2242"};

sqxtn_hs.disasm = {
  sink << "sqxtn\t" << DisasmH(rd) << ", " << DisasmS(rn);
};

op sqxtn_sd( 0b0101111010100001010010[22] : rn[5] : rd[5] );
sqxtn_sd.var format : {char const*} = {"2261"};

sqxtn_sd.disasm = {
  sink << "sqxtn\t" << DisasmS(rd) << ", " << DisasmD(rn);
};

op sqxtn_v2s2d( 0b0000111010100001010010[22] : rn[5] : rd[5] );
sqxtn_v2s2d.var format : {char const*} = {"2406"};

sqxtn_v2s2d.disasm = {
  sink << "sqxtn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3);
};

op sqxtn_v4h4s( 0b0000111001100001010010[22] : rn[5] : rd[5] );
sqxtn_v4h4s.var format : {char const*} = {"2475"};

sqxtn_v4h4s.disasm = {
  sink << "sqxtn\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2);
};

op sqxtn_v8b8h( 0b0000111000100001010010[22] : rn[5] : rd[5] );
sqxtn_v8b8h.var format : {char const*} = {"2563"};

sqxtn_v8b8h.disasm = {
  sink << "sqxtn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1);
};

op sqxtun2_v16b8h( 0b0110111000100001001010[22] : rn[5] : rd[5] );
sqxtun2_v16b8h.var format : {char const*} = {"2349"};

sqxtun2_v16b8h.disasm = {
  sink << "sqxtun2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1);
};

op sqxtun2_v4s2d( 0b0110111010100001001010[22] : rn[5] : rd[5] );
sqxtun2_v4s2d.var format : {char const*} = {"2486"};

sqxtun2_v4s2d.disasm = {
  sink << "sqxtun2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3);
};

op sqxtun2_v8h4s( 0b0110111001100001001010[22] : rn[5] : rd[5] );
sqxtun2_v8h4s.var format : {char const*} = {"2574"};

sqxtun2_v8h4s.disasm = {
  sink << "sqxtun2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2);
};

op sqxtun_bh( 0b0111111000100001001010[22] : rn[5] : rd[5] );
sqxtun_bh.var format : {char const*} = {"2166"};

sqxtun_bh.disasm = {
  sink << "sqxtun\t" << DisasmB(rd) << ", " << DisasmH(rn);
};

op sqxtun_hs( 0b0111111001100001001010[22] : rn[5] : rd[5] );
sqxtun_hs.var format : {char const*} = {"2243"};

sqxtun_hs.disasm = {
  sink << "sqxtun\t" << DisasmH(rd) << ", " << DisasmS(rn);
};

op sqxtun_sd( 0b0111111010100001001010[22] : rn[5] : rd[5] );
sqxtun_sd.var format : {char const*} = {"2262"};

sqxtun_sd.disasm = {
  sink << "sqxtun\t" << DisasmS(rd) << ", " << DisasmD(rn);
};

op sqxtun_v2s2d( 0b0010111010100001001010[22] : rn[5] : rd[5] );
sqxtun_v2s2d.var format : {char const*} = {"2407"};

sqxtun_v2s2d.disasm = {
  sink << "sqxtun\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3);
};

op sqxtun_v4h4s( 0b0010111001100001001010[22] : rn[5] : rd[5] );
sqxtun_v4h4s.var format : {char const*} = {"2476"};

sqxtun_v4h4s.disasm = {
  sink << "sqxtun\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2);
};

op sqxtun_v8b8h( 0b0010111000100001001010[22] : rn[5] : rd[5] );
sqxtun_v8b8h.var format : {char const*} = {"2564"};

sqxtun_v8b8h.disasm = {
  sink << "sqxtun\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1);
};

op srhadd_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b000101[6] : rn[5] : rd[5] );
srhadd_v16bv16bv16b.var format : {char const*} = {"855"};

srhadd_v16bv16bv16b.disasm = {
  sink << "srhadd\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op srhadd_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b000101[6] : rn[5] : rd[5] );
srhadd_v2sv2sv2s.var format : {char const*} = {"1070"};

srhadd_v2sv2sv2s.disasm = {
  sink << "srhadd\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op srhadd_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b000101[6] : rn[5] : rd[5] );
srhadd_v4hv4hv4h.var format : {char const*} = {"1120"};

srhadd_v4hv4hv4h.disasm = {
  sink << "srhadd\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op srhadd_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b000101[6] : rn[5] : rd[5] );
srhadd_v4sv4sv4s.var format : {char const*} = {"1251"};

srhadd_v4sv4sv4s.disasm = {
  sink << "srhadd\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op srhadd_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b000101[6] : rn[5] : rd[5] );
srhadd_v8bv8bv8b.var format : {char const*} = {"1329"};

srhadd_v8bv8bv8b.disasm = {
  sink << "srhadd\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op srhadd_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b000101[6] : rn[5] : rd[5] );
srhadd_v8hv8hv8h.var format : {char const*} = {"1433"};

srhadd_v8hv8hv8h.disasm = {
  sink << "srhadd\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sri_ddi( 0b0111111101[10] : lro[6] : 0b010001[6] : rn[5] : rd[5] );
sri_ddi.var format : {char const*} = {"542"}, shift : {unsigned} = {64 - lro};

sri_ddi.disasm = {
  sink << "sri\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op sri_v16b16bi( 0b0110111100001[13] : lro[3] : 0b010001[6] : rn[5] : rd[5] );
sri_v16b16bi.var format : {char const*} = {"1947"}, shift : {unsigned} = {8 - lro};

sri_v16b16bi.disasm = {
  sink << "sri\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(shift);
};

op sri_v2d2di( 0b0110111101[10] : lro[6] : 0b010001[6] : rn[5] : rd[5] );
sri_v2d2di.var format : {char const*} = {"560"}, shift : {unsigned} = {64 - lro};

sri_v2d2di.disasm = {
  sink << "sri\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op sri_v2s2si( 0b00101111001[11] : lro[5] : 0b010001[6] : rn[5] : rd[5] );
sri_v2s2si.var format : {char const*} = {"1010"}, shift : {unsigned} = {32 - lro};

sri_v2s2si.disasm = {
  sink << "sri\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(shift);
};

op sri_v4h4hi( 0b001011110001[12] : lro[4] : 0b010001[6] : rn[5] : rd[5] );
sri_v4h4hi.var format : {char const*} = {"1841"}, shift : {unsigned} = {16 - lro};

sri_v4h4hi.disasm = {
  sink << "sri\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(shift);
};

op sri_v4s4si( 0b01101111001[11] : lro[5] : 0b010001[6] : rn[5] : rd[5] );
sri_v4s4si.var format : {char const*} = {"1185"}, shift : {unsigned} = {32 - lro};

sri_v4s4si.disasm = {
  sink << "sri\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op sri_v8b8bi( 0b0010111100001[13] : lro[3] : 0b010001[6] : rn[5] : rd[5] );
sri_v8b8bi.var format : {char const*} = {"1974"}, shift : {unsigned} = {8 - lro};

sri_v8b8bi.disasm = {
  sink << "sri\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(shift);
};

op sri_v8h8hi( 0b011011110001[12] : lro[4] : 0b010001[6] : rn[5] : rd[5] );
sri_v8h8hi.var format : {char const*} = {"1875"}, shift : {unsigned} = {16 - lro};

sri_v8h8hi.disasm = {
  sink << "sri\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op srshl_ddd( 0b01011110111[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
srshl_ddd.var format : {char const*} = {"736"};

srshl_ddd.disasm = {
  sink << "srshl\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op srshl_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
srshl_v16bv16bv16b.var format : {char const*} = {"856"};

srshl_v16bv16bv16b.disasm = {
  sink << "srshl\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op srshl_v2dv2dv2d( 0b01001110111[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
srshl_v2dv2dv2d.var format : {char const*} = {"930"};

srshl_v2dv2dv2d.disasm = {
  sink << "srshl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op srshl_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
srshl_v2sv2sv2s.var format : {char const*} = {"1071"};

srshl_v2sv2sv2s.disasm = {
  sink << "srshl\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op srshl_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
srshl_v4hv4hv4h.var format : {char const*} = {"1121"};

srshl_v4hv4hv4h.disasm = {
  sink << "srshl\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op srshl_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
srshl_v4sv4sv4s.var format : {char const*} = {"1252"};

srshl_v4sv4sv4s.disasm = {
  sink << "srshl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op srshl_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
srshl_v8bv8bv8b.var format : {char const*} = {"1330"};

srshl_v8bv8bv8b.disasm = {
  sink << "srshl\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op srshl_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
srshl_v8hv8hv8h.var format : {char const*} = {"1434"};

srshl_v8hv8hv8h.disasm = {
  sink << "srshl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op srshr_ddi( 0b0101111101[10] : lro[6] : 0b001001[6] : rn[5] : rd[5] );
srshr_ddi.var format : {char const*} = {"543"}, shift : {unsigned} = {64 - lro};

srshr_ddi.disasm = {
  sink << "srshr\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op srshr_v16b16bi( 0b0100111100001[13] : lro[3] : 0b001001[6] : rn[5] : rd[5] );
srshr_v16b16bi.var format : {char const*} = {"1948"}, shift : {unsigned} = {8 - lro};

srshr_v16b16bi.disasm = {
  sink << "srshr\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(shift);
};

op srshr_v2d2di( 0b0100111101[10] : lro[6] : 0b001001[6] : rn[5] : rd[5] );
srshr_v2d2di.var format : {char const*} = {"561"}, shift : {unsigned} = {64 - lro};

srshr_v2d2di.disasm = {
  sink << "srshr\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op srshr_v2s2si( 0b00001111001[11] : lro[5] : 0b001001[6] : rn[5] : rd[5] );
srshr_v2s2si.var format : {char const*} = {"1011"}, shift : {unsigned} = {32 - lro};

srshr_v2s2si.disasm = {
  sink << "srshr\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(shift);
};

op srshr_v4h4hi( 0b000011110001[12] : lro[4] : 0b001001[6] : rn[5] : rd[5] );
srshr_v4h4hi.var format : {char const*} = {"1842"}, shift : {unsigned} = {16 - lro};

srshr_v4h4hi.disasm = {
  sink << "srshr\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(shift);
};

op srshr_v4s4si( 0b01001111001[11] : lro[5] : 0b001001[6] : rn[5] : rd[5] );
srshr_v4s4si.var format : {char const*} = {"1186"}, shift : {unsigned} = {32 - lro};

srshr_v4s4si.disasm = {
  sink << "srshr\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op srshr_v8b8bi( 0b0000111100001[13] : lro[3] : 0b001001[6] : rn[5] : rd[5] );
srshr_v8b8bi.var format : {char const*} = {"1975"}, shift : {unsigned} = {8 - lro};

srshr_v8b8bi.disasm = {
  sink << "srshr\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(shift);
};

op srshr_v8h8hi( 0b010011110001[12] : lro[4] : 0b001001[6] : rn[5] : rd[5] );
srshr_v8h8hi.var format : {char const*} = {"1876"}, shift : {unsigned} = {16 - lro};

srshr_v8h8hi.disasm = {
  sink << "srshr\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op srsra_ddi( 0b0101111101[10] : lro[6] : 0b001101[6] : rn[5] : rd[5] );
srsra_ddi.var format : {char const*} = {"544"}, shift : {unsigned} = {64 - lro};

srsra_ddi.disasm = {
  sink << "srsra\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op srsra_v16b16bi( 0b0100111100001[13] : lro[3] : 0b001101[6] : rn[5] : rd[5] );
srsra_v16b16bi.var format : {char const*} = {"1949"}, shift : {unsigned} = {8 - lro};

srsra_v16b16bi.disasm = {
  sink << "srsra\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(shift);
};

op srsra_v2d2di( 0b0100111101[10] : lro[6] : 0b001101[6] : rn[5] : rd[5] );
srsra_v2d2di.var format : {char const*} = {"562"}, shift : {unsigned} = {64 - lro};

srsra_v2d2di.disasm = {
  sink << "srsra\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op srsra_v2s2si( 0b00001111001[11] : lro[5] : 0b001101[6] : rn[5] : rd[5] );
srsra_v2s2si.var format : {char const*} = {"1012"}, shift : {unsigned} = {32 - lro};

srsra_v2s2si.disasm = {
  sink << "srsra\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(shift);
};

op srsra_v4h4hi( 0b000011110001[12] : lro[4] : 0b001101[6] : rn[5] : rd[5] );
srsra_v4h4hi.var format : {char const*} = {"1843"}, shift : {unsigned} = {16 - lro};

srsra_v4h4hi.disasm = {
  sink << "srsra\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(shift);
};

op srsra_v4s4si( 0b01001111001[11] : lro[5] : 0b001101[6] : rn[5] : rd[5] );
srsra_v4s4si.var format : {char const*} = {"1187"}, shift : {unsigned} = {32 - lro};

srsra_v4s4si.disasm = {
  sink << "srsra\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op srsra_v8b8bi( 0b0000111100001[13] : lro[3] : 0b001101[6] : rn[5] : rd[5] );
srsra_v8b8bi.var format : {char const*} = {"1976"}, shift : {unsigned} = {8 - lro};

srsra_v8b8bi.disasm = {
  sink << "srsra\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(shift);
};

op srsra_v8h8hi( 0b010011110001[12] : lro[4] : 0b001101[6] : rn[5] : rd[5] );
srsra_v8h8hi.var format : {char const*} = {"1877"}, shift : {unsigned} = {16 - lro};

srsra_v8h8hi.disasm = {
  sink << "srsra\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op sshl_ddd( 0b01011110111[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
sshl_ddd.var format : {char const*} = {"737"};

sshl_ddd.disasm = {
  sink << "sshl\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op sshl_v16bv16bv16b( 0b01001110001[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
sshl_v16bv16bv16b.var format : {char const*} = {"857"};

sshl_v16bv16bv16b.disasm = {
  sink << "sshl\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op sshl_v2dv2dv2d( 0b01001110111[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
sshl_v2dv2dv2d.var format : {char const*} = {"931"};

sshl_v2dv2dv2d.disasm = {
  sink << "sshl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op sshl_v2sv2sv2s( 0b00001110101[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
sshl_v2sv2sv2s.var format : {char const*} = {"1072"};

sshl_v2sv2sv2s.disasm = {
  sink << "sshl\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sshl_v4hv4hv4h( 0b00001110011[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
sshl_v4hv4hv4h.var format : {char const*} = {"1122"};

sshl_v4hv4hv4h.disasm = {
  sink << "sshl\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sshl_v4sv4sv4s( 0b01001110101[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
sshl_v4sv4sv4s.var format : {char const*} = {"1253"};

sshl_v4sv4sv4s.disasm = {
  sink << "sshl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sshl_v8bv8bv8b( 0b00001110001[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
sshl_v8bv8bv8b.var format : {char const*} = {"1331"};

sshl_v8bv8bv8b.disasm = {
  sink << "sshl\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op sshl_v8hv8hv8h( 0b01001110011[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
sshl_v8hv8hv8h.var format : {char const*} = {"1435"};

sshl_v8hv8hv8h.disasm = {
  sink << "sshl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op sshll2_v2d4si( 0b01001111001[11] : imm[5] : 0b101001[6] : rn[5] : rd[5] );
sshll2_v2d4si.var format : {char const*} = {"972"};

sshll2_v2d4si.disasm = {
  if (imm) { sink << "sshll2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(imm); } else { sink << "sxtl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2); }
};

op sshll2_v4s8hi( 0b010011110001[12] : imm[4] : 0b101001[6] : rn[5] : rd[5] );
sshll2_v4s8hi.var format : {char const*} = {"1861"};

sshll2_v4s8hi.disasm = {
  if (imm) { sink << "sshll2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(imm); } else { sink << "sxtl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1); }
};

op sshll2_v8h16bi( 0b0100111100001[13] : imm[3] : 0b101001[6] : rn[5] : rd[5] );
sshll2_v8h16bi.var format : {char const*} = {"1992"};

sshll2_v8h16bi.disasm = {
  if (imm) { sink << "sshll2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(imm); } else { sink << "sxtl2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0); }
};

op sshll_v2d2si( 0b00001111001[11] : imm[5] : 0b101001[6] : rn[5] : rd[5] );
sshll_v2d2si.var format : {char const*} = {"953"};

sshll_v2d2si.disasm = {
  if (imm) { sink << "sshll\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(imm); } else { sink << "sxtl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2); }
};

op sshll_v4s4hi( 0b000011110001[12] : imm[4] : 0b101001[6] : rn[5] : rd[5] );
sshll_v4s4hi.var format : {char const*} = {"1859"};

sshll_v4s4hi.disasm = {
  if (imm) { sink << "sshll\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(imm); } else { sink << "sxtl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1); }
};

op sshll_v8h8bi( 0b0000111100001[13] : imm[3] : 0b101001[6] : rn[5] : rd[5] );
sshll_v8h8bi.var format : {char const*} = {"1994"};

sshll_v8h8bi.disasm = {
  if (imm) { sink << "sshll\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(imm); } else { sink << "sxtl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0); }
};

op sshr_ddi( 0b0101111101[10] : lro[6] : 0b000001[6] : rn[5] : rd[5] );
sshr_ddi.var format : {char const*} = {"545"}, shift : {unsigned} = {64 - lro};

sshr_ddi.disasm = {
  sink << "sshr\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op sshr_v16b16bi( 0b0100111100001[13] : lro[3] : 0b000001[6] : rn[5] : rd[5] );
sshr_v16b16bi.var format : {char const*} = {"1950"}, shift : {unsigned} = {8 - lro};

sshr_v16b16bi.disasm = {
  sink << "sshr\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(shift);
};

op sshr_v2d2di( 0b0100111101[10] : lro[6] : 0b000001[6] : rn[5] : rd[5] );
sshr_v2d2di.var format : {char const*} = {"563"}, shift : {unsigned} = {64 - lro};

sshr_v2d2di.disasm = {
  sink << "sshr\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op sshr_v2s2si( 0b00001111001[11] : lro[5] : 0b000001[6] : rn[5] : rd[5] );
sshr_v2s2si.var format : {char const*} = {"1013"}, shift : {unsigned} = {32 - lro};

sshr_v2s2si.disasm = {
  sink << "sshr\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(shift);
};

op sshr_v4h4hi( 0b000011110001[12] : lro[4] : 0b000001[6] : rn[5] : rd[5] );
sshr_v4h4hi.var format : {char const*} = {"1844"}, shift : {unsigned} = {16 - lro};

sshr_v4h4hi.disasm = {
  sink << "sshr\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(shift);
};

op sshr_v4s4si( 0b01001111001[11] : lro[5] : 0b000001[6] : rn[5] : rd[5] );
sshr_v4s4si.var format : {char const*} = {"1188"}, shift : {unsigned} = {32 - lro};

sshr_v4s4si.disasm = {
  sink << "sshr\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op sshr_v8b8bi( 0b0000111100001[13] : lro[3] : 0b000001[6] : rn[5] : rd[5] );
sshr_v8b8bi.var format : {char const*} = {"1977"}, shift : {unsigned} = {8 - lro};

sshr_v8b8bi.disasm = {
  sink << "sshr\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(shift);
};

op sshr_v8h8hi( 0b010011110001[12] : lro[4] : 0b000001[6] : rn[5] : rd[5] );
sshr_v8h8hi.var format : {char const*} = {"1878"}, shift : {unsigned} = {16 - lro};

sshr_v8h8hi.disasm = {
  sink << "sshr\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op ssra_ddi( 0b0101111101[10] : lro[6] : 0b000101[6] : rn[5] : rd[5] );
ssra_ddi.var format : {char const*} = {"546"}, shift : {unsigned} = {64 - lro};

ssra_ddi.disasm = {
  sink << "ssra\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op ssra_v16b16bi( 0b0100111100001[13] : lro[3] : 0b000101[6] : rn[5] : rd[5] );
ssra_v16b16bi.var format : {char const*} = {"1951"}, shift : {unsigned} = {8 - lro};

ssra_v16b16bi.disasm = {
  sink << "ssra\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(shift);
};

op ssra_v2d2di( 0b0100111101[10] : lro[6] : 0b000101[6] : rn[5] : rd[5] );
ssra_v2d2di.var format : {char const*} = {"564"}, shift : {unsigned} = {64 - lro};

ssra_v2d2di.disasm = {
  sink << "ssra\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op ssra_v2s2si( 0b00001111001[11] : lro[5] : 0b000101[6] : rn[5] : rd[5] );
ssra_v2s2si.var format : {char const*} = {"1014"}, shift : {unsigned} = {32 - lro};

ssra_v2s2si.disasm = {
  sink << "ssra\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(shift);
};

op ssra_v4h4hi( 0b000011110001[12] : lro[4] : 0b000101[6] : rn[5] : rd[5] );
ssra_v4h4hi.var format : {char const*} = {"1845"}, shift : {unsigned} = {16 - lro};

ssra_v4h4hi.disasm = {
  sink << "ssra\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(shift);
};

op ssra_v4s4si( 0b01001111001[11] : lro[5] : 0b000101[6] : rn[5] : rd[5] );
ssra_v4s4si.var format : {char const*} = {"1189"}, shift : {unsigned} = {32 - lro};

ssra_v4s4si.disasm = {
  sink << "ssra\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op ssra_v8b8bi( 0b0000111100001[13] : lro[3] : 0b000101[6] : rn[5] : rd[5] );
ssra_v8b8bi.var format : {char const*} = {"1978"}, shift : {unsigned} = {8 - lro};

ssra_v8b8bi.disasm = {
  sink << "ssra\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(shift);
};

op ssra_v8h8hi( 0b010011110001[12] : lro[4] : 0b000101[6] : rn[5] : rd[5] );
ssra_v8h8hi.var format : {char const*} = {"1879"}, shift : {unsigned} = {16 - lro};

ssra_v8h8hi.disasm = {
  sink << "ssra\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op ssubl2_v2dv4sv4s( 0b01001110101[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
ssubl2_v2dv4sv4s.var format : {char const*} = {"983"};

ssubl2_v2dv4sv4s.disasm = {
  sink << "ssubl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op ssubl2_v4sv8hv8h( 0b01001110011[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
ssubl2_v4sv8hv8h.var format : {char const*} = {"1289"};

ssubl2_v4sv8hv8h.disasm = {
  sink << "ssubl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op ssubl2_v8hv16bv16b( 0b01001110001[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
ssubl2_v8hv16bv16b.var format : {char const*} = {"1373"};

ssubl2_v8hv16bv16b.disasm = {
  sink << "ssubl2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op ssubl_v2dv2sv2s( 0b00001110101[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
ssubl_v2dv2sv2s.var format : {char const*} = {"964"};

ssubl_v2dv2sv2s.disasm = {
  sink << "ssubl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op ssubl_v4sv4hv4h( 0b00001110011[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
ssubl_v4sv4hv4h.var format : {char const*} = {"1170"};

ssubl_v4sv4hv4h.disasm = {
  sink << "ssubl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op ssubl_v8hv8bv8b( 0b00001110001[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
ssubl_v8hv8bv8b.var format : {char const*} = {"1392"};

ssubl_v8hv8bv8b.disasm = {
  sink << "ssubl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op ssubw2_v2dv2dv4s( 0b01001110101[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
ssubw2_v2dv2dv4s.var format : {char const*} = {"950"};

ssubw2_v2dv2dv4s.disasm = {
  sink << "ssubw2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,4,2);
};

op ssubw2_v4sv4sv8h( 0b01001110011[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
ssubw2_v4sv4sv8h.var format : {char const*} = {"1277"};

ssubw2_v4sv4sv8h.disasm = {
  sink << "ssubw2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,8,1);
};

op ssubw2_v8hv8hv16b( 0b01001110001[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
ssubw2_v8hv8hv16b.var format : {char const*} = {"1401"};

ssubw2_v8hv8hv16b.disasm = {
  sink << "ssubw2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,16,0);
};

op ssubw_v2dv2dv2s( 0b00001110101[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
ssubw_v2dv2dv2s.var format : {char const*} = {"946"};

ssubw_v2dv2dv2s.disasm = {
  sink << "ssubw\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,2);
};

op ssubw_v4sv4sv4h( 0b00001110011[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
ssubw_v4sv4sv4h.var format : {char const*} = {"1197"};

ssubw_v4sv4sv4h.disasm = {
  sink << "ssubw\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,1);
};

op ssubw_v8hv8hv8b( 0b00001110001[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
ssubw_v8hv8hv8b.var format : {char const*} = {"1405"};

ssubw_v8hv8hv8b.disasm = {
  sink << "ssubw\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,0);
};

op st1_s8b( 0b0000110000000000011100[22] : rn[5] : rt[5] );
st1_s8b.var format : {char const*} = {"2851"};

st1_s8b.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

st1_s8b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
};

op st1_s16b( 0b0100110000000000011100[22] : rn[5] : rt[5] );
st1_s16b.var format : {char const*} = {"2683"};

st1_s16b.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

st1_s16b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
};

op st1_s4h( 0b0000110000000000011101[22] : rn[5] : rt[5] );
st1_s4h.var format : {char const*} = {"2791"};

st1_s4h.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

st1_s4h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st1_s8h( 0b0100110000000000011101[22] : rn[5] : rt[5] );
st1_s8h.var format : {char const*} = {"2881"};

st1_s8h.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

st1_s8h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st1_s2s( 0b0000110000000000011110[22] : rn[5] : rt[5] );
st1_s2s.var format : {char const*} = {"2761"};

st1_s2s.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

st1_s2s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st1_s4s( 0b0100110000000000011110[22] : rn[5] : rt[5] );
st1_s4s.var format : {char const*} = {"2821"};

st1_s4s.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

st1_s4s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st1_s1d( 0b0000110000000000011111[22] : rn[5] : rt[5] );
st1_s1d.var format : {char const*} = {"2701"};

st1_s1d.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,1,3) << ", [" << DisasmGSXR(rn) << "]";
};

st1_s1d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 1; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st1_s2d( 0b0100110000000000011111[22] : rn[5] : rt[5] );
st1_s2d.var format : {char const*} = {"2731"};

st1_s2d.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

st1_s2d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st1_d8b( 0b0000110000000000101000[22] : rn[5] : rt[5] );
st1_d8b.var format : {char const*} = {"2843"};

st1_d8b.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

st1_d8b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
};

op st1_d16b( 0b0100110000000000101000[22] : rn[5] : rt[5] );
st1_d16b.var format : {char const*} = {"2675"};

st1_d16b.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

st1_d16b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.MemWrite32( addr + U64((r*16+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
};

op st1_d4h( 0b0000110000000000101001[22] : rn[5] : rt[5] );
st1_d4h.var format : {char const*} = {"2783"};

st1_d4h.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

st1_d4h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st1_d8h( 0b0100110000000000101001[22] : rn[5] : rt[5] );
st1_d8h.var format : {char const*} = {"2873"};

st1_d8h.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

st1_d8h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st1_d2s( 0b0000110000000000101010[22] : rn[5] : rt[5] );
st1_d2s.var format : {char const*} = {"2753"};

st1_d2s.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

st1_d2s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st1_d4s( 0b0100110000000000101010[22] : rn[5] : rt[5] );
st1_d4s.var format : {char const*} = {"2813"};

st1_d4s.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

st1_d4s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st1_d1d( 0b0000110000000000101011[22] : rn[5] : rt[5] );
st1_d1d.var format : {char const*} = {"2696"};

st1_d1d.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,1,3) << ", [" << DisasmGSXR(rn) << "]";
};

st1_d1d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.MemWrite32( addr + U64((r*1+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st1_d2d( 0b0100110000000000101011[22] : rn[5] : rt[5] );
st1_d2d.var format : {char const*} = {"2723"};

st1_d2d.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

st1_d2d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st1_t8b( 0b0000110000000000011000[22] : rn[5] : rt[5] );
st1_t8b.var format : {char const*} = {"2836"};

st1_t8b.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

st1_t8b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
};

op st1_t16b( 0b0100110000000000011000[22] : rn[5] : rt[5] );
st1_t16b.var format : {char const*} = {"2668"};

st1_t16b.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

st1_t16b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.MemWrite32( addr + U64((r*16+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
};

op st1_t4h( 0b0000110000000000011001[22] : rn[5] : rt[5] );
st1_t4h.var format : {char const*} = {"2776"};

st1_t4h.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

st1_t4h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st1_t8h( 0b0100110000000000011001[22] : rn[5] : rt[5] );
st1_t8h.var format : {char const*} = {"2866"};

st1_t8h.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

st1_t8h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st1_t2s( 0b0000110000000000011010[22] : rn[5] : rt[5] );
st1_t2s.var format : {char const*} = {"2746"};

st1_t2s.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

st1_t2s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st1_t4s( 0b0100110000000000011010[22] : rn[5] : rt[5] );
st1_t4s.var format : {char const*} = {"2806"};

st1_t4s.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

st1_t4s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st1_t1d( 0b0000110000000000011011[22] : rn[5] : rt[5] );
st1_t1d.var format : {char const*} = {"2692"};

st1_t1d.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,1,3) << ", [" << DisasmGSXR(rn) << "]";
};

st1_t1d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.MemWrite32( addr + U64((r*1+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st1_t2d( 0b0100110000000000011011[22] : rn[5] : rt[5] );
st1_t2d.var format : {char const*} = {"2716"};

st1_t2d.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

st1_t2d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st1_q8b( 0b0000110000000000001000[22] : rn[5] : rt[5] );
st1_q8b.var format : {char const*} = {"2826"};

st1_q8b.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

st1_q8b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
};

op st1_q16b( 0b0100110000000000001000[22] : rn[5] : rt[5] );
st1_q16b.var format : {char const*} = {"2658"};

st1_q16b.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

st1_q16b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.MemWrite32( addr + U64((r*16+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
};

op st1_q4h( 0b0000110000000000001001[22] : rn[5] : rt[5] );
st1_q4h.var format : {char const*} = {"2766"};

st1_q4h.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

st1_q4h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st1_q8h( 0b0100110000000000001001[22] : rn[5] : rt[5] );
st1_q8h.var format : {char const*} = {"2856"};

st1_q8h.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

st1_q8h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st1_q2s( 0b0000110000000000001010[22] : rn[5] : rt[5] );
st1_q2s.var format : {char const*} = {"2736"};

st1_q2s.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

st1_q2s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st1_q4s( 0b0100110000000000001010[22] : rn[5] : rt[5] );
st1_q4s.var format : {char const*} = {"2796"};

st1_q4s.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

st1_q4s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st1_q1d( 0b0000110000000000001011[22] : rn[5] : rt[5] );
st1_q1d.var format : {char const*} = {"2688"};

st1_q1d.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,1,3) << ", [" << DisasmGSXR(rn) << "]";
};

st1_q1d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.MemWrite32( addr + U64((r*1+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st1_q2d( 0b0100110000000000001011[22] : rn[5] : rt[5] );
st1_q2d.var format : {char const*} = {"2706"};

st1_q2d.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

st1_q2d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st1_s8b_imm( 0b0000110010011111011100[22] : rn[5] : rt[5] );
st1_s8b_imm.var format : {char const*} = {"2852"};

st1_s8b_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,8,0) << ", [" << DisasmGSXR(rn) << "], #8";
};

st1_s8b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_s8b_reg( 0b00001100100[11] : rm[5] : 0b011100[6] : rn[5] : rt[5] );
st1_s8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1767"};

st1_s8b_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_s8b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_s16b_imm( 0b0100110010011111011100[22] : rn[5] : rt[5] );
st1_s16b_imm.var format : {char const*} = {"2684"};

st1_s16b_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,16,0) << ", [" << DisasmGSXR(rn) << "], #16";
};

st1_s16b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_s16b_reg( 0b01001100100[11] : rm[5] : 0b011100[6] : rn[5] : rt[5] );
st1_s16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1683"};

st1_s16b_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_s16b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_s4h_imm( 0b0000110010011111011101[22] : rn[5] : rt[5] );
st1_s4h_imm.var format : {char const*} = {"2792"};

st1_s4h_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,4,1) << ", [" << DisasmGSXR(rn) << "], #8";
};

st1_s4h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_s4h_reg( 0b00001100100[11] : rm[5] : 0b011101[6] : rn[5] : rt[5] );
st1_s4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1737"};

st1_s4h_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_s4h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_s8h_imm( 0b0100110010011111011101[22] : rn[5] : rt[5] );
st1_s8h_imm.var format : {char const*} = {"2882"};

st1_s8h_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,8,1) << ", [" << DisasmGSXR(rn) << "], #16";
};

st1_s8h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_s8h_reg( 0b01001100100[11] : rm[5] : 0b011101[6] : rn[5] : rt[5] );
st1_s8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1782"};

st1_s8h_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_s8h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_s2s_imm( 0b0000110010011111011110[22] : rn[5] : rt[5] );
st1_s2s_imm.var format : {char const*} = {"2762"};

st1_s2s_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,2,2) << ", [" << DisasmGSXR(rn) << "], #8";
};

st1_s2s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_s2s_reg( 0b00001100100[11] : rm[5] : 0b011110[6] : rn[5] : rt[5] );
st1_s2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1722"};

st1_s2s_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_s2s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_s4s_imm( 0b0100110010011111011110[22] : rn[5] : rt[5] );
st1_s4s_imm.var format : {char const*} = {"2822"};

st1_s4s_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,4,2) << ", [" << DisasmGSXR(rn) << "], #16";
};

st1_s4s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_s4s_reg( 0b01001100100[11] : rm[5] : 0b011110[6] : rn[5] : rt[5] );
st1_s4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1752"};

st1_s4s_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_s4s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_s1d_imm( 0b0000110010011111011111[22] : rn[5] : rt[5] );
st1_s1d_imm.var format : {char const*} = {"2702"};

st1_s1d_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,1,3) << ", [" << DisasmGSXR(rn) << "], #8";
};

st1_s1d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 1; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_s1d_reg( 0b00001100100[11] : rm[5] : 0b011111[6] : rn[5] : rt[5] );
st1_s1d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1692"};

st1_s1d_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,1,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_s1d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 1; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_s2d_imm( 0b0100110010011111011111[22] : rn[5] : rt[5] );
st1_s2d_imm.var format : {char const*} = {"2732"};

st1_s2d_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,2,3) << ", [" << DisasmGSXR(rn) << "], #16";
};

st1_s2d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_s2d_reg( 0b01001100100[11] : rm[5] : 0b011111[6] : rn[5] : rt[5] );
st1_s2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1707"};

st1_s2d_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_s2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 1; ++s) {
      cpu.MemWrite32( addr + U64((e*1+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 1; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_d8b_imm( 0b0000110010011111101000[22] : rn[5] : rt[5] );
st1_d8b_imm.var format : {char const*} = {"2845"};

st1_d8b_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "], #16";
};

st1_d8b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_d8b_reg( 0b00001100100[11] : rm[5] : 0b101000[6] : rn[5] : rt[5] );
st1_d8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1763"};

st1_d8b_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_d8b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_d16b_imm( 0b0100110010011111101000[22] : rn[5] : rt[5] );
st1_d16b_imm.var format : {char const*} = {"2677"};

st1_d16b_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "], #32";
};

st1_d16b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.MemWrite32( addr + U64((r*16+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_d16b_reg( 0b01001100100[11] : rm[5] : 0b101000[6] : rn[5] : rt[5] );
st1_d16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1679"};

st1_d16b_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_d16b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.MemWrite32( addr + U64((r*16+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_d4h_imm( 0b0000110010011111101001[22] : rn[5] : rt[5] );
st1_d4h_imm.var format : {char const*} = {"2785"};

st1_d4h_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "], #16";
};

st1_d4h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_d4h_reg( 0b00001100100[11] : rm[5] : 0b101001[6] : rn[5] : rt[5] );
st1_d4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1733"};

st1_d4h_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_d4h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_d8h_imm( 0b0100110010011111101001[22] : rn[5] : rt[5] );
st1_d8h_imm.var format : {char const*} = {"2875"};

st1_d8h_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "], #32";
};

st1_d8h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_d8h_reg( 0b01001100100[11] : rm[5] : 0b101001[6] : rn[5] : rt[5] );
st1_d8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1778"};

st1_d8h_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_d8h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_d2s_imm( 0b0000110010011111101010[22] : rn[5] : rt[5] );
st1_d2s_imm.var format : {char const*} = {"2755"};

st1_d2s_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "], #16";
};

st1_d2s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_d2s_reg( 0b00001100100[11] : rm[5] : 0b101010[6] : rn[5] : rt[5] );
st1_d2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1718"};

st1_d2s_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_d2s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_d4s_imm( 0b0100110010011111101010[22] : rn[5] : rt[5] );
st1_d4s_imm.var format : {char const*} = {"2815"};

st1_d4s_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "], #32";
};

st1_d4s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_d4s_reg( 0b01001100100[11] : rm[5] : 0b101010[6] : rn[5] : rt[5] );
st1_d4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1748"};

st1_d4s_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_d4s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_d1d_imm( 0b0000110010011111101011[22] : rn[5] : rt[5] );
st1_d1d_imm.var format : {char const*} = {"2697"};

st1_d1d_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,1,3) << ", [" << DisasmGSXR(rn) << "], #16";
};

st1_d1d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.MemWrite32( addr + U64((r*1+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_d1d_reg( 0b00001100100[11] : rm[5] : 0b101011[6] : rn[5] : rt[5] );
st1_d1d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1690"};

st1_d1d_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,1,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_d1d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.MemWrite32( addr + U64((r*1+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_d2d_imm( 0b0100110010011111101011[22] : rn[5] : rt[5] );
st1_d2d_imm.var format : {char const*} = {"2725"};

st1_d2d_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "], #32";
};

st1_d2d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_d2d_reg( 0b01001100100[11] : rm[5] : 0b101011[6] : rn[5] : rt[5] );
st1_d2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1703"};

st1_d2d_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_d2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_t8b_imm( 0b0000110010011111011000[22] : rn[5] : rt[5] );
st1_t8b_imm.var format : {char const*} = {"2840"};

st1_t8b_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "], #24";
};

st1_t8b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_t8b_reg( 0b00001100100[11] : rm[5] : 0b011000[6] : rn[5] : rt[5] );
st1_t8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1762"};

st1_t8b_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_t8b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_t16b_imm( 0b0100110010011111011000[22] : rn[5] : rt[5] );
st1_t16b_imm.var format : {char const*} = {"2672"};

st1_t16b_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "], #48";
};

st1_t16b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.MemWrite32( addr + U64((r*16+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_t16b_reg( 0b01001100100[11] : rm[5] : 0b011000[6] : rn[5] : rt[5] );
st1_t16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1678"};

st1_t16b_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_t16b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.MemWrite32( addr + U64((r*16+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_t4h_imm( 0b0000110010011111011001[22] : rn[5] : rt[5] );
st1_t4h_imm.var format : {char const*} = {"2780"};

st1_t4h_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "], #24";
};

st1_t4h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_t4h_reg( 0b00001100100[11] : rm[5] : 0b011001[6] : rn[5] : rt[5] );
st1_t4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1732"};

st1_t4h_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_t4h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_t8h_imm( 0b0100110010011111011001[22] : rn[5] : rt[5] );
st1_t8h_imm.var format : {char const*} = {"2870"};

st1_t8h_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "], #48";
};

st1_t8h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_t8h_reg( 0b01001100100[11] : rm[5] : 0b011001[6] : rn[5] : rt[5] );
st1_t8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1777"};

st1_t8h_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_t8h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_t2s_imm( 0b0000110010011111011010[22] : rn[5] : rt[5] );
st1_t2s_imm.var format : {char const*} = {"2750"};

st1_t2s_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "], #24";
};

st1_t2s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_t2s_reg( 0b00001100100[11] : rm[5] : 0b011010[6] : rn[5] : rt[5] );
st1_t2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1717"};

st1_t2s_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_t2s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_t4s_imm( 0b0100110010011111011010[22] : rn[5] : rt[5] );
st1_t4s_imm.var format : {char const*} = {"2810"};

st1_t4s_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "], #48";
};

st1_t4s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_t4s_reg( 0b01001100100[11] : rm[5] : 0b011010[6] : rn[5] : rt[5] );
st1_t4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1747"};

st1_t4s_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_t4s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_t1d_imm( 0b0000110010011111011011[22] : rn[5] : rt[5] );
st1_t1d_imm.var format : {char const*} = {"2694"};

st1_t1d_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,1,3) << ", [" << DisasmGSXR(rn) << "], #24";
};

st1_t1d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.MemWrite32( addr + U64((r*1+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_t1d_reg( 0b00001100100[11] : rm[5] : 0b011011[6] : rn[5] : rt[5] );
st1_t1d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1689"};

st1_t1d_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,1,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_t1d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.MemWrite32( addr + U64((r*1+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_t2d_imm( 0b0100110010011111011011[22] : rn[5] : rt[5] );
st1_t2d_imm.var format : {char const*} = {"2720"};

st1_t2d_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "], #48";
};

st1_t2d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_t2d_reg( 0b01001100100[11] : rm[5] : 0b011011[6] : rn[5] : rt[5] );
st1_t2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1702"};

st1_t2d_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_t2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_q8b_imm( 0b0000110010011111001000[22] : rn[5] : rt[5] );
st1_q8b_imm.var format : {char const*} = {"2832"};

st1_q8b_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "], #32";
};

st1_q8b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_q8b_reg( 0b00001100100[11] : rm[5] : 0b001000[6] : rn[5] : rt[5] );
st1_q8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1758"};

st1_q8b_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_q8b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_q16b_imm( 0b0100110010011111001000[22] : rn[5] : rt[5] );
st1_q16b_imm.var format : {char const*} = {"2664"};

st1_q16b_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "], #64";
};

st1_q16b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.MemWrite32( addr + U64((r*16+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_q16b_reg( 0b01001100100[11] : rm[5] : 0b001000[6] : rn[5] : rt[5] );
st1_q16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1674"};

st1_q16b_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_q16b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 16; ++e) {
      cpu.MemWrite32( addr + U64((r*16+e)*1), cpu.GetVU8((rt+r)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_q4h_imm( 0b0000110010011111001001[22] : rn[5] : rt[5] );
st1_q4h_imm.var format : {char const*} = {"2772"};

st1_q4h_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "], #32";
};

st1_q4h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_q4h_reg( 0b00001100100[11] : rm[5] : 0b001001[6] : rn[5] : rt[5] );
st1_q4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1728"};

st1_q4h_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_q4h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_q8h_imm( 0b0100110010011111001001[22] : rn[5] : rt[5] );
st1_q8h_imm.var format : {char const*} = {"2862"};

st1_q8h_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "], #64";
};

st1_q8h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_q8h_reg( 0b01001100100[11] : rm[5] : 0b001001[6] : rn[5] : rt[5] );
st1_q8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1773"};

st1_q8h_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_q8h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 8; ++e) {
      cpu.MemWrite32( addr + U64((r*8+e)*2), cpu.GetVU16((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_q2s_imm( 0b0000110010011111001010[22] : rn[5] : rt[5] );
st1_q2s_imm.var format : {char const*} = {"2742"};

st1_q2s_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "], #32";
};

st1_q2s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_q2s_reg( 0b00001100100[11] : rm[5] : 0b001010[6] : rn[5] : rt[5] );
st1_q2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1713"};

st1_q2s_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_q2s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_q4s_imm( 0b0100110010011111001010[22] : rn[5] : rt[5] );
st1_q4s_imm.var format : {char const*} = {"2802"};

st1_q4s_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "], #64";
};

st1_q4s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_q4s_reg( 0b01001100100[11] : rm[5] : 0b001010[6] : rn[5] : rt[5] );
st1_q4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1743"};

st1_q4s_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_q4s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 4; ++e) {
      cpu.MemWrite32( addr + U64((r*4+e)*4), cpu.GetVU32((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_q1d_imm( 0b0000110010011111001011[22] : rn[5] : rt[5] );
st1_q1d_imm.var format : {char const*} = {"2690"};

st1_q1d_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,1,3) << ", [" << DisasmGSXR(rn) << "], #32";
};

st1_q1d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.MemWrite32( addr + U64((r*1+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(8) );
};

op st1_q1d_reg( 0b00001100100[11] : rm[5] : 0b001011[6] : rn[5] : rt[5] );
st1_q1d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1687"};

st1_q1d_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,1,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_q1d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 1; ++e) {
      cpu.MemWrite32( addr + U64((r*1+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_q2d_imm( 0b0100110010011111001011[22] : rn[5] : rt[5] );
st1_q2d_imm.var format : {char const*} = {"2712"};

st1_q2d_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "], #64";
};

st1_q2d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op st1_q2d_reg( 0b01001100100[11] : rm[5] : 0b001011[6] : rn[5] : rt[5] );
st1_q2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1698"};

st1_q2d_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st1_q2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) {
    for (unsigned e = 0; e < 2; ++e) {
      cpu.MemWrite32( addr + U64((r*2+e)*8), cpu.GetVU64((rt+r)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st1_sbi( 0b0[1] : shl<3> index1[1] : 0b00110100000000000[17] : index0[3] : rn[5] : rt[5] );
st1_sbi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1816"};

st1_sbi.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st1_shi( 0b0[1] : shl<2> index1[1] : 0b00110100000000010[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
st1_shi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1910"};

st1_shi.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st1_ssi( 0b0[1] : shl<1> index1[1] : 0b00110100000000100[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
st1_ssi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"2009"};

st1_ssi.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st1_sdi( 0b0[1] : index[1] : 0b00110100000000100001[20] : rn[5] : rt[5] );
st1_sdi.var format : {char const*} = {"2033"};

st1_sdi.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st1_sbi_imm( 0b0[1] : shl<3> index1[1] : 0b00110110011111000[17] : index0[3] : rn[5] : rt[5] );
st1_sbi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1817"};

st1_sbi_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #1";
};

op st1_sbi_reg( 0b0[1] : shl<3> index1[1] : 0b001101100[9] : rm[5] : 0b000[3] : index0[3] : rn[5] : rt[5] );
st1_sbi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"256"};

st1_sbi_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st1_shi_imm( 0b0[1] : shl<2> index1[1] : 0b00110110011111010[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
st1_shi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1911"};

st1_shi_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #2";
};

op st1_shi_reg( 0b0[1] : shl<2> index1[1] : 0b001101100[9] : rm[5] : 0b010[3] : index0[2] : 0b0[1] : rn[5] : rt[5] );
st1_shi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"360"};

st1_shi_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st1_ssi_imm( 0b0[1] : shl<1> index1[1] : 0b00110110011111100[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
st1_ssi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"2010"};

st1_ssi_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #4";
};

op st1_ssi_reg( 0b0[1] : shl<1> index1[1] : 0b001101100[9] : rm[5] : 0b100[3] : index0[1] : 0b00[2] : rn[5] : rt[5] );
st1_ssi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"446"};

st1_ssi_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st1_sdi_imm( 0b0[1] : index[1] : 0b00110110011111100001[20] : rn[5] : rt[5] );
st1_sdi_imm.var format : {char const*} = {"2034"};

st1_sdi_imm.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #8";
};

op st1_sdi_reg( 0b0[1] : index[1] : 0b001101100[9] : rm[5] : 0b100001[6] : rn[5] : rt[5] );
st1_sdi_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"533"};

st1_sdi_reg.disasm = {
  sink << "st1\t" << DisasmBunch(rt,1,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st2_d8b( 0b0000110000000000100000[22] : rn[5] : rt[5] );
st2_d8b.var format : {char const*} = {"2844"};

st2_d8b.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

st2_d8b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
};

op st2_d16b( 0b0100110000000000100000[22] : rn[5] : rt[5] );
st2_d16b.var format : {char const*} = {"2676"};

st2_d16b.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

st2_d16b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
};

op st2_d4h( 0b0000110000000000100001[22] : rn[5] : rt[5] );
st2_d4h.var format : {char const*} = {"2784"};

st2_d4h.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

st2_d4h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st2_d8h( 0b0100110000000000100001[22] : rn[5] : rt[5] );
st2_d8h.var format : {char const*} = {"2874"};

st2_d8h.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

st2_d8h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st2_d2s( 0b0000110000000000100010[22] : rn[5] : rt[5] );
st2_d2s.var format : {char const*} = {"2754"};

st2_d2s.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

st2_d2s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st2_d4s( 0b0100110000000000100010[22] : rn[5] : rt[5] );
st2_d4s.var format : {char const*} = {"2814"};

st2_d4s.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

st2_d4s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st2_d2d( 0b0100110000000000100011[22] : rn[5] : rt[5] );
st2_d2d.var format : {char const*} = {"2724"};

st2_d2d.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

st2_d2d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st2_d8b_imm( 0b0000110010011111100000[22] : rn[5] : rt[5] );
st2_d8b_imm.var format : {char const*} = {"2846"};

st2_d8b_imm.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "], #16";
};

st2_d8b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + U64(16) );
};

op st2_d8b_reg( 0b00001100100[11] : rm[5] : 0b100000[6] : rn[5] : rt[5] );
st2_d8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1764"};

st2_d8b_reg.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st2_d8b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st2_d16b_imm( 0b0100110010011111100000[22] : rn[5] : rt[5] );
st2_d16b_imm.var format : {char const*} = {"2678"};

st2_d16b_imm.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "], #32";
};

st2_d16b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + U64(32) );
};

op st2_d16b_reg( 0b01001100100[11] : rm[5] : 0b100000[6] : rn[5] : rt[5] );
st2_d16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1680"};

st2_d16b_reg.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st2_d16b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st2_d4h_imm( 0b0000110010011111100001[22] : rn[5] : rt[5] );
st2_d4h_imm.var format : {char const*} = {"2786"};

st2_d4h_imm.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "], #16";
};

st2_d4h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op st2_d4h_reg( 0b00001100100[11] : rm[5] : 0b100001[6] : rn[5] : rt[5] );
st2_d4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1734"};

st2_d4h_reg.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st2_d4h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st2_d8h_imm( 0b0100110010011111100001[22] : rn[5] : rt[5] );
st2_d8h_imm.var format : {char const*} = {"2876"};

st2_d8h_imm.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "], #32";
};

st2_d8h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(32) );
};

op st2_d8h_reg( 0b01001100100[11] : rm[5] : 0b100001[6] : rn[5] : rt[5] );
st2_d8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1779"};

st2_d8h_reg.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st2_d8h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st2_d2s_imm( 0b0000110010011111100010[22] : rn[5] : rt[5] );
st2_d2s_imm.var format : {char const*} = {"2756"};

st2_d2s_imm.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "], #16";
};

st2_d2s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(16) );
};

op st2_d2s_reg( 0b00001100100[11] : rm[5] : 0b100010[6] : rn[5] : rt[5] );
st2_d2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1719"};

st2_d2s_reg.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st2_d2s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st2_d4s_imm( 0b0100110010011111100010[22] : rn[5] : rt[5] );
st2_d4s_imm.var format : {char const*} = {"2816"};

st2_d4s_imm.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "], #32";
};

st2_d4s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(32) );
};

op st2_d4s_reg( 0b01001100100[11] : rm[5] : 0b100010[6] : rn[5] : rt[5] );
st2_d4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1749"};

st2_d4s_reg.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st2_d4s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st2_d2d_imm( 0b0100110010011111100011[22] : rn[5] : rt[5] );
st2_d2d_imm.var format : {char const*} = {"2726"};

st2_d2d_imm.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "], #32";
};

st2_d2d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(32) );
};

op st2_d2d_reg( 0b01001100100[11] : rm[5] : 0b100011[6] : rn[5] : rt[5] );
st2_d2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1704"};

st2_d2d_reg.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st2_d2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 2; ++s) {
      cpu.MemWrite32( addr + U64((e*2+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 2; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st2_dbi( 0b0[1] : shl<3> index1[1] : 0b00110100100000000[17] : index0[3] : rn[5] : rt[5] );
st2_dbi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1812"};

st2_dbi.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st2_dhi( 0b0[1] : shl<2> index1[1] : 0b00110100100000010[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
st2_dhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1906"};

st2_dhi.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st2_dsi( 0b0[1] : shl<1> index1[1] : 0b00110100100000100[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
st2_dsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"2005"};

st2_dsi.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st2_ddi( 0b0[1] : index[1] : 0b00110100100000100001[20] : rn[5] : rt[5] );
st2_ddi.var format : {char const*} = {"2029"};

st2_ddi.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st2_dbi_imm( 0b0[1] : shl<3> index1[1] : 0b00110110111111000[17] : index0[3] : rn[5] : rt[5] );
st2_dbi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1813"};

st2_dbi_imm.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #2";
};

op st2_dbi_reg( 0b0[1] : shl<3> index1[1] : 0b001101101[9] : rm[5] : 0b000[3] : index0[3] : rn[5] : rt[5] );
st2_dbi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"254"};

st2_dbi_reg.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st2_dhi_imm( 0b0[1] : shl<2> index1[1] : 0b00110110111111010[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
st2_dhi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1907"};

st2_dhi_imm.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #4";
};

op st2_dhi_reg( 0b0[1] : shl<2> index1[1] : 0b001101101[9] : rm[5] : 0b010[3] : index0[2] : 0b0[1] : rn[5] : rt[5] );
st2_dhi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"358"};

st2_dhi_reg.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st2_dsi_imm( 0b0[1] : shl<1> index1[1] : 0b00110110111111100[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
st2_dsi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"2006"};

st2_dsi_imm.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #8";
};

op st2_dsi_reg( 0b0[1] : shl<1> index1[1] : 0b001101101[9] : rm[5] : 0b100[3] : index0[1] : 0b00[2] : rn[5] : rt[5] );
st2_dsi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"444"};

st2_dsi_reg.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st2_ddi_imm( 0b0[1] : index[1] : 0b00110110111111100001[20] : rn[5] : rt[5] );
st2_ddi_imm.var format : {char const*} = {"2030"};

st2_ddi_imm.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #16";
};

op st2_ddi_reg( 0b0[1] : index[1] : 0b001101101[9] : rm[5] : 0b100001[6] : rn[5] : rt[5] );
st2_ddi_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"531"};

st2_ddi_reg.disasm = {
  sink << "st2\t" << DisasmBunch(rt,2,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st3_t8b( 0b0000110000000000010000[22] : rn[5] : rt[5] );
st3_t8b.var format : {char const*} = {"2834"};

st3_t8b.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

st3_t8b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
};

op st3_t16b( 0b0100110000000000010000[22] : rn[5] : rt[5] );
st3_t16b.var format : {char const*} = {"2666"};

st3_t16b.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

st3_t16b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
};

op st3_t4h( 0b0000110000000000010001[22] : rn[5] : rt[5] );
st3_t4h.var format : {char const*} = {"2774"};

st3_t4h.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

st3_t4h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st3_t8h( 0b0100110000000000010001[22] : rn[5] : rt[5] );
st3_t8h.var format : {char const*} = {"2864"};

st3_t8h.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

st3_t8h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st3_t2s( 0b0000110000000000010010[22] : rn[5] : rt[5] );
st3_t2s.var format : {char const*} = {"2744"};

st3_t2s.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

st3_t2s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st3_t4s( 0b0100110000000000010010[22] : rn[5] : rt[5] );
st3_t4s.var format : {char const*} = {"2804"};

st3_t4s.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

st3_t4s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st3_t2d( 0b0100110000000000010011[22] : rn[5] : rt[5] );
st3_t2d.var format : {char const*} = {"2714"};

st3_t2d.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

st3_t2d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st3_t8b_imm( 0b0000110010011111010000[22] : rn[5] : rt[5] );
st3_t8b_imm.var format : {char const*} = {"2838"};

st3_t8b_imm.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "], #24";
};

st3_t8b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + U64(24) );
};

op st3_t8b_reg( 0b00001100100[11] : rm[5] : 0b010000[6] : rn[5] : rt[5] );
st3_t8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1760"};

st3_t8b_reg.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st3_t8b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st3_t16b_imm( 0b0100110010011111010000[22] : rn[5] : rt[5] );
st3_t16b_imm.var format : {char const*} = {"2670"};

st3_t16b_imm.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "], #48";
};

st3_t16b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + U64(48) );
};

op st3_t16b_reg( 0b01001100100[11] : rm[5] : 0b010000[6] : rn[5] : rt[5] );
st3_t16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1676"};

st3_t16b_reg.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st3_t16b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st3_t4h_imm( 0b0000110010011111010001[22] : rn[5] : rt[5] );
st3_t4h_imm.var format : {char const*} = {"2778"};

st3_t4h_imm.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "], #24";
};

st3_t4h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(24) );
};

op st3_t4h_reg( 0b00001100100[11] : rm[5] : 0b010001[6] : rn[5] : rt[5] );
st3_t4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1730"};

st3_t4h_reg.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st3_t4h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st3_t8h_imm( 0b0100110010011111010001[22] : rn[5] : rt[5] );
st3_t8h_imm.var format : {char const*} = {"2868"};

st3_t8h_imm.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "], #48";
};

st3_t8h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(48) );
};

op st3_t8h_reg( 0b01001100100[11] : rm[5] : 0b010001[6] : rn[5] : rt[5] );
st3_t8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1775"};

st3_t8h_reg.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st3_t8h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st3_t2s_imm( 0b0000110010011111010010[22] : rn[5] : rt[5] );
st3_t2s_imm.var format : {char const*} = {"2748"};

st3_t2s_imm.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "], #24";
};

st3_t2s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(24) );
};

op st3_t2s_reg( 0b00001100100[11] : rm[5] : 0b010010[6] : rn[5] : rt[5] );
st3_t2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1715"};

st3_t2s_reg.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st3_t2s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st3_t4s_imm( 0b0100110010011111010010[22] : rn[5] : rt[5] );
st3_t4s_imm.var format : {char const*} = {"2808"};

st3_t4s_imm.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "], #48";
};

st3_t4s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(48) );
};

op st3_t4s_reg( 0b01001100100[11] : rm[5] : 0b010010[6] : rn[5] : rt[5] );
st3_t4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1745"};

st3_t4s_reg.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st3_t4s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st3_t2d_imm( 0b0100110010011111010011[22] : rn[5] : rt[5] );
st3_t2d_imm.var format : {char const*} = {"2718"};

st3_t2d_imm.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "], #48";
};

st3_t2d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(48) );
};

op st3_t2d_reg( 0b01001100100[11] : rm[5] : 0b010011[6] : rn[5] : rt[5] );
st3_t2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1700"};

st3_t2d_reg.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st3_t2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 3; ++s) {
      cpu.MemWrite32( addr + U64((e*3+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 3; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st3_tbi( 0b0[1] : shl<3> index1[1] : 0b00110100000000001[17] : index0[3] : rn[5] : rt[5] );
st3_tbi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1808"};

st3_tbi.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st3_thi( 0b0[1] : shl<2> index1[1] : 0b00110100000000011[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
st3_thi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1902"};

st3_thi.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st3_tsi( 0b0[1] : shl<1> index1[1] : 0b00110100000000101[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
st3_tsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"2001"};

st3_tsi.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st3_tdi( 0b0[1] : index[1] : 0b00110100000000101001[20] : rn[5] : rt[5] );
st3_tdi.var format : {char const*} = {"2025"};

st3_tdi.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st3_tbi_imm( 0b0[1] : shl<3> index1[1] : 0b00110110011111001[17] : index0[3] : rn[5] : rt[5] );
st3_tbi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1810"};

st3_tbi_imm.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #3";
};

op st3_tbi_reg( 0b0[1] : shl<3> index1[1] : 0b001101100[9] : rm[5] : 0b001[3] : index0[3] : rn[5] : rt[5] );
st3_tbi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"253"};

st3_tbi_reg.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st3_thi_imm( 0b0[1] : shl<2> index1[1] : 0b00110110011111011[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
st3_thi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1904"};

st3_thi_imm.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #6";
};

op st3_thi_reg( 0b0[1] : shl<2> index1[1] : 0b001101100[9] : rm[5] : 0b011[3] : index0[2] : 0b0[1] : rn[5] : rt[5] );
st3_thi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"357"};

st3_thi_reg.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st3_tsi_imm( 0b0[1] : shl<1> index1[1] : 0b00110110011111101[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
st3_tsi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"2003"};

st3_tsi_imm.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #12";
};

op st3_tsi_reg( 0b0[1] : shl<1> index1[1] : 0b001101100[9] : rm[5] : 0b101[3] : index0[1] : 0b00[2] : rn[5] : rt[5] );
st3_tsi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"443"};

st3_tsi_reg.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st3_tdi_imm( 0b0[1] : index[1] : 0b00110110011111101001[20] : rn[5] : rt[5] );
st3_tdi_imm.var format : {char const*} = {"2027"};

st3_tdi_imm.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #24";
};

op st3_tdi_reg( 0b0[1] : index[1] : 0b001101100[9] : rm[5] : 0b101001[6] : rn[5] : rt[5] );
st3_tdi_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"530"};

st3_tdi_reg.disasm = {
  sink << "st3\t" << DisasmBunch(rt,3,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st4_q8b( 0b0000110000000000000000[22] : rn[5] : rt[5] );
st4_q8b.var format : {char const*} = {"2828"};

st4_q8b.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "]";
};

st4_q8b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
};

op st4_q16b( 0b0100110000000000000000[22] : rn[5] : rt[5] );
st4_q16b.var format : {char const*} = {"2660"};

st4_q16b.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "]";
};

st4_q16b.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
};

op st4_q4h( 0b0000110000000000000001[22] : rn[5] : rt[5] );
st4_q4h.var format : {char const*} = {"2768"};

st4_q4h.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "]";
};

st4_q4h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st4_q8h( 0b0100110000000000000001[22] : rn[5] : rt[5] );
st4_q8h.var format : {char const*} = {"2858"};

st4_q8h.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "]";
};

st4_q8h.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st4_q2s( 0b0000110000000000000010[22] : rn[5] : rt[5] );
st4_q2s.var format : {char const*} = {"2738"};

st4_q2s.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "]";
};

st4_q2s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

};

op st4_q4s( 0b0100110000000000000010[22] : rn[5] : rt[5] );
st4_q4s.var format : {char const*} = {"2798"};

st4_q4s.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "]";
};

st4_q4s.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st4_q2d( 0b0100110000000000000011[22] : rn[5] : rt[5] );
st4_q2d.var format : {char const*} = {"2708"};

st4_q2d.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "]";
};

st4_q2d.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

};

op st4_q8b_imm( 0b0000110010011111000000[22] : rn[5] : rt[5] );
st4_q8b_imm.var format : {char const*} = {"2830"};

st4_q8b_imm.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "], #32";
};

st4_q8b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + U64(32) );
};

op st4_q8b_reg( 0b00001100100[11] : rm[5] : 0b000000[6] : rn[5] : rt[5] );
st4_q8b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1756"};

st4_q8b_reg.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,8,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st4_q8b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st4_q16b_imm( 0b0100110010011111000000[22] : rn[5] : rt[5] );
st4_q16b_imm.var format : {char const*} = {"2662"};

st4_q16b_imm.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "], #64";
};

st4_q16b_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + U64(64) );
};

op st4_q16b_reg( 0b01001100100[11] : rm[5] : 0b000000[6] : rn[5] : rt[5] );
st4_q16b_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1672"};

st4_q16b_reg.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,16,0) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st4_q16b_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  for (unsigned e = 0; e < 16; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*1), cpu.GetVU8((rt+s)%32, e) );
    }
  }
  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st4_q4h_imm( 0b0000110010011111000001[22] : rn[5] : rt[5] );
st4_q4h_imm.var format : {char const*} = {"2770"};

st4_q4h_imm.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "], #32";
};

st4_q4h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(32) );
};

op st4_q4h_reg( 0b00001100100[11] : rm[5] : 0b000001[6] : rn[5] : rt[5] );
st4_q4h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1726"};

st4_q4h_reg.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,4,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st4_q4h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st4_q8h_imm( 0b0100110010011111000001[22] : rn[5] : rt[5] );
st4_q8h_imm.var format : {char const*} = {"2860"};

st4_q8h_imm.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "], #64";
};

st4_q8h_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(64) );
};

op st4_q8h_reg( 0b01001100100[11] : rm[5] : 0b000001[6] : rn[5] : rt[5] );
st4_q8h_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1771"};

st4_q8h_reg.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,8,1) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st4_q8h_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 8; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*2), cpu.GetVU16((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st4_q2s_imm( 0b0000110010011111000010[22] : rn[5] : rt[5] );
st4_q2s_imm.var format : {char const*} = {"2740"};

st4_q2s_imm.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "], #32";
};

st4_q2s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + U64(32) );
};

op st4_q2s_reg( 0b00001100100[11] : rm[5] : 0b000010[6] : rn[5] : rt[5] );
st4_q2s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1711"};

st4_q2s_reg.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,2,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st4_q2s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,8); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st4_q4s_imm( 0b0100110010011111000010[22] : rn[5] : rt[5] );
st4_q4s_imm.var format : {char const*} = {"2800"};

st4_q4s_imm.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "], #64";
};

st4_q4s_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(64) );
};

op st4_q4s_reg( 0b01001100100[11] : rm[5] : 0b000010[6] : rn[5] : rt[5] );
st4_q4s_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1741"};

st4_q4s_reg.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,4,2) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st4_q4s_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 4; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*4), cpu.GetVU32((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st4_q2d_imm( 0b0100110010011111000011[22] : rn[5] : rt[5] );
st4_q2d_imm.var format : {char const*} = {"2710"};

st4_q2d_imm.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "], #64";
};

st4_q2d_imm.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + U64(64) );
};

op st4_q2d_reg( 0b01001100100[11] : rm[5] : 0b000011[6] : rn[5] : rt[5] );
st4_q2d_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"1696"};

st4_q2d_reg.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,2,3) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

st4_q2d_reg.execute = {
  typedef typename ARCH::U64 U64;

  U64 addr( cpu.GetGSR(rn) );

  for (unsigned e = 0; e < 2; ++e) {
    for (unsigned s = 0; s < 4; ++s) {
      cpu.MemWrite32( addr + U64((e*4+s)*8), cpu.GetVU64((rt+s)%32, e) );
    }
  }
  for (unsigned r = 0; r < 4; ++r) { cpu.ClearHighV((rt+r)%32,16); }

  cpu.SetGSR(rn, addr + cpu.GetGZR(rm) );
};

op st4_qbi( 0b0[1] : shl<3> index1[1] : 0b00110100100000001[17] : index0[3] : rn[5] : rt[5] );
st4_qbi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1804"};

st4_qbi.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st4_qhi( 0b0[1] : shl<2> index1[1] : 0b00110100100000011[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
st4_qhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1898"};

st4_qhi.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st4_qsi( 0b0[1] : shl<1> index1[1] : 0b00110100100000101[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
st4_qsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1997"};

st4_qsi.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st4_qdi( 0b0[1] : index[1] : 0b00110100100000101001[20] : rn[5] : rt[5] );
st4_qdi.var format : {char const*} = {"2021"};

st4_qdi.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "]";
};

op st4_qbi_imm( 0b0[1] : shl<3> index1[1] : 0b00110110111111001[17] : index0[3] : rn[5] : rt[5] );
st4_qbi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1806"};

st4_qbi_imm.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #4";
};

op st4_qbi_reg( 0b0[1] : shl<3> index1[1] : 0b001101101[9] : rm[5] : 0b001[3] : index0[3] : rn[5] : rt[5] );
st4_qbi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"251"};

st4_qbi_reg.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,0,0) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st4_qhi_imm( 0b0[1] : shl<2> index1[1] : 0b00110110111111011[17] : index0[2] : 0b0[1] : rn[5] : rt[5] );
st4_qhi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1900"};

st4_qhi_imm.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #8";
};

op st4_qhi_reg( 0b0[1] : shl<2> index1[1] : 0b001101101[9] : rm[5] : 0b011[3] : index0[2] : 0b0[1] : rn[5] : rt[5] );
st4_qhi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"355"};

st4_qhi_reg.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,0,1) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st4_qsi_imm( 0b0[1] : shl<1> index1[1] : 0b00110110111111101[17] : index0[1] : 0b00[2] : rn[5] : rt[5] );
st4_qsi_imm.var index : {unsigned} = {index1|index0}, format : {char const*} = {"1999"};

st4_qsi_imm.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #16";
};

op st4_qsi_reg( 0b0[1] : shl<1> index1[1] : 0b001101101[9] : rm[5] : 0b101[3] : index0[1] : 0b00[2] : rn[5] : rt[5] );
st4_qsi_reg.var reject : {Reject} = {rm == 31}, index : {unsigned} = {index1|index0}, format : {char const*} = {"441"};

st4_qsi_reg.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,0,2) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op st4_qdi_imm( 0b0[1] : index[1] : 0b00110110111111101001[20] : rn[5] : rt[5] );
st4_qdi_imm.var format : {char const*} = {"2023"};

st4_qdi_imm.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], #32";
};

op st4_qdi_reg( 0b0[1] : index[1] : 0b001101101[9] : rm[5] : 0b101001[6] : rn[5] : rt[5] );
st4_qdi_reg.var reject : {Reject} = {rm == 31}, format : {char const*} = {"528"};

st4_qdi_reg.disasm = {
  sink << "st4\t" << DisasmBunch(rt,4,0,3) << DisasmSubscript(index) << ", [" << DisasmGSXR(rn) << "], " << DisasmGZXR(rm);
};

op stnp_do( 0b0110110000[10] : shl<3> sext imm[7] : rt2[5] : rn[5] : rt[5] );
stnp_do.var format : {char const*} = {"39"};

stnp_do.disasm = {
  sink << "stnp\t" << DisasmD(rt) << ", " << DisasmD(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

op stnp_qo( 0b1010110000[10] : shl<4> sext imm[7] : rt2[5] : rn[5] : rt[5] );
stnp_qo.var format : {char const*} = {"51"};

stnp_qo.disasm = {
  sink << "stnp\t" << DisasmQ(rt) << ", " << DisasmQ(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

op stnp_so( 0b0010110000[10] : shl<2> sext imm[7] : rt2[5] : rn[5] : rt[5] );
stnp_so.var format : {char const*} = {"61"};

stnp_so.disasm = {
  sink << "stnp\t" << DisasmS(rt) << ", " << DisasmS(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

/*******************************************************************
 * STP (SIMD&FP)
 *
 * Store pair of SIMD&FP registers
 */

op stp_spo( 0b0010110010[10] : shl<2> sext imm[7] : rt2[5] : rn[5] : rt[5] );
stp_spo.var format : {char const*} = {"66"};

stp_spo.disasm = {
  sink << "stp\t" << DisasmS(rt) << ", " << DisasmS(rt2) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

stp_spo.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) );
  U32 data0( cpu.GetVU32(rt,0) ), data1( cpu.GetVU32(rt2,0) );
  cpu.MemWrite32( addr + U64(0), data0 );
  cpu.MemWrite32( addr + U64(4), data1 );
  cpu.SetGSR(rn, addr + U64(S64(imm)));
};

op stp_dpo( 0b0110110010[10] : shl<3> sext imm[7] : rt2[5] : rn[5] : rt[5] );
stp_dpo.var format : {char const*} = {"44"};

stp_dpo.disasm = {
  sink << "stp\t" << DisasmD(rt) << ", " << DisasmD(rt2) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

stp_dpo.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) );
  U64 data0( cpu.GetVU64(rt,0) ), data1( cpu.GetVU64(rt2,0) );
  cpu.MemWrite64( addr + U64(0), data0 );
  cpu.MemWrite64( addr + U64(8), data1 );
  cpu.SetGSR(rn, addr + U64(S64(imm)));
};

op stp_qpo( 0b1010110010[10] : shl<4> sext imm[7] : rt2[5] : rn[5] : rt[5] );
stp_qpo.var format : {char const*} = {"56"};

stp_qpo.disasm = {
  sink << "stp\t" << DisasmQ(rt) << ", " << DisasmQ(rt2) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

op stp_sop( 0b0010110110[10] : shl<2> sext imm[7] : rt2[5] : rn[5] : rt[5] );
stp_sop.var format : {char const*} = {"64"};

stp_sop.disasm = {
  sink << "stp\t" << DisasmS(rt) << ", " << DisasmS(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

stp_sop.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U32 data0( cpu.GetVU32(rt,0) ), data1( cpu.GetVU32(rt2,0) );
  cpu.MemWrite32( addr + U64(0), data0 );
  cpu.MemWrite32( addr + U64(4), data1 );
  cpu.SetGSR(rn, addr);
};

op stp_dop( 0b0110110110[10] : shl<3> sext imm[7] : rt2[5] : rn[5] : rt[5] );
stp_dop.var format : {char const*} = {"42"};

stp_dop.disasm = {
  sink << "stp\t" << DisasmD(rt) << ", " << DisasmD(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

stp_dop.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U64 data0( cpu.GetVU64(rt,0) ), data1( cpu.GetVU64(rt2,0) );
  cpu.MemWrite64( addr + U64(0), data0 );
  cpu.MemWrite64( addr + U64(8), data1 );
  cpu.SetGSR(rn, addr);
};

op stp_qop( 0b1010110110[10] : shl<4> sext imm[7] : rt2[5] : rn[5] : rt[5] );
stp_qop.var format : {char const*} = {"54"};

stp_qop.disasm = {
  sink << "stp\t" << DisasmQ(rt) << ", " << DisasmQ(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

op stp_so( 0b0010110100[10] : shl<2> sext imm[7] : rt2[5] : rn[5] : rt[5] );
stp_so.var format : {char const*} = {"62"};

stp_so.disasm = {
  sink << "stp\t" << DisasmS(rt) << ", " << DisasmS(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

stp_so.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U32 data0( cpu.GetVU32(rt,0) ), data1( cpu.GetVU32(rt2,0) );
  cpu.MemWrite32( addr + U64(0), data0 );
  cpu.MemWrite32( addr + U64(4), data1 );
};

op stp_do( 0b0110110100[10] : shl<3> sext imm[7] : rt2[5] : rn[5] : rt[5] );
stp_do.var format : {char const*} = {"40"};

stp_do.disasm = {
  sink << "stp\t" << DisasmD(rt) << ", " << DisasmD(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

stp_do.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U64 data0( cpu.GetVU64(rt,0) ), data1( cpu.GetVU64(rt2,0) );
  cpu.MemWrite64( addr + U64(0), data0 );
  cpu.MemWrite64( addr + U64(8), data1 );
};

op stp_qo( 0b1010110100[10] : shl<4> sext imm[7] : rt2[5] : rn[5] : rt[5] );
stp_qo.var format : {char const*} = {"52"};

stp_qo.disasm = {
  sink << "stp\t" << DisasmQ(rt) << ", " << DisasmQ(rt2) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

/*
 * end of STP (SIMD&FP)
 *******************************************************************/

/*******************************************************************
 * STR (immediate, SIMD&FP)
 *
 * Store SIMD&FP register (immediate offset)
 */

op str_bsopost( 0b00111100000[11] : sext imm[9] : 0b01[2] : rn[5] : rt[5] );
str_bsopost.var format : {char const*} = {"264"};

str_bsopost.disasm = {
  sink << "str\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

str_bsopost.execute = {
  typedef typename ARCH::U8 U8;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) );
  U8 data( cpu.GetVU8(rt,0) );
  cpu.MemWrite8(addr, data);
  cpu.SetGSR(rn, addr + U64(S64(imm)) );
};

op str_hsopost( 0b01111100000[11] : sext imm[9] : 0b01[2] : rn[5] : rt[5] );
str_hsopost.var format : {char const*} = {"277"};

str_hsopost.disasm = {
  sink << "str\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

str_hsopost.execute = {
  typedef typename ARCH::U16 U16;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) );
  U16 data( cpu.GetVU16(rt,0) );
  cpu.MemWrite16(addr, data);
  cpu.SetGSR(rn, addr + U64(S64(imm)) );
};

op str_ssopost( 0b10111100000[11] : sext imm[9] : 0b01[2] : rn[5] : rt[5] );
str_ssopost.var format : {char const*} = {"290"};

str_ssopost.disasm = {
  sink << "str\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

str_ssopost.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) );
  U32 data( cpu.GetVU32(rt,0) );
  cpu.MemWrite32(addr, data);
  cpu.SetGSR(rn, addr + U64(S64(imm)) );
};

op str_dsopost( 0b11111100000[11] : sext imm[9] : 0b01[2] : rn[5] : rt[5] );
str_dsopost.var format : {char const*} = {"271"};

str_dsopost.disasm = {
  sink << "str\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

str_dsopost.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) );
  U64 data( cpu.GetVU64(rt,0) );
  cpu.MemWrite64(addr, data);
  cpu.SetGSR(rn, addr + U64(S64(imm)) );
};

op str_qsopost( 0b00111100100[11] : sext imm[9] : 0b01[2] : rn[5] : rt[5] );
str_qsopost.var format : {char const*} = {"283"};

str_qsopost.disasm = {
  sink << "str\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "]," << DisasmI(imm);
};

op str_bsopre( 0b00111100000[11] : sext imm[9] : 0b11[2] : rn[5] : rt[5] );
str_bsopre.var format : {char const*} = {"262"};

str_bsopre.disasm = {
  sink << "str\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

str_bsopre.execute = {
  typedef typename ARCH::U8 U8;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U8 data( cpu.GetVU8(rt,0) );
  cpu.MemWrite8(addr, data);
  cpu.SetGSR(rn, addr);
};

op str_hsopre( 0b01111100000[11] : sext imm[9] : 0b11[2] : rn[5] : rt[5] );
str_hsopre.var format : {char const*} = {"275"};

str_hsopre.disasm = {
  sink << "str\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

str_hsopre.execute = {
  typedef typename ARCH::U16 U16;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U16 data( cpu.GetVU16(rt,0) );
  cpu.MemWrite16(addr, data);
  cpu.SetGSR(rn, addr);
};

op str_ssopre( 0b10111100000[11] : sext imm[9] : 0b11[2] : rn[5] : rt[5] );
str_ssopre.var format : {char const*} = {"288"};

str_ssopre.disasm = {
  sink << "str\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

str_ssopre.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U32 data( cpu.GetVU32(rt,0) );
  cpu.MemWrite32(addr, data);
  cpu.SetGSR(rn, addr);
};

op str_dsopre( 0b11111100000[11] : sext imm[9] : 0b11[2] : rn[5] : rt[5] );
str_dsopre.var format : {char const*} = {"269"};

str_dsopre.disasm = {
  sink << "str\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

str_dsopre.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U64 data( cpu.GetVU64(rt,0) );
  cpu.MemWrite64(addr, data);
  cpu.SetGSR(rn, addr);
};

op str_qsopre( 0b00111100100[11] : sext imm[9] : 0b11[2] : rn[5] : rt[5] );
str_qsopre.var format : {char const*} = {"281"};

str_qsopre.disasm = {
  sink << "str\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]!";
};

op str_buo( 0b0011110100[10] : imm[12] : rn[5] : rt[5] );
str_buo.var format : {char const*} = {"36"};

str_buo.disasm = {
  sink << "str\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

str_buo.execute = {
  typedef typename ARCH::U8 U8;
  typedef typename ARCH::U64 U64;
  
  U64 addr( cpu.GetGSR(rn) + U64(imm) );
  U8 data( cpu.GetVU8(rt,0) );
  cpu.MemWrite8(addr, data);
};

op str_huo( 0b0111110100[10] : shl<1> imm[12] : rn[5] : rt[5] );
str_huo.var format : {char const*} = {"48"};

str_huo.disasm = {
  sink << "str\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

str_huo.execute = {
  typedef typename ARCH::U16 U16;
  typedef typename ARCH::U64 U64;
  
  U64 addr( cpu.GetGSR(rn) + U64(imm) );
  U16 data( cpu.GetVU16(rt,0) );
  cpu.MemWrite16(addr, data);
};

op str_suo( 0b1011110100[10] : shl<2> imm[12] : rn[5] : rt[5] );
str_suo.var format : {char const*} = {"68"};

str_suo.disasm = {
  sink << "str\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

str_suo.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  
  U64 addr( cpu.GetGSR(rn) + U64(imm) );
  U32 data( cpu.GetVU32(rt,0) );
  cpu.MemWrite32(addr, data);
};

op str_duo( 0b1111110100[10] : shl<3> imm[12] : rn[5] : rt[5] );
str_duo.var format : {char const*} = {"46"};

str_duo.disasm = {
  sink << "str\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

str_duo.execute = {
  typedef typename ARCH::U64 U64;
  
  U64 addr( cpu.GetGSR(rn) + U64(imm) );
  U64 data( cpu.GetVU64(rt,0) );
  cpu.MemWrite64(addr, data);
};

op str_quo( 0b0011110110[10] : shl<4> imm[12] : rn[5] : rt[5] );
str_quo.var format : {char const*} = {"58"};

str_quo.disasm = {
  sink << "str\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

str_quo.execute = {
  /* XXX: handling of quad vector */
  typedef typename ARCH::U64 U64;
  
  U64 addr( cpu.GetGSR(rn) + U64(imm) );
  U64 data0( cpu.GetVU64(rt,0) ), data1( cpu.GetVU64(rt,1) );
  cpu.MemWrite64(addr + U64(0), data0);
  cpu.MemWrite64(addr + U64(8), data1);
};

/*
 * end of STR (immediate, SIMD&FP)
 *******************************************************************/

/*******************************************************************
 * STR (register, SIMD&FP)
 *
 * Store SIMD&FP register (register offset)
 */

op str_bxwu( 0b00111100001[11] : rm[5] : 0b010[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_bxwu.var shift : {uint8_t} = {s*0}, format : {char const*} = {"588"};

str_bxwu.disasm = {
  sink << "str\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",uxtw" << DisasmINZ(" ", shift) << "]";
};

str_bxwu.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::U8 U8;

  U64 offset( U64(U32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U8 data( cpu.GetVU8(rt,0) );
  cpu.MemWrite8(addr, data);
};

op str_bxxu( 0b00111100001[11] : rm[5] : 0b011[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_bxxu.var format : {char const*} = {"704"}, shift : {uint8_t} = {s*0};

str_bxxu.disasm = {
  sink << "str\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << DisasmINZ(",lsl ",shift) << "]";
};

str_bxxu.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::U8 U8;

  U64 offset( U64(U64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U8 data( cpu.GetVU8(rt,0) );
  cpu.MemWrite8(addr, data);
};

op str_bxws( 0b00111100001[11] : rm[5] : 0b110[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_bxws.var shift : {uint8_t} = {s*0}, format : {char const*} = {"586"};

str_bxws.disasm = {
  sink << "str\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",sxtw" << DisasmINZ(" ", shift) << "]";
};

str_bxws.execute = {
  typedef typename ARCH::S32 S32;
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::U8 U8;

  U64 offset( S64(S32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U8 data( cpu.GetVU8(rt,0) );
  cpu.MemWrite8(addr, data);
};

op str_bxxs( 0b00111100001[11] : rm[5] : 0b111[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_bxxs.var shift : {uint8_t} = {s*0}, format : {char const*} = {"590"};

str_bxxs.disasm = {
  sink << "str\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << ",sxtx" << DisasmINZ(" ", shift) << "]";
};

str_bxxs.execute = {
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::U8 U8;

  U64 offset( S64(S64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U8 data( cpu.GetVU8(rt,0) );
  cpu.MemWrite8(addr, data);
};

op str_hxwu( 0b01111100001[11] : rm[5] : 0b010[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_hxwu.var shift : {uint8_t} = {s*1}, format : {char const*} = {"600"};

str_hxwu.disasm = {
  sink << "str\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",uxtw" << DisasmINZ(" ", shift) << "]";
};

str_hxwu.execute = {
  typedef typename ARCH::U16 U16;
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( U64(U32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U16 data( cpu.GetVU16(rt,0) );
  cpu.MemWrite16(addr, data);
};

op str_hxxu( 0b01111100001[11] : rm[5] : 0b011[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_hxxu.var format : {char const*} = {"763"}, shift : {uint8_t} = {s*1};

str_hxxu.disasm = {
  sink << "str\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << DisasmINZ(",lsl ",shift) << "]";
};

str_hxxu.execute = {
  typedef typename ARCH::U16 U16;
  typedef typename ARCH::U64 U64;

  U64 offset( U64(U64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U16 data( cpu.GetGZR(rt) );
  cpu.MemWrite16(addr, data);
};

op str_hxws( 0b01111100001[11] : rm[5] : 0b110[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_hxws.var shift : {uint8_t} = {s*1}, format : {char const*} = {"598"};

str_hxws.disasm = {
  sink << "str\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",sxtw" << DisasmINZ(" ", shift) << "]";
};

str_hxws.execute = {
  typedef typename ARCH::S32 S32;
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U16 U16;
  typedef typename ARCH::U64 U64;

  U64 offset( S64(S32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U16 data( cpu.GetVU16(rt,0) );
  cpu.MemWrite16(addr, data);
};

op str_hxxs( 0b01111100001[11] : rm[5] : 0b111[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_hxxs.var shift : {uint8_t} = {s*1}, format : {char const*} = {"602"};

str_hxxs.disasm = {
  sink << "str\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << ",sxtx" << DisasmINZ(" ", shift) << "]";
};

str_hxxs.execute = {
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U16 U16;
  typedef typename ARCH::U64 U64;

  U64 offset( S64(S64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U16 data( cpu.GetVU16(rt,0) );
  cpu.MemWrite16(addr, data);
};

op str_sxwu( 0b10111100001[11] : rm[5] : 0b010[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_sxwu.var shift : {uint8_t} = {s*2}, format : {char const*} = {"612"};

str_sxwu.disasm = {
  sink << "str\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",uxtw" << DisasmINZ(" ", shift) << "]";
};

str_sxwu.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( U64(U32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.GetVU32(rt,0) );
  cpu.MemWrite32(addr, data);
};

op str_sxxu( 0b10111100001[11] : rm[5] : 0b011[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_sxxu.var format : {char const*} = {"820"}, shift : {uint8_t} = {s*2};

str_sxxu.disasm = {
  sink << "str\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << DisasmINZ(",lsl ",shift) << "]";
};

str_sxxu.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( U64(U64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.GetVU32(rt,0) );
  cpu.MemWrite32(addr, data);
};

op str_sxws( 0b10111100001[11] : rm[5] : 0b110[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_sxws.var shift : {uint8_t} = {s*2}, format : {char const*} = {"610"};

str_sxws.disasm = {
  sink << "str\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",sxtw" << DisasmINZ(" ", shift) << "]";
};

str_sxws.execute = {
  typedef typename ARCH::S32 S32;
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( S64(S32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.GetVU32(rt,0) );
  cpu.MemWrite32(addr, data);
};

op str_sxxs( 0b10111100001[11] : rm[5] : 0b111[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_sxxs.var shift : {uint8_t} = {s*2}, format : {char const*} = {"614"};

str_sxxs.disasm = {
  sink << "str\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << ",sxtx" << DisasmINZ(" ", shift) << "]";
};

str_sxxs.execute = {
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( S64(S64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U32 data( cpu.GetVU32(rt,0) );
  cpu.MemWrite32(addr, data);
};

op str_dxwu( 0b11111100001[11] : rm[5] : 0b010[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_dxwu.var shift : {uint8_t} = {s*3}, format : {char const*} = {"594"};

str_dxwu.disasm = {
  sink << "str\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",uxtw" << DisasmINZ(" ", shift) << "]";
};

str_dxwu.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;

  U64 offset( U64(U32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U64 data( cpu.GetVU64(rt,0) );
  cpu.MemWrite64(addr, data);
};

op str_dxxu( 0b11111100001[11] : rm[5] : 0b011[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_dxxu.var format : {char const*} = {"749"}, shift : {uint8_t} = {s*3};

str_dxxu.disasm = {
  sink << "str\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << DisasmINZ(",lsl ",shift) << "]";
};

str_dxxu.execute = {
  typedef typename ARCH::U64 U64;

  U64 offset( U64(U64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U64 data( cpu.GetVU64(rt,0) );
  cpu.MemWrite64(addr, data);
};

op str_dxws( 0b11111100001[11] : rm[5] : 0b110[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_dxws.var shift : {uint8_t} = {s*3}, format : {char const*} = {"592"};

str_dxws.disasm = {
  sink << "str\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",sxtw" << DisasmINZ(" ", shift) << "]";
};

str_dxws.execute = {
  typedef typename ARCH::S32 S32;
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U64 U64;

  U64 offset( S64(S32(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U64 data( cpu.GetVU64(rt,0) );
  cpu.MemWrite64(addr, data);
};

op str_dxxs( 0b11111100001[11] : rm[5] : 0b111[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_dxxs.var shift : {uint8_t} = {s*3}, format : {char const*} = {"596"};

str_dxxs.disasm = {
  sink << "str\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << ",sxtx" << DisasmINZ(" ", shift) << "]";
};

str_dxxs.execute = {
  typedef typename ARCH::S64 S64;
  typedef typename ARCH::U64 U64;

  U64 offset( S64(S64(cpu.GetGZR(rm))) << shift ), addr( cpu.GetGSR(rn) + offset );
  U64 data( cpu.GetVU64(rt,0) );
  cpu.MemWrite64(addr, data);
};

op str_qxwu( 0b00111100101[11] : rm[5] : 0b010[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_qxwu.var shift : {uint8_t} = {s*4}, format : {char const*} = {"606"};

str_qxwu.disasm = {
  sink << "str\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",uxtw" << DisasmINZ(" ", shift) << "]";
};

op str_qxxu( 0b00111100101[11] : rm[5] : 0b011[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_qxxu.var format : {char const*} = {"772"}, shift : {uint8_t} = {s*4};

str_qxxu.disasm = {
  sink << "str\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << DisasmINZ(",lsl ",shift) << "]";
};

op str_qxws( 0b00111100101[11] : rm[5] : 0b110[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_qxws.var shift : {uint8_t} = {s*4}, format : {char const*} = {"604"};

str_qxws.disasm = {
  sink << "str\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZWR(rm) << ",sxtw" << DisasmINZ(" ", shift) << "]";
};

op str_qxxs( 0b00111100101[11] : rm[5] : 0b111[3] : s[1] : 0b10[2] : rn[5] : rt[5] );
str_qxxs.var shift : {uint8_t} = {s*4}, format : {char const*} = {"608"};

str_qxxs.disasm = {
  sink << "str\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmGZXR(rm) << ",sxtx" << DisasmINZ(" ", shift) << "]";
};

/*
 * end of STR (register, SIMD&FP)
 *******************************************************************/

/*******************************************************************
 * STUR (SIMD&FP)
 *
 * Store SIMD&FP register (unscaled offset)
 */

op stur_bbo( 0b00111100000[11] : sext imm[9] : 0b00[2] : rn[5] : rt[5] );
stur_bbo.var format : {char const*} = {"260"};

stur_bbo.disasm = {
  sink << "str\t" << DisasmB(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

stur_bbo.execute = {
  typedef typename ARCH::U8 U8;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U8 data( cpu.GetVU8(rt,0) );
  cpu.MemWrite8(addr, data);
};

op stur_hbo( 0b01111100000[11] : sext imm[9] : 0b00[2] : rn[5] : rt[5] );
stur_hbo.var format : {char const*} = {"273"};

stur_hbo.disasm = {
  sink << "str\t" << DisasmH(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

stur_hbo.execute = {
  typedef typename ARCH::U16 U16;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U16 data( cpu.GetVU16(rt,0) );
  cpu.MemWrite16(addr, data);
};

op stur_sbo( 0b10111100000[11] : sext imm[9] : 0b00[2] : rn[5] : rt[5] );
stur_sbo.var format : {char const*} = {"286"};

stur_sbo.disasm = {
  sink << "str\t" << DisasmS(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

stur_sbo.execute = {
  typedef typename ARCH::U32 U32;
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U32 data( cpu.GetVU32(rt,0) );
  cpu.MemWrite32(addr, data);
};

op stur_dbo( 0b11111100000[11] : sext imm[9] : 0b00[2] : rn[5] : rt[5] );
stur_dbo.var format : {char const*} = {"267"};

stur_dbo.disasm = {
  sink << "str\t" << DisasmD(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

stur_dbo.execute = {
  typedef typename ARCH::U64 U64;
  typedef typename ARCH::S64 S64;
  
  U64 addr( cpu.GetGSR(rn) + U64(S64(imm)) );
  U64 data( cpu.GetVU64(rt,0) );
  cpu.MemWrite64(addr, data);
};

op stur_qbo( 0b00111100100[11] : sext imm[9] : 0b00[2] : rn[5] : rt[5] );
stur_qbo.var format : {char const*} = {"279"};

stur_qbo.disasm = {
  sink << "str\t" << DisasmQ(rt) << ", [" << DisasmGSXR(rn) << "," << DisasmI(imm) << "]";
};

/*
 * end of STUR (SIMD&FP)
 *******************************************************************/

op sub_ddd( 0b01111110111[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
sub_ddd.var format : {char const*} = {"738"};

sub_ddd.disasm = {
  sink << "sub\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op sub_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
sub_v16bv16bv16b.var format : {char const*} = {"858"};

sub_v16bv16bv16b.disasm = {
  sink << "sub\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op sub_v2dv2dv2d( 0b01101110111[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
sub_v2dv2dv2d.var format : {char const*} = {"932"};

sub_v2dv2dv2d.disasm = {
  sink << "sub\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op sub_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
sub_v2sv2sv2s.var format : {char const*} = {"1073"};

sub_v2sv2sv2s.disasm = {
  sink << "sub\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op sub_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
sub_v4hv4hv4h.var format : {char const*} = {"1123"};

sub_v4hv4hv4h.disasm = {
  sink << "sub\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op sub_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
sub_v4sv4sv4s.var format : {char const*} = {"1254"};

sub_v4sv4sv4s.disasm = {
  sink << "sub\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op sub_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
sub_v8bv8bv8b.var format : {char const*} = {"1332"};

sub_v8bv8bv8b.disasm = {
  sink << "sub\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op sub_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b100001[6] : rn[5] : rd[5] );
sub_v8hv8hv8h.var format : {char const*} = {"1436"};

sub_v8hv8hv8h.disasm = {
  sink << "sub\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op subhn2_v16bv8hv8h( 0b01001110001[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
subhn2_v16bv8hv8h.var format : {char const*} = {"883"};

subhn2_v16bv8hv8h.disasm = {
  sink << "subhn2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op subhn2_v4sv2dv2d( 0b01001110101[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
subhn2_v4sv2dv2d.var format : {char const*} = {"1160"};

subhn2_v4sv2dv2d.disasm = {
  sink << "subhn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op subhn2_v8hv4sv4s( 0b01001110011[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
subhn2_v8hv4sv4s.var format : {char const*} = {"1384"};

subhn2_v8hv4sv4s.disasm = {
  sink << "subhn2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op subhn_v2sv2dv2d( 0b00001110101[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
subhn_v2sv2dv2d.var format : {char const*} = {"1002"};

subhn_v2sv2dv2d.disasm = {
  sink << "subhn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op subhn_v4hv4sv4s( 0b00001110011[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
subhn_v4hv4sv4s.var format : {char const*} = {"1148"};

subhn_v4hv4sv4s.disasm = {
  sink << "subhn\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op subhn_v8bv8hv8h( 0b00001110001[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
subhn_v8bv8hv8h.var format : {char const*} = {"1357"};

subhn_v8bv8hv8h.disasm = {
  sink << "subhn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op suqadd_bb( 0b0101111000100000001110[22] : rn[5] : rd[5] );
suqadd_bb.var format : {char const*} = {"2163"};

suqadd_bb.disasm = {
  sink << "suqadd\t" << DisasmB(rd) << ", " << DisasmB(rn);
};

op suqadd_dd( 0b0101111011100000001110[22] : rn[5] : rd[5] );
suqadd_dd.var format : {char const*} = {"2207"};

suqadd_dd.disasm = {
  sink << "suqadd\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op suqadd_hh( 0b0101111001100000001110[22] : rn[5] : rd[5] );
suqadd_hh.var format : {char const*} = {"2239"};

suqadd_hh.disasm = {
  sink << "suqadd\t" << DisasmH(rd) << ", " << DisasmH(rn);
};

op suqadd_ss( 0b0101111010100000001110[22] : rn[5] : rd[5] );
suqadd_ss.var format : {char const*} = {"2293"};

suqadd_ss.disasm = {
  sink << "suqadd\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op suqadd_v16b16b( 0b0100111000100000001110[22] : rn[5] : rd[5] );
suqadd_v16b16b.var format : {char const*} = {"2341"};

suqadd_v16b16b.disasm = {
  sink << "suqadd\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op suqadd_v2d2d( 0b0100111011100000001110[22] : rn[5] : rd[5] );
suqadd_v2d2d.var format : {char const*} = {"2383"};

suqadd_v2d2d.disasm = {
  sink << "suqadd\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op suqadd_v2s2s( 0b0000111010100000001110[22] : rn[5] : rd[5] );
suqadd_v2s2s.var format : {char const*} = {"2440"};

suqadd_v2s2s.disasm = {
  sink << "suqadd\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op suqadd_v4h4h( 0b0000111001100000001110[22] : rn[5] : rd[5] );
suqadd_v4h4h.var format : {char const*} = {"2467"};

suqadd_v4h4h.disasm = {
  sink << "suqadd\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1);
};

op suqadd_v4s4s( 0b0100111010100000001110[22] : rn[5] : rd[5] );
suqadd_v4s4s.var format : {char const*} = {"2523"};

suqadd_v4s4s.disasm = {
  sink << "suqadd\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op suqadd_v8b8b( 0b0000111000100000001110[22] : rn[5] : rd[5] );
suqadd_v8b8b.var format : {char const*} = {"2556"};

suqadd_v8b8b.disasm = {
  sink << "suqadd\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
};

op suqadd_v8hv8h( 0b0100111001100000001110[22] : rn[5] : rd[5] );
suqadd_v8hv8h.var format : {char const*} = {"2585"};

suqadd_v8hv8h.disasm = {
  sink << "suqadd\t" << DisasmTV(rd,8,1) <<  ", " << DisasmTV(rn,8,1);
};

op tbl_v16b1( 0b01001110000[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
tbl_v16b1.var format : {char const*} = {"890"};

tbl_v16b1.disasm = {
  sink << "tbl\t" << DisasmTV(rd,16,0) << ", " << DisasmBunch(rn,1,16,0) << ", " << DisasmTV(rm,16,0);
};

op tbl_v16b2( 0b01001110000[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
tbl_v16b2.var format : {char const*} = {"888"};

tbl_v16b2.disasm = {
  sink << "tbl\t" << DisasmTV(rd,16,0) << ", " << DisasmBunch(rn,2,16,0) << ", " << DisasmTV(rm,16,0);
};

op tbl_v16b3( 0b01001110000[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
tbl_v16b3.var format : {char const*} = {"886"};

tbl_v16b3.disasm = {
  sink << "tbl\t" << DisasmTV(rd,16,0) << ", " << DisasmBunch(rn,3,16,0) << ", " << DisasmTV(rm,16,0);
};

op tbl_v16b4( 0b01001110000[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
tbl_v16b4.var format : {char const*} = {"884"};

tbl_v16b4.disasm = {
  sink << "tbl\t" << DisasmTV(rd,16,0) << ", " << DisasmBunch(rn,4,16,0) << ", " << DisasmTV(rm,16,0);
};

op tbl_v8b1( 0b00001110000[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
tbl_v8b1.var format : {char const*} = {"1364"};

tbl_v8b1.disasm = {
  sink << "tbl\t" << DisasmTV(rd,8,0) << ", " << DisasmBunch(rn,1,16,0) << ", " << DisasmTV(rm,8,0);
};

op tbl_v8b2( 0b00001110000[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
tbl_v8b2.var format : {char const*} = {"1362"};

tbl_v8b2.disasm = {
  sink << "tbl\t" << DisasmTV(rd,8,0) << ", " << DisasmBunch(rn,2,16,0) << ", " << DisasmTV(rm,8,0);
};

op tbl_v8b3( 0b00001110000[11] : rm[5] : 0b010000[6] : rn[5] : rd[5] );
tbl_v8b3.var format : {char const*} = {"1360"};

tbl_v8b3.disasm = {
  sink << "tbl\t" << DisasmTV(rd,8,0) << ", " << DisasmBunch(rn,3,16,0) << ", " << DisasmTV(rm,8,0);
};

op tbl_v8b4( 0b00001110000[11] : rm[5] : 0b011000[6] : rn[5] : rd[5] );
tbl_v8b4.var format : {char const*} = {"1358"};

tbl_v8b4.disasm = {
  sink << "tbl\t" << DisasmTV(rd,8,0) << ", " << DisasmBunch(rn,4,16,0) << ", " << DisasmTV(rm,8,0);
};

op tbx_v16b1( 0b01001110000[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
tbx_v16b1.var format : {char const*} = {"891"};

tbx_v16b1.disasm = {
  sink << "tbx\t" << DisasmTV(rd,16,0) << ", " << DisasmBunch(rn,1,16,0) << ", " << DisasmTV(rm,16,0);
};

op tbx_v16b2( 0b01001110000[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
tbx_v16b2.var format : {char const*} = {"889"};

tbx_v16b2.disasm = {
  sink << "tbx\t" << DisasmTV(rd,16,0) << ", " << DisasmBunch(rn,2,16,0) << ", " << DisasmTV(rm,16,0);
};

op tbx_v16b3( 0b01001110000[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
tbx_v16b3.var format : {char const*} = {"887"};

tbx_v16b3.disasm = {
  sink << "tbx\t" << DisasmTV(rd,16,0) << ", " << DisasmBunch(rn,3,16,0) << ", " << DisasmTV(rm,16,0);
};

op tbx_v16b4( 0b01001110000[11] : rm[5] : 0b011100[6] : rn[5] : rd[5] );
tbx_v16b4.var format : {char const*} = {"885"};

tbx_v16b4.disasm = {
  sink << "tbx\t" << DisasmTV(rd,16,0) << ", " << DisasmBunch(rn,4,16,0) << ", " << DisasmTV(rm,16,0);
};

op tbx_v8b1( 0b00001110000[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
tbx_v8b1.var format : {char const*} = {"1365"};

tbx_v8b1.disasm = {
  sink << "tbx\t" << DisasmTV(rd,8,0) << ", " << DisasmBunch(rn,1,16,0) << ", " << DisasmTV(rm,8,0);
};

op tbx_v8b2( 0b00001110000[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
tbx_v8b2.var format : {char const*} = {"1363"};

tbx_v8b2.disasm = {
  sink << "tbx\t" << DisasmTV(rd,8,0) << ", " << DisasmBunch(rn,2,16,0) << ", " << DisasmTV(rm,8,0);
};

op tbx_v8b3( 0b00001110000[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
tbx_v8b3.var format : {char const*} = {"1361"};

tbx_v8b3.disasm = {
  sink << "tbx\t" << DisasmTV(rd,8,0) << ", " << DisasmBunch(rn,3,16,0) << ", " << DisasmTV(rm,8,0);
};

op tbx_v8b4( 0b00001110000[11] : rm[5] : 0b011100[6] : rn[5] : rd[5] );
tbx_v8b4.var format : {char const*} = {"1359"};

tbx_v8b4.disasm = {
  sink << "tbx\t" << DisasmTV(rd,8,0) << ", " << DisasmBunch(rn,4,16,0) << ", " << DisasmTV(rm,8,0);
};

op trn1_v16bv16bv16b( 0b01001110000[11] : rm[5] : 0b001010[6] : rn[5] : rd[5] );
trn1_v16bv16bv16b.var format : {char const*} = {"859"};

trn1_v16bv16bv16b.disasm = {
  sink << "trn1\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op trn1_v2dv2dv2d( 0b01001110110[11] : rm[5] : 0b001010[6] : rn[5] : rd[5] );
trn1_v2dv2dv2d.var format : {char const*} = {"933"};

trn1_v2dv2dv2d.disasm = {
  sink << "trn1\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op trn1_v2sv2sv2s( 0b00001110100[11] : rm[5] : 0b001010[6] : rn[5] : rd[5] );
trn1_v2sv2sv2s.var format : {char const*} = {"1074"};

trn1_v2sv2sv2s.disasm = {
  sink << "trn1\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op trn1_v4hv4hv4h( 0b00001110010[11] : rm[5] : 0b001010[6] : rn[5] : rd[5] );
trn1_v4hv4hv4h.var format : {char const*} = {"1124"};

trn1_v4hv4hv4h.disasm = {
  sink << "trn1\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op trn1_v4sv4sv4s( 0b01001110100[11] : rm[5] : 0b001010[6] : rn[5] : rd[5] );
trn1_v4sv4sv4s.var format : {char const*} = {"1255"};

trn1_v4sv4sv4s.disasm = {
  sink << "trn1\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op trn1_v8bv8bv8b( 0b00001110000[11] : rm[5] : 0b001010[6] : rn[5] : rd[5] );
trn1_v8bv8bv8b.var format : {char const*} = {"1333"};

trn1_v8bv8bv8b.disasm = {
  sink << "trn1\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op trn1_v8hv8hv8h( 0b01001110010[11] : rm[5] : 0b001010[6] : rn[5] : rd[5] );
trn1_v8hv8hv8h.var format : {char const*} = {"1437"};

trn1_v8hv8hv8h.disasm = {
  sink << "trn1\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op trn2_v16bv16bv16b( 0b01001110000[11] : rm[5] : 0b011010[6] : rn[5] : rd[5] );
trn2_v16bv16bv16b.var format : {char const*} = {"860"};

trn2_v16bv16bv16b.disasm = {
  sink << "trn2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op trn2_v2dv2dv2d( 0b01001110110[11] : rm[5] : 0b011010[6] : rn[5] : rd[5] );
trn2_v2dv2dv2d.var format : {char const*} = {"934"};

trn2_v2dv2dv2d.disasm = {
  sink << "trn2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op trn2_v2sv2sv2s( 0b00001110100[11] : rm[5] : 0b011010[6] : rn[5] : rd[5] );
trn2_v2sv2sv2s.var format : {char const*} = {"1075"};

trn2_v2sv2sv2s.disasm = {
  sink << "trn2\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op trn2_v4hv4hv4h( 0b00001110010[11] : rm[5] : 0b011010[6] : rn[5] : rd[5] );
trn2_v4hv4hv4h.var format : {char const*} = {"1125"};

trn2_v4hv4hv4h.disasm = {
  sink << "trn2\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op trn2_v4sv4sv4s( 0b01001110100[11] : rm[5] : 0b011010[6] : rn[5] : rd[5] );
trn2_v4sv4sv4s.var format : {char const*} = {"1256"};

trn2_v4sv4sv4s.disasm = {
  sink << "trn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op trn2_v8bv8bv8b( 0b00001110000[11] : rm[5] : 0b011010[6] : rn[5] : rd[5] );
trn2_v8bv8bv8b.var format : {char const*} = {"1334"};

trn2_v8bv8bv8b.disasm = {
  sink << "trn2\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op trn2_v8hv8hv8h( 0b01001110010[11] : rm[5] : 0b011010[6] : rn[5] : rd[5] );
trn2_v8hv8hv8h.var format : {char const*} = {"1438"};

trn2_v8hv8hv8h.disasm = {
  sink << "trn2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op uaba_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b011111[6] : rn[5] : rd[5] );
uaba_v16bv16bv16b.var format : {char const*} = {"861"};

uaba_v16bv16bv16b.disasm = {
  sink << "uaba\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op uaba_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b011111[6] : rn[5] : rd[5] );
uaba_v2sv2sv2s.var format : {char const*} = {"1076"};

uaba_v2sv2sv2s.disasm = {
  sink << "uaba\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op uaba_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b011111[6] : rn[5] : rd[5] );
uaba_v4hv4hv4h.var format : {char const*} = {"1126"};

uaba_v4hv4hv4h.disasm = {
  sink << "uaba\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op uaba_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b011111[6] : rn[5] : rd[5] );
uaba_v4sv4sv4s.var format : {char const*} = {"1257"};

uaba_v4sv4sv4s.disasm = {
  sink << "uaba\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op uaba_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b011111[6] : rn[5] : rd[5] );
uaba_v8bv8bv8b.var format : {char const*} = {"1335"};

uaba_v8bv8bv8b.disasm = {
  sink << "uaba\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op uaba_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b011111[6] : rn[5] : rd[5] );
uaba_v8hv8hv8h.var format : {char const*} = {"1439"};

uaba_v8hv8hv8h.disasm = {
  sink << "uaba\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op uabal2_v2dv4sv4s( 0b01101110101[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
uabal2_v2dv4sv4s.var format : {char const*} = {"984"};

uabal2_v2dv4sv4s.disasm = {
  sink << "uabal2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op uabal2_v4sv8hv8h( 0b01101110011[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
uabal2_v4sv8hv8h.var format : {char const*} = {"1290"};

uabal2_v4sv8hv8h.disasm = {
  sink << "uabal2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op uabal2_v8hv16bv16b( 0b01101110001[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
uabal2_v8hv16bv16b.var format : {char const*} = {"1374"};

uabal2_v8hv16bv16b.disasm = {
  sink << "uabal2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op uabal_v2dv2sv2s( 0b00101110101[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
uabal_v2dv2sv2s.var format : {char const*} = {"965"};

uabal_v2dv2sv2s.disasm = {
  sink << "uabal\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op uabal_v4sv4hv4h( 0b00101110011[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
uabal_v4sv4hv4h.var format : {char const*} = {"1171"};

uabal_v4sv4hv4h.disasm = {
  sink << "uabal\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op uabal_v8hv8bv8b( 0b00101110001[11] : rm[5] : 0b010100[6] : rn[5] : rd[5] );
uabal_v8hv8bv8b.var format : {char const*} = {"1393"};

uabal_v8hv8bv8b.disasm = {
  sink << "uabal\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op uabd_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b011101[6] : rn[5] : rd[5] );
uabd_v16bv16bv16b.var format : {char const*} = {"862"};

uabd_v16bv16bv16b.disasm = {
  sink << "uabd\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op uabd_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b011101[6] : rn[5] : rd[5] );
uabd_v2sv2sv2s.var format : {char const*} = {"1077"};

uabd_v2sv2sv2s.disasm = {
  sink << "uabd\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op uabd_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b011101[6] : rn[5] : rd[5] );
uabd_v4hv4hv4h.var format : {char const*} = {"1127"};

uabd_v4hv4hv4h.disasm = {
  sink << "uabd\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op uabd_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b011101[6] : rn[5] : rd[5] );
uabd_v4sv4sv4s.var format : {char const*} = {"1258"};

uabd_v4sv4sv4s.disasm = {
  sink << "uabd\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op uabd_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b011101[6] : rn[5] : rd[5] );
uabd_v8bv8bv8b.var format : {char const*} = {"1336"};

uabd_v8bv8bv8b.disasm = {
  sink << "uabd\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op uabd_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b011101[6] : rn[5] : rd[5] );
uabd_v8hv8hv8h.var format : {char const*} = {"1440"};

uabd_v8hv8hv8h.disasm = {
  sink << "uabd\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op uabdl2_v2dv4sv4s( 0b01101110101[11] : rm[5] : 0b011100[6] : rn[5] : rd[5] );
uabdl2_v2dv4sv4s.var format : {char const*} = {"985"};

uabdl2_v2dv4sv4s.disasm = {
  sink << "uabdl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op uabdl2_v4sv8hv8h( 0b01101110011[11] : rm[5] : 0b011100[6] : rn[5] : rd[5] );
uabdl2_v4sv8hv8h.var format : {char const*} = {"1291"};

uabdl2_v4sv8hv8h.disasm = {
  sink << "uabdl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op uabdl2_v8hv16bv16b( 0b01101110001[11] : rm[5] : 0b011100[6] : rn[5] : rd[5] );
uabdl2_v8hv16bv16b.var format : {char const*} = {"1375"};

uabdl2_v8hv16bv16b.disasm = {
  sink << "uabdl2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op uabdl_v2dv2sv2s( 0b00101110101[11] : rm[5] : 0b011100[6] : rn[5] : rd[5] );
uabdl_v2dv2sv2s.var format : {char const*} = {"966"};

uabdl_v2dv2sv2s.disasm = {
  sink << "uabdl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op uabdl_v4sv4hv4h( 0b00101110011[11] : rm[5] : 0b011100[6] : rn[5] : rd[5] );
uabdl_v4sv4hv4h.var format : {char const*} = {"1172"};

uabdl_v4sv4hv4h.disasm = {
  sink << "uabdl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op uabdl_v8hv8bv8b( 0b00101110001[11] : rm[5] : 0b011100[6] : rn[5] : rd[5] );
uabdl_v8hv8bv8b.var format : {char const*} = {"1394"};

uabdl_v8hv8bv8b.disasm = {
  sink << "uabdl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op uadalp_v1d2s( 0b0010111010100000011010[22] : rn[5] : rd[5] );
uadalp_v1d2s.var format : {char const*} = {"2354"};

uadalp_v1d2s.disasm = {
  sink << "uadalp\t" << DisasmTV(rd,1,3) << ", " << DisasmTV(rn,2,2);
};

op uadalp_v2d4s( 0b0110111010100000011010[22] : rn[5] : rd[5] );
uadalp_v2d4s.var format : {char const*} = {"2401"};

uadalp_v2d4s.disasm = {
  sink << "uadalp\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2);
};

op uadalp_v2s4h( 0b0010111001100000011010[22] : rn[5] : rd[5] );
uadalp_v2s4h.var format : {char const*} = {"2457"};

uadalp_v2s4h.disasm = {
  sink << "uadalp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,4,1);
};

op uadalp_v4h8b( 0b0010111000100000011010[22] : rn[5] : rd[5] );
uadalp_v4h8b.var format : {char const*} = {"2481"};

uadalp_v4h8b.disasm = {
  sink << "uadalp\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,8,0);
};

op uadalp_v4s8h( 0b0110111001100000011010[22] : rn[5] : rd[5] );
uadalp_v4s8h.var format : {char const*} = {"2541"};

uadalp_v4s8h.disasm = {
  sink << "uadalp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1);
};

op uadalp_v8h16b( 0b0110111000100000011010[22] : rn[5] : rd[5] );
uadalp_v8h16b.var format : {char const*} = {"2569"};

uadalp_v8h16b.disasm = {
  sink << "uadalp\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0);
};

op uaddl2_v2dv4sv4s( 0b01101110101[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
uaddl2_v2dv4sv4s.var format : {char const*} = {"986"};

uaddl2_v2dv4sv4s.disasm = {
  sink << "uaddl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op uaddl2_v4sv8hv8h( 0b01101110011[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
uaddl2_v4sv8hv8h.var format : {char const*} = {"1292"};

uaddl2_v4sv8hv8h.disasm = {
  sink << "uaddl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op uaddl2_v8hv16bv16b( 0b01101110001[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
uaddl2_v8hv16bv16b.var format : {char const*} = {"1376"};

uaddl2_v8hv16bv16b.disasm = {
  sink << "uaddl2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op uaddl_v2dv2sv2s( 0b00101110101[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
uaddl_v2dv2sv2s.var format : {char const*} = {"967"};

uaddl_v2dv2sv2s.disasm = {
  sink << "uaddl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op uaddl_v4sv4hv4h( 0b00101110011[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
uaddl_v4sv4hv4h.var format : {char const*} = {"1173"};

uaddl_v4sv4hv4h.disasm = {
  sink << "uaddl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op uaddl_v8hv8bv8b( 0b00101110001[11] : rm[5] : 0b000000[6] : rn[5] : rd[5] );
uaddl_v8hv8bv8b.var format : {char const*} = {"1395"};

uaddl_v8hv8bv8b.disasm = {
  sink << "uaddl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op uaddlp_v1d2s( 0b0010111010100000001010[22] : rn[5] : rd[5] );
uaddlp_v1d2s.var format : {char const*} = {"2355"};

uaddlp_v1d2s.disasm = {
  sink << "uaddlp\t" << DisasmTV(rd,1,3) << ", " << DisasmTV(rn,2,2);
};

op uaddlp_v2d4s( 0b0110111010100000001010[22] : rn[5] : rd[5] );
uaddlp_v2d4s.var format : {char const*} = {"2402"};

uaddlp_v2d4s.disasm = {
  sink << "uaddlp\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2);
};

op uaddlp_v2s4h( 0b0010111001100000001010[22] : rn[5] : rd[5] );
uaddlp_v2s4h.var format : {char const*} = {"2458"};

uaddlp_v2s4h.disasm = {
  sink << "uaddlp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,4,1);
};

op uaddlp_v4h8b( 0b0010111000100000001010[22] : rn[5] : rd[5] );
uaddlp_v4h8b.var format : {char const*} = {"2482"};

uaddlp_v4h8b.disasm = {
  sink << "uaddlp\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,8,0);
};

op uaddlp_v4s8h( 0b0110111001100000001010[22] : rn[5] : rd[5] );
uaddlp_v4s8h.var format : {char const*} = {"2542"};

uaddlp_v4s8h.disasm = {
  sink << "uaddlp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1);
};

op uaddlp_v8h16b( 0b0110111000100000001010[22] : rn[5] : rd[5] );
uaddlp_v8h16b.var format : {char const*} = {"2570"};

uaddlp_v8h16b.disasm = {
  sink << "uaddlp\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0);
};

op uaddlv_dv4s( 0b0110111010110000001110[22] : rn[5] : rd[5] );
uaddlv_dv4s.var format : {char const*} = {"2229"};

uaddlv_dv4s.disasm = {
  sink << "uaddlv\t" << DisasmD(rd) << ", " << DisasmTV(rn,4,2);
};

op uaddlv_hv16b( 0b0110111000110000001110[22] : rn[5] : rd[5] );
uaddlv_hv16b.var format : {char const*} = {"2246"};

uaddlv_hv16b.disasm = {
  sink << "uaddlv\t" << DisasmH(rd) << ", " << DisasmTV(rn,16,0);
};

op uaddlv_hv8b( 0b0010111000110000001110[22] : rn[5] : rd[5] );
uaddlv_hv8b.var format : {char const*} = {"2253"};

uaddlv_hv8b.disasm = {
  sink << "uaddlv\t" << DisasmH(rd) << ", " << DisasmTV(rn,8,0);
};

op uaddlv_sv4h( 0b0010111001110000001110[22] : rn[5] : rd[5] );
uaddlv_sv4h.var format : {char const*} = {"2307"};

uaddlv_sv4h.disasm = {
  sink << "uaddlv\t" << DisasmS(rd) << ", " << DisasmTV(rn,4,1);
};

op uaddlv_sv8h( 0b0110111001110000001110[22] : rn[5] : rd[5] );
uaddlv_sv8h.var format : {char const*} = {"2318"};

uaddlv_sv8h.disasm = {
  sink << "uaddlv\t" << DisasmS(rd) << ", " << DisasmTV(rn,8,1);
};

op uaddw2_v2dv2dv4s( 0b01101110101[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
uaddw2_v2dv2dv4s.var format : {char const*} = {"951"};

uaddw2_v2dv2dv4s.disasm = {
  sink << "uaddw2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,4,2);
};

op uaddw2_v4sv4sv8h( 0b01101110011[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
uaddw2_v4sv4sv8h.var format : {char const*} = {"1278"};

uaddw2_v4sv4sv8h.disasm = {
  sink << "uaddw2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,8,1);
};

op uaddw2_v8hv8hv16b( 0b01101110001[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
uaddw2_v8hv8hv16b.var format : {char const*} = {"1402"};

uaddw2_v8hv8hv16b.disasm = {
  sink << "uaddw2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,16,0);
};

op uaddw_v2dv2dv2s( 0b00101110101[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
uaddw_v2dv2dv2s.var format : {char const*} = {"947"};

uaddw_v2dv2dv2s.disasm = {
  sink << "uaddw\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,2);
};

op uaddw_v4sv4sv4h( 0b00101110011[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
uaddw_v4sv4sv4h.var format : {char const*} = {"1198"};

uaddw_v4sv4sv4h.disasm = {
  sink << "uaddw\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,1);
};

op uaddw_v8hv8hv8b( 0b00101110001[11] : rm[5] : 0b000100[6] : rn[5] : rd[5] );
uaddw_v8hv8hv8b.var format : {char const*} = {"1406"};

uaddw_v8hv8hv8b.disasm = {
  sink << "uaddw\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,0);
};

op ucvtf_dd( 0b0111111001100001110110[22] : rn[5] : rd[5] );
ucvtf_dd.var format : {char const*} = {"2208"};

ucvtf_dd.disasm = {
  sink << "ucvtf\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op ucvtf_ddi( 0b0111111101[10] : lro[6] : 0b111001[6] : rn[5] : rd[5] );
ucvtf_ddi.var format : {char const*} = {"547"}, shift : {unsigned} = {64 - lro};

ucvtf_ddi.disasm = {
  sink << "ucvtf\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op ucvtf_dw( 0b0001111001100011000000[22] : rn[5] : rd[5] );
ucvtf_dw.var format : {char const*} = {"2232"};

ucvtf_dw.disasm = {
  sink << "ucvtf\t" << DisasmD(rd) << ", " << DisasmGZWR(rn);
};

op ucvtf_dwi( 0b00011110010000111[17] : scale[5] : rn[5] : rd[5] );
ucvtf_dwi.var fbits : {unsigned} = {32-scale}, format : {char const*} = {"1796"};

ucvtf_dwi.disasm = {
  sink << "ucvtf\t" << DisasmD(rd) << ", " << DisasmGZWR(rn) << ", " << DisasmI(fbits);
};

op ucvtf_dx( 0b1001111001100011000000[22] : rn[5] : rd[5] );
ucvtf_dx.var format : {char const*} = {"2235"};

ucvtf_dx.disasm = {
  sink << "ucvtf\t" << DisasmD(rd) << ", " << DisasmGZXR(rn);
};

op ucvtf_dxi( 0b1001111001000011[16] : scale[6] : rn[5] : rd[5] );
ucvtf_dxi.var fbits : {unsigned} = {64-scale}, format : {char const*} = {"688"};

ucvtf_dxi.disasm = {
  sink << "ucvtf\t" << DisasmD(rd) << ", " << DisasmGZXR(rn) << ", " << DisasmI(fbits);
};

op ucvtf_ss( 0b0111111000100001110110[22] : rn[5] : rd[5] );
ucvtf_ss.var format : {char const*} = {"2294"};

ucvtf_ss.disasm = {
  sink << "ucvtf\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op ucvtf_ssi( 0b01111111001[11] : lro[5] : 0b111001[6] : rn[5] : rd[5] );
ucvtf_ssi.var format : {char const*} = {"789"}, shift : {unsigned} = {32 - lro};

ucvtf_ssi.disasm = {
  sink << "ucvtf\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmI(shift);
};

op ucvtf_sw( 0b0001111000100011000000[22] : rn[5] : rd[5] );
ucvtf_sw.var format : {char const*} = {"2321"};

ucvtf_sw.disasm = {
  sink << "ucvtf\t" << DisasmS(rd) << ", " << DisasmGZWR(rn);
};

op ucvtf_swi( 0b00011110000000111[17] : scale[5] : rn[5] : rd[5] );
ucvtf_swi.var fbits : {unsigned} = {32-scale}, format : {char const*} = {"1798"};

ucvtf_swi.disasm = {
  sink << "ucvtf\t" << DisasmS(rd) << ", " << DisasmGZWR(rn) << ", " << DisasmI(fbits);
};

op ucvtf_sx( 0b1001111000100011000000[22] : rn[5] : rd[5] );
ucvtf_sx.var format : {char const*} = {"2324"};

ucvtf_sx.disasm = {
  sink << "ucvtf\t" << DisasmS(rd) << ", " << DisasmGZXR(rn);
};

op ucvtf_sxi( 0b1001111000000011[16] : scale[6] : rn[5] : rd[5] );
ucvtf_sxi.var fbits : {unsigned} = {64-scale}, format : {char const*} = {"690"};

ucvtf_sxi.disasm = {
  sink << "ucvtf\t" << DisasmS(rd) << ", " << DisasmGZXR(rn) << ", " << DisasmI(fbits);
};

op ucvtf_v2d2d( 0b0110111001100001110110[22] : rn[5] : rd[5] );
ucvtf_v2d2d.var format : {char const*} = {"2384"};

ucvtf_v2d2d.disasm = {
  sink << "ucvtf\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op ucvtf_v2d2di( 0b0110111101[10] : lro[6] : 0b111001[6] : rn[5] : rd[5] );
ucvtf_v2d2di.var format : {char const*} = {"565"}, shift : {unsigned} = {64 - lro};

ucvtf_v2d2di.disasm = {
  sink << "ucvtf\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op ucvtf_v2s2s( 0b0010111000100001110110[22] : rn[5] : rd[5] );
ucvtf_v2s2s.var format : {char const*} = {"2441"};

ucvtf_v2s2s.disasm = {
  sink << "ucvtf\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op ucvtf_v2s2si( 0b00101111001[11] : lro[5] : 0b111001[6] : rn[5] : rd[5] );
ucvtf_v2s2si.var format : {char const*} = {"1015"}, shift : {unsigned} = {32 - lro};

ucvtf_v2s2si.disasm = {
  sink << "ucvtf\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(shift);
};

op ucvtf_v4s4s( 0b0110111000100001110110[22] : rn[5] : rd[5] );
ucvtf_v4s4s.var format : {char const*} = {"2524"};

ucvtf_v4s4s.disasm = {
  sink << "ucvtf\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op ucvtf_v4s4si( 0b01101111001[11] : lro[5] : 0b111001[6] : rn[5] : rd[5] );
ucvtf_v4s4si.var format : {char const*} = {"1190"}, shift : {unsigned} = {32 - lro};

ucvtf_v4s4si.disasm = {
  sink << "ucvtf\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op uhadd_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b000001[6] : rn[5] : rd[5] );
uhadd_v16bv16bv16b.var format : {char const*} = {"863"};

uhadd_v16bv16bv16b.disasm = {
  sink << "uhadd\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op uhadd_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b000001[6] : rn[5] : rd[5] );
uhadd_v2sv2sv2s.var format : {char const*} = {"1078"};

uhadd_v2sv2sv2s.disasm = {
  sink << "uhadd\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op uhadd_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b000001[6] : rn[5] : rd[5] );
uhadd_v4hv4hv4h.var format : {char const*} = {"1128"};

uhadd_v4hv4hv4h.disasm = {
  sink << "uhadd\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op uhadd_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b000001[6] : rn[5] : rd[5] );
uhadd_v4sv4sv4s.var format : {char const*} = {"1259"};

uhadd_v4sv4sv4s.disasm = {
  sink << "uhadd\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op uhadd_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b000001[6] : rn[5] : rd[5] );
uhadd_v8bv8bv8b.var format : {char const*} = {"1337"};

uhadd_v8bv8bv8b.disasm = {
  sink << "uhadd\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op uhadd_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b000001[6] : rn[5] : rd[5] );
uhadd_v8hv8hv8h.var format : {char const*} = {"1441"};

uhadd_v8hv8hv8h.disasm = {
  sink << "uhadd\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op uhsub_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b001001[6] : rn[5] : rd[5] );
uhsub_v16bv16bv16b.var format : {char const*} = {"864"};

uhsub_v16bv16bv16b.disasm = {
  sink << "uhsub\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op uhsub_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b001001[6] : rn[5] : rd[5] );
uhsub_v2sv2sv2s.var format : {char const*} = {"1079"};

uhsub_v2sv2sv2s.disasm = {
  sink << "uhsub\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op uhsub_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b001001[6] : rn[5] : rd[5] );
uhsub_v4hv4hv4h.var format : {char const*} = {"1129"};

uhsub_v4hv4hv4h.disasm = {
  sink << "uhsub\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op uhsub_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b001001[6] : rn[5] : rd[5] );
uhsub_v4sv4sv4s.var format : {char const*} = {"1260"};

uhsub_v4sv4sv4s.disasm = {
  sink << "uhsub\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op uhsub_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b001001[6] : rn[5] : rd[5] );
uhsub_v8bv8bv8b.var format : {char const*} = {"1338"};

uhsub_v8bv8bv8b.disasm = {
  sink << "uhsub\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op uhsub_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b001001[6] : rn[5] : rd[5] );
uhsub_v8hv8hv8h.var format : {char const*} = {"1442"};

uhsub_v8hv8hv8h.disasm = {
  sink << "uhsub\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op umax_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b011001[6] : rn[5] : rd[5] );
umax_v16bv16bv16b.var format : {char const*} = {"865"};

umax_v16bv16bv16b.disasm = {
  sink << "umax\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op umax_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b011001[6] : rn[5] : rd[5] );
umax_v2sv2sv2s.var format : {char const*} = {"1080"};

umax_v2sv2sv2s.disasm = {
  sink << "umax\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op umax_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b011001[6] : rn[5] : rd[5] );
umax_v4hv4hv4h.var format : {char const*} = {"1130"};

umax_v4hv4hv4h.disasm = {
  sink << "umax\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op umax_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b011001[6] : rn[5] : rd[5] );
umax_v4sv4sv4s.var format : {char const*} = {"1261"};

umax_v4sv4sv4s.disasm = {
  sink << "umax\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op umax_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b011001[6] : rn[5] : rd[5] );
umax_v8bv8bv8b.var format : {char const*} = {"1339"};

umax_v8bv8bv8b.disasm = {
  sink << "umax\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op umax_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b011001[6] : rn[5] : rd[5] );
umax_v8hv8hv8h.var format : {char const*} = {"1443"};

umax_v8hv8hv8h.disasm = {
  sink << "umax\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op umaxp_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b101001[6] : rn[5] : rd[5] );
umaxp_v16bv16bv16b.var format : {char const*} = {"866"};

umaxp_v16bv16bv16b.disasm = {
  sink << "umaxp\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op umaxp_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b101001[6] : rn[5] : rd[5] );
umaxp_v2sv2sv2s.var format : {char const*} = {"1081"};

umaxp_v2sv2sv2s.disasm = {
  sink << "umaxp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op umaxp_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b101001[6] : rn[5] : rd[5] );
umaxp_v4hv4hv4h.var format : {char const*} = {"1131"};

umaxp_v4hv4hv4h.disasm = {
  sink << "umaxp\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op umaxp_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b101001[6] : rn[5] : rd[5] );
umaxp_v4sv4sv4s.var format : {char const*} = {"1262"};

umaxp_v4sv4sv4s.disasm = {
  sink << "umaxp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op umaxp_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b101001[6] : rn[5] : rd[5] );
umaxp_v8bv8bv8b.var format : {char const*} = {"1340"};

umaxp_v8bv8bv8b.disasm = {
  sink << "umaxp\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op umaxp_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b101001[6] : rn[5] : rd[5] );
umaxp_v8hv8hv8h.var format : {char const*} = {"1444"};

umaxp_v8hv8hv8h.disasm = {
  sink << "umaxp\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op umaxv_bv16b( 0b0110111000110000101010[22] : rn[5] : rd[5] );
umaxv_bv16b.var format : {char const*} = {"2171"};

umaxv_bv16b.disasm = {
  sink << "umaxv\t" << DisasmB(rd) << ", " << DisasmTV(rn,16,0);
};

op umaxv_bv8b( 0b0010111000110000101010[22] : rn[5] : rd[5] );
umaxv_bv8b.var format : {char const*} = {"2176"};

umaxv_bv8b.disasm = {
  sink << "umaxv\t" << DisasmB(rd) << ", " << DisasmTV(rn,8,0);
};

op umaxv_hv4h( 0b0010111001110000101010[22] : rn[5] : rd[5] );
umaxv_hv4h.var format : {char const*} = {"2250"};

umaxv_hv4h.disasm = {
  sink << "umaxv\t" << DisasmH(rd) << ", " << DisasmTV(rn,4,1);
};

op umaxv_hv8h( 0b0110111001110000101010[22] : rn[5] : rd[5] );
umaxv_hv8h.var format : {char const*} = {"2257"};

umaxv_hv8h.disasm = {
  sink << "umaxv\t" << DisasmH(rd) << ", " << DisasmTV(rn,8,1);
};

op umaxv_sv4s( 0b0110111010110000101010[22] : rn[5] : rd[5] );
umaxv_sv4s.var format : {char const*} = {"2315"};

umaxv_sv4s.disasm = {
  sink << "umaxv\t" << DisasmS(rd) << ", " << DisasmTV(rn,4,2);
};

op umin_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b011011[6] : rn[5] : rd[5] );
umin_v16bv16bv16b.var format : {char const*} = {"867"};

umin_v16bv16bv16b.disasm = {
  sink << "umin\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op umin_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b011011[6] : rn[5] : rd[5] );
umin_v2sv2sv2s.var format : {char const*} = {"1082"};

umin_v2sv2sv2s.disasm = {
  sink << "umin\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op umin_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b011011[6] : rn[5] : rd[5] );
umin_v4hv4hv4h.var format : {char const*} = {"1132"};

umin_v4hv4hv4h.disasm = {
  sink << "umin\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op umin_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b011011[6] : rn[5] : rd[5] );
umin_v4sv4sv4s.var format : {char const*} = {"1263"};

umin_v4sv4sv4s.disasm = {
  sink << "umin\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op umin_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b011011[6] : rn[5] : rd[5] );
umin_v8bv8bv8b.var format : {char const*} = {"1341"};

umin_v8bv8bv8b.disasm = {
  sink << "umin\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op umin_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b011011[6] : rn[5] : rd[5] );
umin_v8hv8hv8h.var format : {char const*} = {"1445"};

umin_v8hv8hv8h.disasm = {
  sink << "umin\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op uminp_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b101011[6] : rn[5] : rd[5] );
uminp_v16bv16bv16b.var format : {char const*} = {"868"};

uminp_v16bv16bv16b.disasm = {
  sink << "uminp\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op uminp_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b101011[6] : rn[5] : rd[5] );
uminp_v2sv2sv2s.var format : {char const*} = {"1083"};

uminp_v2sv2sv2s.disasm = {
  sink << "uminp\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op uminp_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b101011[6] : rn[5] : rd[5] );
uminp_v4hv4hv4h.var format : {char const*} = {"1133"};

uminp_v4hv4hv4h.disasm = {
  sink << "uminp\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op uminp_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b101011[6] : rn[5] : rd[5] );
uminp_v4sv4sv4s.var format : {char const*} = {"1264"};

uminp_v4sv4sv4s.disasm = {
  sink << "uminp\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op uminp_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b101011[6] : rn[5] : rd[5] );
uminp_v8bv8bv8b.var format : {char const*} = {"1342"};

uminp_v8bv8bv8b.disasm = {
  sink << "uminp\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op uminp_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b101011[6] : rn[5] : rd[5] );
uminp_v8hv8hv8h.var format : {char const*} = {"1446"};

uminp_v8hv8hv8h.disasm = {
  sink << "uminp\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op uminv_bv16b( 0b0110111000110001101010[22] : rn[5] : rd[5] );
uminv_bv16b.var format : {char const*} = {"2172"};

uminv_bv16b.disasm = {
  sink << "uminv\t" << DisasmB(rd) << ", " << DisasmTV(rn,16,0);
};

op uminv_bv8b( 0b0010111000110001101010[22] : rn[5] : rd[5] );
uminv_bv8b.var format : {char const*} = {"2177"};

uminv_bv8b.disasm = {
  sink << "uminv\t" << DisasmB(rd) << ", " << DisasmTV(rn,8,0);
};

op uminv_hv4h( 0b0010111001110001101010[22] : rn[5] : rd[5] );
uminv_hv4h.var format : {char const*} = {"2251"};

uminv_hv4h.disasm = {
  sink << "uminv\t" << DisasmH(rd) << ", " << DisasmTV(rn,4,1);
};

op uminv_hv8h( 0b0110111001110001101010[22] : rn[5] : rd[5] );
uminv_hv8h.var format : {char const*} = {"2258"};

uminv_hv8h.disasm = {
  sink << "uminv\t" << DisasmH(rd) << ", " << DisasmTV(rn,8,1);
};

op uminv_sv4s( 0b0110111010110001101010[22] : rn[5] : rd[5] );
uminv_sv4s.var format : {char const*} = {"2316"};

uminv_sv4s.disasm = {
  sink << "uminv\t" << DisasmS(rd) << ", " << DisasmTV(rn,4,2);
};

op umlal2_v2dv4sv4s( 0b01101110101[11] : rm[5] : 0b100000[6] : rn[5] : rd[5] );
umlal2_v2dv4sv4s.var format : {char const*} = {"987"};

umlal2_v2dv4sv4s.disasm = {
  sink << "umlal2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op umlal2_v2dv4svsi( 0b0110111110[10] : index0[1] : rm[5] : 0b0010[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
umlal2_v2dv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"477"};

umlal2_v2dv4svsi.disasm = {
  sink << "umlal2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op umlal2_v4sv8hv8h( 0b01101110011[11] : rm[5] : 0b100000[6] : rn[5] : rd[5] );
umlal2_v4sv8hv8h.var format : {char const*} = {"1293"};

umlal2_v4sv8hv8h.disasm = {
  sink << "umlal2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op umlal2_v4sv8hvhi( 0b0110111101[10] : index0[2] : rm[4] : 0b0010[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
umlal2_v4sv8hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"518"};

umlal2_v4sv8hvhi.disasm = {
  sink << "umlal2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op umlal2_v8hv16bv16b( 0b01101110001[11] : rm[5] : 0b100000[6] : rn[5] : rd[5] );
umlal2_v8hv16bv16b.var format : {char const*} = {"1377"};

umlal2_v8hv16bv16b.disasm = {
  sink << "umlal2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op umlal_v2dv2sv2s( 0b00101110101[11] : rm[5] : 0b100000[6] : rn[5] : rd[5] );
umlal_v2dv2sv2s.var format : {char const*} = {"968"};

umlal_v2dv2sv2s.disasm = {
  sink << "umlal\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op umlal_v2dv2svsi( 0b0010111110[10] : index0[1] : rm[5] : 0b0010[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
umlal_v2dv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"468"};

umlal_v2dv2svsi.disasm = {
  sink << "umlal\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op umlal_v4sv4hv4h( 0b00101110011[11] : rm[5] : 0b100000[6] : rn[5] : rd[5] );
umlal_v4sv4hv4h.var format : {char const*} = {"1174"};

umlal_v4sv4hv4h.disasm = {
  sink << "umlal\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op umlal_v4sv4hvhi( 0b0010111101[10] : index0[2] : rm[4] : 0b0010[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
umlal_v4sv4hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"500"};

umlal_v4sv4hvhi.disasm = {
  sink << "umlal\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op umlal_v8hv8bv8b( 0b00101110001[11] : rm[5] : 0b100000[6] : rn[5] : rd[5] );
umlal_v8hv8bv8b.var format : {char const*} = {"1396"};

umlal_v8hv8bv8b.disasm = {
  sink << "umlal\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op umlsl2_v2dv4sv4s( 0b01101110101[11] : rm[5] : 0b101000[6] : rn[5] : rd[5] );
umlsl2_v2dv4sv4s.var format : {char const*} = {"988"};

umlsl2_v2dv4sv4s.disasm = {
  sink << "umlsl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op umlsl2_v2dv4svsi( 0b0110111110[10] : index0[1] : rm[5] : 0b0110[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
umlsl2_v2dv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"478"};

umlsl2_v2dv4svsi.disasm = {
  sink << "umlsl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op umlsl2_v4sv8hv8h( 0b01101110011[11] : rm[5] : 0b101000[6] : rn[5] : rd[5] );
umlsl2_v4sv8hv8h.var format : {char const*} = {"1294"};

umlsl2_v4sv8hv8h.disasm = {
  sink << "umlsl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op umlsl2_v4sv8hvhi( 0b0110111101[10] : index0[2] : rm[4] : 0b0110[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
umlsl2_v4sv8hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"519"};

umlsl2_v4sv8hvhi.disasm = {
  sink << "umlsl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op umlsl2_v8hv16bv16b( 0b01101110001[11] : rm[5] : 0b101000[6] : rn[5] : rd[5] );
umlsl2_v8hv16bv16b.var format : {char const*} = {"1378"};

umlsl2_v8hv16bv16b.disasm = {
  sink << "umlsl2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op umlsl_v2dv2sv2s( 0b00101110101[11] : rm[5] : 0b101000[6] : rn[5] : rd[5] );
umlsl_v2dv2sv2s.var format : {char const*} = {"969"};

umlsl_v2dv2sv2s.disasm = {
  sink << "umlsl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op umlsl_v2dv2svsi( 0b0010111110[10] : index0[1] : rm[5] : 0b0110[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
umlsl_v2dv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"469"};

umlsl_v2dv2svsi.disasm = {
  sink << "umlsl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op umlsl_v4sv4hv4h( 0b00101110011[11] : rm[5] : 0b101000[6] : rn[5] : rd[5] );
umlsl_v4sv4hv4h.var format : {char const*} = {"1175"};

umlsl_v4sv4hv4h.disasm = {
  sink << "umlsl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op umlsl_v4sv4hvhi( 0b0010111101[10] : index0[2] : rm[4] : 0b0110[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
umlsl_v4sv4hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"501"};

umlsl_v4sv4hvhi.disasm = {
  sink << "umlsl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op umlsl_v8hv8bv8b( 0b00101110001[11] : rm[5] : 0b101000[6] : rn[5] : rd[5] );
umlsl_v8hv8bv8b.var format : {char const*} = {"1397"};

umlsl_v8hv8bv8b.disasm = {
  sink << "umlsl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

/*******************************************************************
 * UMOV
 *
 * Unsigned move vector element to general-purpose register
 */

op umov_wvb( 0b00001110000[11] : index[4] : 0b1001111[7] : rn[5] : rd[5] );
umov_wvb.var format : {char const*} = {"1826"};

umov_wvb.disasm = {
  sink << "umov\t" << DisasmGZWR(rd) << ", " << DisasmTV(rn,0,0) << DisasmSubscript(index);
};

umov_wvb.execute = {
  cpu.SetGZR(rd, typename ARCH::U32( cpu.GetVU8(rn,index) ) );
};

op umov_wvh( 0b00001110000[11] : index[3] : 0b10001111[8] : rn[5] : rd[5] );
umov_wvh.var format : {char const*} = {"1930"};

umov_wvh.disasm = {
  sink << "umov\t" << DisasmGZWR(rd) << ", " << DisasmTV(rn,0,1) << DisasmSubscript(index);
};

umov_wvh.execute = {
  cpu.SetGZR(rd, typename ARCH::U32( cpu.GetVU16(rn,index) ) );
};

op umov_wvs( 0b00001110000[11] : index[2] : 0b100001111[9] : rn[5] : rd[5] );
umov_wvs.var format : {char const*} = {"2018"};

umov_wvs.disasm = {
  sink << "mov\t" << DisasmGZWR(rd) << ", " << DisasmTV(rn,0,2) << DisasmSubscript(index);
};

umov_wvs.execute = {
  cpu.SetGZR(rd, typename ARCH::U32( cpu.GetVU32(rn,index) ) );
};

op umov_xvd( 0b01001110000[11] : index[1] : 0b1000001111[10] : rn[5] : rd[5] );
umov_xvd.var format : {char const*} = {"2040"};

umov_xvd.disasm = {
  sink << "mov\t" << DisasmGZXR(rd) << ", " << DisasmTV(rn,0,3) << DisasmSubscript(index);
};

umov_xvd.execute = {
  cpu.SetGZR(rd, cpu.GetVU64(rn,index) );
};

/*
 * end of UMOV
 *******************************************************************/

op umull2_v2dv4sv4s( 0b01101110101[11] : rm[5] : 0b110000[6] : rn[5] : rd[5] );
umull2_v2dv4sv4s.var format : {char const*} = {"989"};

umull2_v2dv4sv4s.disasm = {
  sink << "umull2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op umull2_v2dv4svsi( 0b0110111110[10] : index0[1] : rm[5] : 0b1010[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
umull2_v2dv4svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"479"};

umull2_v2dv4svsi.disasm = {
  sink << "umull2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op umull2_v4sv8hv8h( 0b01101110011[11] : rm[5] : 0b110000[6] : rn[5] : rd[5] );
umull2_v4sv8hv8h.var format : {char const*} = {"1295"};

umull2_v4sv8hv8h.disasm = {
  sink << "umull2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op umull2_v4sv8hvhi( 0b0110111101[10] : index0[2] : rm[4] : 0b1010[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
umull2_v4sv8hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"520"};

umull2_v4sv8hvhi.disasm = {
  sink << "umull2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op umull2_v8hv16bv16b( 0b01101110001[11] : rm[5] : 0b110000[6] : rn[5] : rd[5] );
umull2_v8hv16bv16b.var format : {char const*} = {"1379"};

umull2_v8hv16bv16b.disasm = {
  sink << "umull2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op umull_v2dv2sv2s( 0b00101110101[11] : rm[5] : 0b110000[6] : rn[5] : rd[5] );
umull_v2dv2sv2s.var format : {char const*} = {"970"};

umull_v2dv2sv2s.disasm = {
  sink << "umull\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op umull_v2dv2svsi( 0b0010111110[10] : index0[1] : rm[5] : 0b1010[4] : shl<1> index1[1] : 0b0[1] : rn[5] : rd[5] );
umull_v2dv2svsi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"470"};

umull_v2dv2svsi.disasm = {
  sink << "umull\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,0,2) << DisasmSubscript(index);
};

op umull_v4sv4hv4h( 0b00101110011[11] : rm[5] : 0b110000[6] : rn[5] : rd[5] );
umull_v4sv4hv4h.var format : {char const*} = {"1176"};

umull_v4sv4hv4h.disasm = {
  sink << "umull\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op umull_v4sv4hvhi( 0b0010111101[10] : index0[2] : rm[4] : 0b1010[4] : shl<2> index1[1] : 0b0[1] : rn[5] : rd[5] );
umull_v4sv4hvhi.var index : {unsigned} = {index1|index0}, format : {char const*} = {"502"};

umull_v4sv4hvhi.disasm = {
  sink << "umull\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,0,1) << DisasmSubscript(index);
};

op umull_v8hv8bv8b( 0b00101110001[11] : rm[5] : 0b110000[6] : rn[5] : rd[5] );
umull_v8hv8bv8b.var format : {char const*} = {"1398"};

umull_v8hv8bv8b.disasm = {
  sink << "umull\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op uqadd_bbb( 0b01111110001[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
uqadd_bbb.var format : {char const*} = {"699"};

uqadd_bbb.disasm = {
  sink << "uqadd\t" << DisasmB(rd) << ", " << DisasmB(rn) << ", " << DisasmB(rm);
};

op uqadd_ddd( 0b01111110111[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
uqadd_ddd.var format : {char const*} = {"739"};

uqadd_ddd.disasm = {
  sink << "uqadd\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op uqadd_hhh( 0b01111110011[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
uqadd_hhh.var format : {char const*} = {"758"};

uqadd_hhh.disasm = {
  sink << "uqadd\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmH(rm);
};

op uqadd_sss( 0b01111110101[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
uqadd_sss.var format : {char const*} = {"815"};

uqadd_sss.disasm = {
  sink << "uqadd\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op uqadd_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
uqadd_v16bv16bv16b.var format : {char const*} = {"869"};

uqadd_v16bv16bv16b.disasm = {
  sink << "uqadd\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op uqadd_v2dv2dv2d( 0b01101110111[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
uqadd_v2dv2dv2d.var format : {char const*} = {"935"};

uqadd_v2dv2dv2d.disasm = {
  sink << "uqadd\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op uqadd_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
uqadd_v2sv2sv2s.var format : {char const*} = {"1084"};

uqadd_v2sv2sv2s.disasm = {
  sink << "uqadd\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op uqadd_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
uqadd_v4hv4hv4h.var format : {char const*} = {"1134"};

uqadd_v4hv4hv4h.disasm = {
  sink << "uqadd\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op uqadd_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
uqadd_v4sv4sv4s.var format : {char const*} = {"1265"};

uqadd_v4sv4sv4s.disasm = {
  sink << "uqadd\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op uqadd_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
uqadd_v8bv8bv8b.var format : {char const*} = {"1343"};

uqadd_v8bv8bv8b.disasm = {
  sink << "uqadd\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op uqadd_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b000011[6] : rn[5] : rd[5] );
uqadd_v8hv8hv8h.var format : {char const*} = {"1447"};

uqadd_v8hv8hv8h.disasm = {
  sink << "uqadd\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op uqrshl_bbb( 0b01111110001[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
uqrshl_bbb.var format : {char const*} = {"700"};

uqrshl_bbb.disasm = {
  sink << "uqrshl\t" << DisasmB(rd) << ", " << DisasmB(rn) << ", " << DisasmB(rm);
};

op uqrshl_ddd( 0b01111110111[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
uqrshl_ddd.var format : {char const*} = {"740"};

uqrshl_ddd.disasm = {
  sink << "uqrshl\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op uqrshl_hhh( 0b01111110011[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
uqrshl_hhh.var format : {char const*} = {"759"};

uqrshl_hhh.disasm = {
  sink << "uqrshl\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmH(rm);
};

op uqrshl_sss( 0b01111110101[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
uqrshl_sss.var format : {char const*} = {"816"};

uqrshl_sss.disasm = {
  sink << "uqrshl\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op uqrshl_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
uqrshl_v16bv16bv16b.var format : {char const*} = {"870"};

uqrshl_v16bv16bv16b.disasm = {
  sink << "uqrshl\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op uqrshl_v2dv2dv2d( 0b01101110111[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
uqrshl_v2dv2dv2d.var format : {char const*} = {"936"};

uqrshl_v2dv2dv2d.disasm = {
  sink << "uqrshl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op uqrshl_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
uqrshl_v2sv2sv2s.var format : {char const*} = {"1085"};

uqrshl_v2sv2sv2s.disasm = {
  sink << "uqrshl\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op uqrshl_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
uqrshl_v4hv4hv4h.var format : {char const*} = {"1135"};

uqrshl_v4hv4hv4h.disasm = {
  sink << "uqrshl\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op uqrshl_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
uqrshl_v4sv4sv4s.var format : {char const*} = {"1266"};

uqrshl_v4sv4sv4s.disasm = {
  sink << "uqrshl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op uqrshl_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
uqrshl_v8bv8bv8b.var format : {char const*} = {"1344"};

uqrshl_v8bv8bv8b.disasm = {
  sink << "uqrshl\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op uqrshl_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b010111[6] : rn[5] : rd[5] );
uqrshl_v8hv8hv8h.var format : {char const*} = {"1448"};

uqrshl_v8hv8hv8h.disasm = {
  sink << "uqrshl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op uqrshrn2_v16b8hi( 0b0110111100001[13] : lro[3] : 0b100111[6] : rn[5] : rd[5] );
uqrshrn2_v16b8hi.var format : {char const*} = {"1963"}, shift : {unsigned} = {8 - lro};

uqrshrn2_v16b8hi.disasm = {
  sink << "uqrshrn2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op uqrshrn2_v4s2di( 0b01101111001[11] : lro[5] : 0b100111[6] : rn[5] : rd[5] );
uqrshrn2_v4s2di.var format : {char const*} = {"1155"}, shift : {unsigned} = {32 - lro};

uqrshrn2_v4s2di.disasm = {
  sink << "uqrshrn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op uqrshrn2_v8h4si( 0b011011110001[12] : lro[4] : 0b100111[6] : rn[5] : rd[5] );
uqrshrn2_v8h4si.var format : {char const*} = {"1869"}, shift : {unsigned} = {16 - lro};

uqrshrn2_v8h4si.disasm = {
  sink << "uqrshrn2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op uqrshrn_bhi( 0b0111111100001[13] : lro[3] : 0b100111[6] : rn[5] : rd[5] );
uqrshrn_bhi.var format : {char const*} = {"1939"}, shift : {unsigned} = {8 - lro};

uqrshrn_bhi.disasm = {
  sink << "uqrshrn\t" << DisasmB(rd) << ", " << DisasmH(rn) << ", " << DisasmI(shift);
};

op uqrshrn_hsi( 0b011111110001[12] : lro[4] : 0b100111[6] : rn[5] : rd[5] );
uqrshrn_hsi.var format : {char const*} = {"1835"}, shift : {unsigned} = {16 - lro};

uqrshrn_hsi.disasm = {
  sink << "uqrshrn\t" << DisasmH(rd) << ", " << DisasmS(rn) << ", " << DisasmI(shift);
};

op uqrshrn_sdi( 0b01111111001[11] : lro[5] : 0b100111[6] : rn[5] : rd[5] );
uqrshrn_sdi.var format : {char const*} = {"779"}, shift : {unsigned} = {32 - lro};

uqrshrn_sdi.disasm = {
  sink << "uqrshrn\t" << DisasmS(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op uqrshrn_v2s2di( 0b00101111001[11] : lro[5] : 0b100111[6] : rn[5] : rd[5] );
uqrshrn_v2s2di.var format : {char const*} = {"997"}, shift : {unsigned} = {32 - lro};

uqrshrn_v2s2di.disasm = {
  sink << "uqrshrn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op uqrshrn_v4h4si( 0b001011110001[12] : lro[4] : 0b100111[6] : rn[5] : rd[5] );
uqrshrn_v4h4si.var format : {char const*} = {"1857"}, shift : {unsigned} = {16 - lro};

uqrshrn_v4h4si.disasm = {
  sink << "uqrshrn\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op uqrshrn_v8b8hi( 0b0010111100001[13] : lro[3] : 0b100111[6] : rn[5] : rd[5] );
uqrshrn_v8b8hi.var format : {char const*} = {"1990"}, shift : {unsigned} = {8 - lro};

uqrshrn_v8b8hi.disasm = {
  sink << "uqrshrn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op uqshl_bbb( 0b01111110001[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
uqshl_bbb.var format : {char const*} = {"701"};

uqshl_bbb.disasm = {
  sink << "uqshl\t" << DisasmB(rd) << ", " << DisasmB(rn) << ", " << DisasmB(rm);
};

op uqshl_bbi( 0b0111111100001[13] : shift[3] : 0b011101[6] : rn[5] : rd[5] );
uqshl_bbi.var format : {char const*} = {"1934"};

uqshl_bbi.disasm = {
  sink << "uqshl\t" << DisasmB(rd) << ", " << DisasmB(rn) << ", " << DisasmI(shift);
};

op uqshl_ddd( 0b01111110111[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
uqshl_ddd.var format : {char const*} = {"741"};

uqshl_ddd.disasm = {
  sink << "uqshl\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op uqshl_ddi( 0b0111111101[10] : shift[6] : 0b011101[6] : rn[5] : rd[5] );
uqshl_ddi.var format : {char const*} = {"548"};

uqshl_ddi.disasm = {
  sink << "uqshl\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op uqshl_hhh( 0b01111110011[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
uqshl_hhh.var format : {char const*} = {"760"};

uqshl_hhh.disasm = {
  sink << "uqshl\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmH(rm);
};

op uqshl_hhi( 0b011111110001[12] : shift[4] : 0b011101[6] : rn[5] : rd[5] );
uqshl_hhi.var format : {char const*} = {"1830"};

uqshl_hhi.disasm = {
  sink << "uqshl\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmI(shift);
};

op uqshl_ssi( 0b01111111001[11] : shift[5] : 0b011101[6] : rn[5] : rd[5] );
uqshl_ssi.var format : {char const*} = {"790"};

uqshl_ssi.disasm = {
  sink << "uqshl\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmI(shift);
};

op uqshl_sss( 0b01111110101[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
uqshl_sss.var format : {char const*} = {"817"};

uqshl_sss.disasm = {
  sink << "uqshl\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op uqshl_v16b16bi( 0b0110111100001[13] : imm[3] : 0b011101[6] : rn[5] : rd[5] );
uqshl_v16b16bi.var format : {char const*} = {"1952"};

uqshl_v16b16bi.disasm = {
  sink << "uqshl\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(imm);
};

op uqshl_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
uqshl_v16bv16bv16b.var format : {char const*} = {"871"};

uqshl_v16bv16bv16b.disasm = {
  sink << "uqshl\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op uqshl_v2d2di( 0b0110111101[10] : imm[6] : 0b011101[6] : rn[5] : rd[5] );
uqshl_v2d2di.var format : {char const*} = {"566"};

uqshl_v2d2di.disasm = {
  sink << "uqshl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(imm);
};

op uqshl_v2dv2dv2d( 0b01101110111[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
uqshl_v2dv2dv2d.var format : {char const*} = {"937"};

uqshl_v2dv2dv2d.disasm = {
  sink << "uqshl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op uqshl_v2s2si( 0b00101111001[11] : imm[5] : 0b011101[6] : rn[5] : rd[5] );
uqshl_v2s2si.var format : {char const*} = {"1016"};

uqshl_v2s2si.disasm = {
  sink << "uqshl\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(imm);
};

op uqshl_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
uqshl_v2sv2sv2s.var format : {char const*} = {"1086"};

uqshl_v2sv2sv2s.disasm = {
  sink << "uqshl\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op uqshl_v4h4hi( 0b001011110001[12] : imm[4] : 0b011101[6] : rn[5] : rd[5] );
uqshl_v4h4hi.var format : {char const*} = {"1846"};

uqshl_v4h4hi.disasm = {
  sink << "uqshl\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(imm);
};

op uqshl_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
uqshl_v4hv4hv4h.var format : {char const*} = {"1136"};

uqshl_v4hv4hv4h.disasm = {
  sink << "uqshl\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op uqshl_v4s4si( 0b01101111001[11] : imm[5] : 0b011101[6] : rn[5] : rd[5] );
uqshl_v4s4si.var format : {char const*} = {"1191"};

uqshl_v4s4si.disasm = {
  sink << "uqshl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(imm);
};

op uqshl_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
uqshl_v4sv4sv4s.var format : {char const*} = {"1267"};

uqshl_v4sv4sv4s.disasm = {
  sink << "uqshl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op uqshl_v8b8bi( 0b0010111100001[13] : imm[3] : 0b011101[6] : rn[5] : rd[5] );
uqshl_v8b8bi.var format : {char const*} = {"1979"};

uqshl_v8b8bi.disasm = {
  sink << "uqshl\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(imm);
};

op uqshl_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
uqshl_v8bv8bv8b.var format : {char const*} = {"1345"};

uqshl_v8bv8bv8b.disasm = {
  sink << "uqshl\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op uqshl_v8h8hi( 0b011011110001[12] : imm[4] : 0b011101[6] : rn[5] : rd[5] );
uqshl_v8h8hi.var format : {char const*} = {"1880"};

uqshl_v8h8hi.disasm = {
  sink << "uqshl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(imm);
};

op uqshl_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b010011[6] : rn[5] : rd[5] );
uqshl_v8hv8hv8h.var format : {char const*} = {"1449"};

uqshl_v8hv8hv8h.disasm = {
  sink << "uqshl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op uqshrn2_v16b8hi( 0b0110111100001[13] : lro[3] : 0b100101[6] : rn[5] : rd[5] );
uqshrn2_v16b8hi.var format : {char const*} = {"1964"}, shift : {unsigned} = {8 - lro};

uqshrn2_v16b8hi.disasm = {
  sink << "uqshrn2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op uqshrn2_v4s2di( 0b01101111001[11] : lro[5] : 0b100101[6] : rn[5] : rd[5] );
uqshrn2_v4s2di.var format : {char const*} = {"1156"}, shift : {unsigned} = {32 - lro};

uqshrn2_v4s2di.disasm = {
  sink << "uqshrn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op uqshrn2_v8h4si( 0b011011110001[12] : lro[4] : 0b100101[6] : rn[5] : rd[5] );
uqshrn2_v8h4si.var format : {char const*} = {"1870"}, shift : {unsigned} = {16 - lro};

uqshrn2_v8h4si.disasm = {
  sink << "uqshrn2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op uqshrn_bhi( 0b0111111100001[13] : lro[3] : 0b100101[6] : rn[5] : rd[5] );
uqshrn_bhi.var format : {char const*} = {"1940"}, shift : {unsigned} = {8 - lro};

uqshrn_bhi.disasm = {
  sink << "uqshrn\t" << DisasmB(rd) << ", " << DisasmH(rn) << ", " << DisasmI(shift);
};

op uqshrn_hsi( 0b011111110001[12] : lro[4] : 0b100101[6] : rn[5] : rd[5] );
uqshrn_hsi.var format : {char const*} = {"1836"}, shift : {unsigned} = {16 - lro};

uqshrn_hsi.disasm = {
  sink << "uqshrn\t" << DisasmH(rd) << ", " << DisasmS(rn) << ", " << DisasmI(shift);
};

op uqshrn_sdi( 0b01111111001[11] : lro[5] : 0b100101[6] : rn[5] : rd[5] );
uqshrn_sdi.var format : {char const*} = {"780"}, shift : {unsigned} = {32 - lro};

uqshrn_sdi.disasm = {
  sink << "uqshrn\t" << DisasmS(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op uqshrn_v2s2di( 0b00101111001[11] : lro[5] : 0b100101[6] : rn[5] : rd[5] );
uqshrn_v2s2di.var format : {char const*} = {"998"}, shift : {unsigned} = {32 - lro};

uqshrn_v2s2di.disasm = {
  sink << "uqshrn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op uqshrn_v4h4si( 0b001011110001[12] : lro[4] : 0b100101[6] : rn[5] : rd[5] );
uqshrn_v4h4si.var format : {char const*} = {"1858"}, shift : {unsigned} = {16 - lro};

uqshrn_v4h4si.disasm = {
  sink << "uqshrn\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op uqshrn_v8b8hi( 0b0010111100001[13] : lro[3] : 0b100101[6] : rn[5] : rd[5] );
uqshrn_v8b8hi.var format : {char const*} = {"1991"}, shift : {unsigned} = {8 - lro};

uqshrn_v8b8hi.disasm = {
  sink << "uqshrn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op uqsub_bbb( 0b01111110001[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
uqsub_bbb.var format : {char const*} = {"702"};

uqsub_bbb.disasm = {
  sink << "uqsub\t" << DisasmB(rd) << ", " << DisasmB(rn) << ", " << DisasmB(rm);
};

op uqsub_ddd( 0b01111110111[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
uqsub_ddd.var format : {char const*} = {"742"};

uqsub_ddd.disasm = {
  sink << "uqsub\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op uqsub_hhh( 0b01111110011[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
uqsub_hhh.var format : {char const*} = {"761"};

uqsub_hhh.disasm = {
  sink << "uqsub\t" << DisasmH(rd) << ", " << DisasmH(rn) << ", " << DisasmH(rm);
};

op uqsub_sss( 0b01111110101[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
uqsub_sss.var format : {char const*} = {"818"};

uqsub_sss.disasm = {
  sink << "uqsub\t" << DisasmS(rd) << ", " << DisasmS(rn) << ", " << DisasmS(rm);
};

op uqsub_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
uqsub_v16bv16bv16b.var format : {char const*} = {"872"};

uqsub_v16bv16bv16b.disasm = {
  sink << "uqsub\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op uqsub_v2dv2dv2d( 0b01101110111[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
uqsub_v2dv2dv2d.var format : {char const*} = {"938"};

uqsub_v2dv2dv2d.disasm = {
  sink << "uqsub\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op uqsub_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
uqsub_v2sv2sv2s.var format : {char const*} = {"1087"};

uqsub_v2sv2sv2s.disasm = {
  sink << "uqsub\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op uqsub_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
uqsub_v4hv4hv4h.var format : {char const*} = {"1137"};

uqsub_v4hv4hv4h.disasm = {
  sink << "uqsub\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op uqsub_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
uqsub_v4sv4sv4s.var format : {char const*} = {"1268"};

uqsub_v4sv4sv4s.disasm = {
  sink << "uqsub\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op uqsub_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
uqsub_v8bv8bv8b.var format : {char const*} = {"1346"};

uqsub_v8bv8bv8b.disasm = {
  sink << "uqsub\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op uqsub_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b001011[6] : rn[5] : rd[5] );
uqsub_v8hv8hv8h.var format : {char const*} = {"1450"};

uqsub_v8hv8hv8h.disasm = {
  sink << "uqsub\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op uqxtn2_v16b8h( 0b0110111000100001010010[22] : rn[5] : rd[5] );
uqxtn2_v16b8h.var format : {char const*} = {"2350"};

uqxtn2_v16b8h.disasm = {
  sink << "uqxtn2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1);
};

op uqxtn2_v4s2d( 0b0110111010100001010010[22] : rn[5] : rd[5] );
uqxtn2_v4s2d.var format : {char const*} = {"2487"};

uqxtn2_v4s2d.disasm = {
  sink << "uqxtn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3);
};

op uqxtn2_v8h4s( 0b0110111001100001010010[22] : rn[5] : rd[5] );
uqxtn2_v8h4s.var format : {char const*} = {"2575"};

uqxtn2_v8h4s.disasm = {
  sink << "uqxtn2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,4,2);
};

op uqxtn_bh( 0b0111111000100001010010[22] : rn[5] : rd[5] );
uqxtn_bh.var format : {char const*} = {"2167"};

uqxtn_bh.disasm = {
  sink << "uqxtn\t" << DisasmB(rd) << ", " << DisasmH(rn);
};

op uqxtn_hs( 0b0111111001100001010010[22] : rn[5] : rd[5] );
uqxtn_hs.var format : {char const*} = {"2244"};

uqxtn_hs.disasm = {
  sink << "uqxtn\t" << DisasmH(rd) << ", " << DisasmS(rn);
};

op uqxtn_sd( 0b0111111010100001010010[22] : rn[5] : rd[5] );
uqxtn_sd.var format : {char const*} = {"2263"};

uqxtn_sd.disasm = {
  sink << "uqxtn\t" << DisasmS(rd) << ", " << DisasmD(rn);
};

op uqxtn_v2s2d( 0b0010111010100001010010[22] : rn[5] : rd[5] );
uqxtn_v2s2d.var format : {char const*} = {"2408"};

uqxtn_v2s2d.disasm = {
  sink << "uqxtn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3);
};

op uqxtn_v4h4s( 0b0010111001100001010010[22] : rn[5] : rd[5] );
uqxtn_v4h4s.var format : {char const*} = {"2477"};

uqxtn_v4h4s.disasm = {
  sink << "uqxtn\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2);
};

op uqxtn_v8b8h( 0b0010111000100001010010[22] : rn[5] : rd[5] );
uqxtn_v8b8h.var format : {char const*} = {"2565"};

uqxtn_v8b8h.disasm = {
  sink << "uqxtn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1);
};

op urecpe_v2s2s( 0b0000111010100001110010[22] : rn[5] : rd[5] );
urecpe_v2s2s.var format : {char const*} = {"2442"};

urecpe_v2s2s.disasm = {
  sink << "urecpe\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op urecpe_v4s4s( 0b0100111010100001110010[22] : rn[5] : rd[5] );
urecpe_v4s4s.var format : {char const*} = {"2525"};

urecpe_v4s4s.disasm = {
  sink << "urecpe\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op urhadd_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b000101[6] : rn[5] : rd[5] );
urhadd_v16bv16bv16b.var format : {char const*} = {"873"};

urhadd_v16bv16bv16b.disasm = {
  sink << "urhadd\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op urhadd_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b000101[6] : rn[5] : rd[5] );
urhadd_v2sv2sv2s.var format : {char const*} = {"1088"};

urhadd_v2sv2sv2s.disasm = {
  sink << "urhadd\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op urhadd_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b000101[6] : rn[5] : rd[5] );
urhadd_v4hv4hv4h.var format : {char const*} = {"1138"};

urhadd_v4hv4hv4h.disasm = {
  sink << "urhadd\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op urhadd_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b000101[6] : rn[5] : rd[5] );
urhadd_v4sv4sv4s.var format : {char const*} = {"1269"};

urhadd_v4sv4sv4s.disasm = {
  sink << "urhadd\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op urhadd_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b000101[6] : rn[5] : rd[5] );
urhadd_v8bv8bv8b.var format : {char const*} = {"1347"};

urhadd_v8bv8bv8b.disasm = {
  sink << "urhadd\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op urhadd_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b000101[6] : rn[5] : rd[5] );
urhadd_v8hv8hv8h.var format : {char const*} = {"1451"};

urhadd_v8hv8hv8h.disasm = {
  sink << "urhadd\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op urshl_ddd( 0b01111110111[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
urshl_ddd.var format : {char const*} = {"743"};

urshl_ddd.disasm = {
  sink << "urshl\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op urshl_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
urshl_v16bv16bv16b.var format : {char const*} = {"874"};

urshl_v16bv16bv16b.disasm = {
  sink << "urshl\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op urshl_v2dv2dv2d( 0b01101110111[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
urshl_v2dv2dv2d.var format : {char const*} = {"939"};

urshl_v2dv2dv2d.disasm = {
  sink << "urshl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op urshl_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
urshl_v2sv2sv2s.var format : {char const*} = {"1089"};

urshl_v2sv2sv2s.disasm = {
  sink << "urshl\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op urshl_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
urshl_v4hv4hv4h.var format : {char const*} = {"1139"};

urshl_v4hv4hv4h.disasm = {
  sink << "urshl\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op urshl_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
urshl_v4sv4sv4s.var format : {char const*} = {"1270"};

urshl_v4sv4sv4s.disasm = {
  sink << "urshl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op urshl_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
urshl_v8bv8bv8b.var format : {char const*} = {"1348"};

urshl_v8bv8bv8b.disasm = {
  sink << "urshl\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op urshl_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b010101[6] : rn[5] : rd[5] );
urshl_v8hv8hv8h.var format : {char const*} = {"1452"};

urshl_v8hv8hv8h.disasm = {
  sink << "urshl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op urshr_ddi( 0b0111111101[10] : lro[6] : 0b001001[6] : rn[5] : rd[5] );
urshr_ddi.var format : {char const*} = {"549"}, shift : {unsigned} = {64 - lro};

urshr_ddi.disasm = {
  sink << "urshr\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op urshr_v16b16bi( 0b0110111100001[13] : lro[3] : 0b001001[6] : rn[5] : rd[5] );
urshr_v16b16bi.var format : {char const*} = {"1953"}, shift : {unsigned} = {8 - lro};

urshr_v16b16bi.disasm = {
  sink << "urshr\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(shift);
};

op urshr_v2d2di( 0b0110111101[10] : lro[6] : 0b001001[6] : rn[5] : rd[5] );
urshr_v2d2di.var format : {char const*} = {"567"}, shift : {unsigned} = {64 - lro};

urshr_v2d2di.disasm = {
  sink << "urshr\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op urshr_v2s2si( 0b00101111001[11] : lro[5] : 0b001001[6] : rn[5] : rd[5] );
urshr_v2s2si.var format : {char const*} = {"1017"}, shift : {unsigned} = {32 - lro};

urshr_v2s2si.disasm = {
  sink << "urshr\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(shift);
};

op urshr_v4h4hi( 0b001011110001[12] : lro[4] : 0b001001[6] : rn[5] : rd[5] );
urshr_v4h4hi.var format : {char const*} = {"1847"}, shift : {unsigned} = {16 - lro};

urshr_v4h4hi.disasm = {
  sink << "urshr\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(shift);
};

op urshr_v4s4si( 0b01101111001[11] : lro[5] : 0b001001[6] : rn[5] : rd[5] );
urshr_v4s4si.var format : {char const*} = {"1192"}, shift : {unsigned} = {32 - lro};

urshr_v4s4si.disasm = {
  sink << "urshr\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op urshr_v8b8bi( 0b0010111100001[13] : lro[3] : 0b001001[6] : rn[5] : rd[5] );
urshr_v8b8bi.var format : {char const*} = {"1980"}, shift : {unsigned} = {8 - lro};

urshr_v8b8bi.disasm = {
  sink << "urshr\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(shift);
};

op urshr_v8h8hi( 0b011011110001[12] : lro[4] : 0b001001[6] : rn[5] : rd[5] );
urshr_v8h8hi.var format : {char const*} = {"1881"}, shift : {unsigned} = {16 - lro};

urshr_v8h8hi.disasm = {
  sink << "urshr\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op ursqrte_v2s2s( 0b0010111010100001110010[22] : rn[5] : rd[5] );
ursqrte_v2s2s.var format : {char const*} = {"2443"};

ursqrte_v2s2s.disasm = {
  sink << "ursqrte\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op ursqrte_v4s4s( 0b0110111010100001110010[22] : rn[5] : rd[5] );
ursqrte_v4s4s.var format : {char const*} = {"2526"};

ursqrte_v4s4s.disasm = {
  sink << "ursqrte\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op ursra_ddi( 0b0111111101[10] : lro[6] : 0b001101[6] : rn[5] : rd[5] );
ursra_ddi.var format : {char const*} = {"550"}, shift : {unsigned} = {64 - lro};

ursra_ddi.disasm = {
  sink << "ursra\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op ursra_v16b16bi( 0b0110111100001[13] : lro[3] : 0b001101[6] : rn[5] : rd[5] );
ursra_v16b16bi.var format : {char const*} = {"1954"}, shift : {unsigned} = {8 - lro};

ursra_v16b16bi.disasm = {
  sink << "ursra\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(shift);
};

op ursra_v2d2di( 0b0110111101[10] : lro[6] : 0b001101[6] : rn[5] : rd[5] );
ursra_v2d2di.var format : {char const*} = {"568"}, shift : {unsigned} = {64 - lro};

ursra_v2d2di.disasm = {
  sink << "ursra\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op ursra_v2s2si( 0b00101111001[11] : lro[5] : 0b001101[6] : rn[5] : rd[5] );
ursra_v2s2si.var format : {char const*} = {"1018"}, shift : {unsigned} = {32 - lro};

ursra_v2s2si.disasm = {
  sink << "ursra\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(shift);
};

op ursra_v4h4hi( 0b001011110001[12] : lro[4] : 0b001101[6] : rn[5] : rd[5] );
ursra_v4h4hi.var format : {char const*} = {"1848"}, shift : {unsigned} = {16 - lro};

ursra_v4h4hi.disasm = {
  sink << "ursra\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(shift);
};

op ursra_v4s4si( 0b01101111001[11] : lro[5] : 0b001101[6] : rn[5] : rd[5] );
ursra_v4s4si.var format : {char const*} = {"1193"}, shift : {unsigned} = {32 - lro};

ursra_v4s4si.disasm = {
  sink << "ursra\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op ursra_v8b8bi( 0b0010111100001[13] : lro[3] : 0b001101[6] : rn[5] : rd[5] );
ursra_v8b8bi.var format : {char const*} = {"1981"}, shift : {unsigned} = {8 - lro};

ursra_v8b8bi.disasm = {
  sink << "ursra\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(shift);
};

op ursra_v8h8hi( 0b011011110001[12] : lro[4] : 0b001101[6] : rn[5] : rd[5] );
ursra_v8h8hi.var format : {char const*} = {"1882"}, shift : {unsigned} = {16 - lro};

ursra_v8h8hi.disasm = {
  sink << "ursra\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op ushl_ddd( 0b01111110111[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
ushl_ddd.var format : {char const*} = {"744"};

ushl_ddd.disasm = {
  sink << "ushl\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmD(rm);
};

op ushl_v16bv16bv16b( 0b01101110001[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
ushl_v16bv16bv16b.var format : {char const*} = {"875"};

ushl_v16bv16bv16b.disasm = {
  sink << "ushl\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op ushl_v2dv2dv2d( 0b01101110111[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
ushl_v2dv2dv2d.var format : {char const*} = {"940"};

ushl_v2dv2dv2d.disasm = {
  sink << "ushl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op ushl_v2sv2sv2s( 0b00101110101[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
ushl_v2sv2sv2s.var format : {char const*} = {"1090"};

ushl_v2sv2sv2s.disasm = {
  sink << "ushl\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op ushl_v4hv4hv4h( 0b00101110011[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
ushl_v4hv4hv4h.var format : {char const*} = {"1140"};

ushl_v4hv4hv4h.disasm = {
  sink << "ushl\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op ushl_v4sv4sv4s( 0b01101110101[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
ushl_v4sv4sv4s.var format : {char const*} = {"1271"};

ushl_v4sv4sv4s.disasm = {
  sink << "ushl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op ushl_v8bv8bv8b( 0b00101110001[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
ushl_v8bv8bv8b.var format : {char const*} = {"1349"};

ushl_v8bv8bv8b.disasm = {
  sink << "ushl\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op ushl_v8hv8hv8h( 0b01101110011[11] : rm[5] : 0b010001[6] : rn[5] : rd[5] );
ushl_v8hv8hv8h.var format : {char const*} = {"1453"};

ushl_v8hv8hv8h.disasm = {
  sink << "ushl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op ushll2_v2d4si( 0b01101111001[11] : imm[5] : 0b101001[6] : rn[5] : rd[5] );
ushll2_v2d4si.var format : {char const*} = {"973"};

ushll2_v2d4si.disasm = {
  if (imm) { sink << "ushll2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(imm); } else { sink << "uxtl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2); }
};

op ushll2_v4s8hi( 0b011011110001[12] : imm[4] : 0b101001[6] : rn[5] : rd[5] );
ushll2_v4s8hi.var format : {char const*} = {"1862"};

ushll2_v4s8hi.disasm = {
  if (imm) { sink << "ushll2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(imm); } else { sink << "uxtl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1); }
};

op ushll2_v8h16bi( 0b0110111100001[13] : imm[3] : 0b101001[6] : rn[5] : rd[5] );
ushll2_v8h16bi.var format : {char const*} = {"1993"};

ushll2_v8h16bi.disasm = {
  if (imm) { sink << "ushll2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(imm); } else { sink << "uxtl2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0); }
};

op ushll_v2d2si( 0b00101111001[11] : imm[5] : 0b101001[6] : rn[5] : rd[5] );
ushll_v2d2si.var format : {char const*} = {"954"};

ushll_v2d2si.disasm = {
  if (imm) { sink << "ushll\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(imm); } else { sink << "uxtl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2); }
};

op ushll_v4s4hi( 0b001011110001[12] : imm[4] : 0b101001[6] : rn[5] : rd[5] );
ushll_v4s4hi.var format : {char const*} = {"1860"};

ushll_v4s4hi.disasm = {
  if (imm) { sink << "ushll\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(imm); } else { sink << "uxtl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1); }
};

op ushll_v8h8bi( 0b0010111100001[13] : imm[3] : 0b101001[6] : rn[5] : rd[5] );
ushll_v8h8bi.var format : {char const*} = {"1995"};

ushll_v8h8bi.disasm = {
  if (imm) { sink << "ushll\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(imm); } else { sink << "uxtl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0); }
};

op ushr_ddi( 0b0111111101[10] : lro[6] : 0b000001[6] : rn[5] : rd[5] );
ushr_ddi.var format : {char const*} = {"551"}, shift : {unsigned} = {64 - lro};

ushr_ddi.disasm = {
  sink << "ushr\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op ushr_v16b16bi( 0b0110111100001[13] : lro[3] : 0b000001[6] : rn[5] : rd[5] );
ushr_v16b16bi.var format : {char const*} = {"1955"}, shift : {unsigned} = {8 - lro};

ushr_v16b16bi.disasm = {
  sink << "ushr\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(shift);
};

op ushr_v2d2di( 0b0110111101[10] : lro[6] : 0b000001[6] : rn[5] : rd[5] );
ushr_v2d2di.var format : {char const*} = {"569"}, shift : {unsigned} = {64 - lro};

ushr_v2d2di.disasm = {
  sink << "ushr\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op ushr_v2s2si( 0b00101111001[11] : lro[5] : 0b000001[6] : rn[5] : rd[5] );
ushr_v2s2si.var format : {char const*} = {"1019"}, shift : {unsigned} = {32 - lro};

ushr_v2s2si.disasm = {
  sink << "ushr\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(shift);
};

op ushr_v4h4hi( 0b001011110001[12] : lro[4] : 0b000001[6] : rn[5] : rd[5] );
ushr_v4h4hi.var format : {char const*} = {"1849"}, shift : {unsigned} = {16 - lro};

ushr_v4h4hi.disasm = {
  sink << "ushr\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(shift);
};

op ushr_v4s4si( 0b01101111001[11] : lro[5] : 0b000001[6] : rn[5] : rd[5] );
ushr_v4s4si.var format : {char const*} = {"1194"}, shift : {unsigned} = {32 - lro};

ushr_v4s4si.disasm = {
  sink << "ushr\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op ushr_v8b8bi( 0b0010111100001[13] : lro[3] : 0b000001[6] : rn[5] : rd[5] );
ushr_v8b8bi.var format : {char const*} = {"1982"}, shift : {unsigned} = {8 - lro};

ushr_v8b8bi.disasm = {
  sink << "ushr\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(shift);
};

op ushr_v8h8hi( 0b011011110001[12] : lro[4] : 0b000001[6] : rn[5] : rd[5] );
ushr_v8h8hi.var format : {char const*} = {"1883"}, shift : {unsigned} = {16 - lro};

ushr_v8h8hi.disasm = {
  sink << "ushr\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op usqadd_bb( 0b0111111000100000001110[22] : rn[5] : rd[5] );
usqadd_bb.var format : {char const*} = {"2164"};

usqadd_bb.disasm = {
  sink << "usqadd\t" << DisasmB(rd) << ", " << DisasmB(rn);
};

op usqadd_dd( 0b0111111011100000001110[22] : rn[5] : rd[5] );
usqadd_dd.var format : {char const*} = {"2209"};

usqadd_dd.disasm = {
  sink << "usqadd\t" << DisasmD(rd) << ", " << DisasmD(rn);
};

op usqadd_hh( 0b0111111001100000001110[22] : rn[5] : rd[5] );
usqadd_hh.var format : {char const*} = {"2240"};

usqadd_hh.disasm = {
  sink << "usqadd\t" << DisasmH(rd) << ", " << DisasmH(rn);
};

op usqadd_ss( 0b0111111010100000001110[22] : rn[5] : rd[5] );
usqadd_ss.var format : {char const*} = {"2295"};

usqadd_ss.disasm = {
  sink << "usqadd\t" << DisasmS(rd) << ", " << DisasmS(rn);
};

op usqadd_v16b16b( 0b0110111000100000001110[22] : rn[5] : rd[5] );
usqadd_v16b16b.var format : {char const*} = {"2342"};

usqadd_v16b16b.disasm = {
  sink << "usqadd\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0);
};

op usqadd_v2d2d( 0b0110111011100000001110[22] : rn[5] : rd[5] );
usqadd_v2d2d.var format : {char const*} = {"2385"};

usqadd_v2d2d.disasm = {
  sink << "usqadd\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3);
};

op usqadd_v2s2s( 0b0010111010100000001110[22] : rn[5] : rd[5] );
usqadd_v2s2s.var format : {char const*} = {"2444"};

usqadd_v2s2s.disasm = {
  sink << "usqadd\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2);
};

op usqadd_v4h4h( 0b0010111001100000001110[22] : rn[5] : rd[5] );
usqadd_v4h4h.var format : {char const*} = {"2468"};

usqadd_v4h4h.disasm = {
  sink << "usqadd\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1);
};

op usqadd_v4s4s( 0b0110111010100000001110[22] : rn[5] : rd[5] );
usqadd_v4s4s.var format : {char const*} = {"2527"};

usqadd_v4s4s.disasm = {
  sink << "usqadd\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2);
};

op usqadd_v8b8b( 0b0010111000100000001110[22] : rn[5] : rd[5] );
usqadd_v8b8b.var format : {char const*} = {"2557"};

usqadd_v8b8b.disasm = {
  sink << "usqadd\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0);
};

op usqadd_v8hv8h( 0b0110111001100000001110[22] : rn[5] : rd[5] );
usqadd_v8hv8h.var format : {char const*} = {"2586"};

usqadd_v8hv8h.disasm = {
  sink << "usqadd\t" << DisasmTV(rd,8,1) <<  ", " << DisasmTV(rn,8,1);
};

op usra_ddi( 0b0111111101[10] : lro[6] : 0b000101[6] : rn[5] : rd[5] );
usra_ddi.var format : {char const*} = {"552"}, shift : {unsigned} = {64 - lro};

usra_ddi.disasm = {
  sink << "usra\t" << DisasmD(rd) << ", " << DisasmD(rn) << ", " << DisasmI(shift);
};

op usra_v16b16bi( 0b0110111100001[13] : lro[3] : 0b000101[6] : rn[5] : rd[5] );
usra_v16b16bi.var format : {char const*} = {"1956"}, shift : {unsigned} = {8 - lro};

usra_v16b16bi.disasm = {
  sink << "usra\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmI(shift);
};

op usra_v2d2di( 0b0110111101[10] : lro[6] : 0b000101[6] : rn[5] : rd[5] );
usra_v2d2di.var format : {char const*} = {"570"}, shift : {unsigned} = {64 - lro};

usra_v2d2di.disasm = {
  sink << "usra\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmI(shift);
};

op usra_v2s2si( 0b00101111001[11] : lro[5] : 0b000101[6] : rn[5] : rd[5] );
usra_v2s2si.var format : {char const*} = {"1020"}, shift : {unsigned} = {32 - lro};

usra_v2s2si.disasm = {
  sink << "usra\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmI(shift);
};

op usra_v4h4hi( 0b001011110001[12] : lro[4] : 0b000101[6] : rn[5] : rd[5] );
usra_v4h4hi.var format : {char const*} = {"1850"}, shift : {unsigned} = {16 - lro};

usra_v4h4hi.disasm = {
  sink << "usra\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmI(shift);
};

op usra_v4s4si( 0b01101111001[11] : lro[5] : 0b000101[6] : rn[5] : rd[5] );
usra_v4s4si.var format : {char const*} = {"1195"}, shift : {unsigned} = {32 - lro};

usra_v4s4si.disasm = {
  sink << "usra\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmI(shift);
};

op usra_v8b8bi( 0b0010111100001[13] : lro[3] : 0b000101[6] : rn[5] : rd[5] );
usra_v8b8bi.var format : {char const*} = {"1983"}, shift : {unsigned} = {8 - lro};

usra_v8b8bi.disasm = {
  sink << "usra\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmI(shift);
};

op usra_v8h8hi( 0b011011110001[12] : lro[4] : 0b000101[6] : rn[5] : rd[5] );
usra_v8h8hi.var format : {char const*} = {"1884"}, shift : {unsigned} = {16 - lro};

usra_v8h8hi.disasm = {
  sink << "usra\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmI(shift);
};

op usubl2_v2dv4sv4s( 0b01101110101[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
usubl2_v2dv4sv4s.var format : {char const*} = {"990"};

usubl2_v2dv4sv4s.disasm = {
  sink << "usubl2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op usubl2_v4sv8hv8h( 0b01101110011[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
usubl2_v4sv8hv8h.var format : {char const*} = {"1296"};

usubl2_v4sv8hv8h.disasm = {
  sink << "usubl2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op usubl2_v8hv16bv16b( 0b01101110001[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
usubl2_v8hv16bv16b.var format : {char const*} = {"1380"};

usubl2_v8hv16bv16b.disasm = {
  sink << "usubl2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op usubl_v2dv2sv2s( 0b00101110101[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
usubl_v2dv2sv2s.var format : {char const*} = {"971"};

usubl_v2dv2sv2s.disasm = {
  sink << "usubl\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op usubl_v4sv4hv4h( 0b00101110011[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
usubl_v4sv4hv4h.var format : {char const*} = {"1177"};

usubl_v4sv4hv4h.disasm = {
  sink << "usubl\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op usubl_v8hv8bv8b( 0b00101110001[11] : rm[5] : 0b001000[6] : rn[5] : rd[5] );
usubl_v8hv8bv8b.var format : {char const*} = {"1399"};

usubl_v8hv8bv8b.disasm = {
  sink << "usubl\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op usubw2_v2dv2dv4s( 0b01101110101[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
usubw2_v2dv2dv4s.var format : {char const*} = {"952"};

usubw2_v2dv2dv4s.disasm = {
  sink << "usubw2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,4,2);
};

op usubw2_v4sv4sv8h( 0b01101110011[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
usubw2_v4sv4sv8h.var format : {char const*} = {"1279"};

usubw2_v4sv4sv8h.disasm = {
  sink << "usubw2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,8,1);
};

op usubw2_v8hv8hv16b( 0b01101110001[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
usubw2_v8hv8hv16b.var format : {char const*} = {"1403"};

usubw2_v8hv8hv16b.disasm = {
  sink << "usubw2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,16,0);
};

op usubw_v2dv2dv2s( 0b00101110101[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
usubw_v2dv2dv2s.var format : {char const*} = {"948"};

usubw_v2dv2dv2s.disasm = {
  sink << "usubw\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,2);
};

op usubw_v4sv4sv4h( 0b00101110011[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
usubw_v4sv4sv4h.var format : {char const*} = {"1199"};

usubw_v4sv4sv4h.disasm = {
  sink << "usubw\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,1);
};

op usubw_v8hv8hv8b( 0b00101110001[11] : rm[5] : 0b001100[6] : rn[5] : rd[5] );
usubw_v8hv8hv8b.var format : {char const*} = {"1407"};

usubw_v8hv8hv8b.disasm = {
  sink << "usubw\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,0);
};

op uzp1_v16bv16bv16b( 0b01001110000[11] : rm[5] : 0b000110[6] : rn[5] : rd[5] );
uzp1_v16bv16bv16b.var format : {char const*} = {"876"};

uzp1_v16bv16bv16b.disasm = {
  sink << "uzp1\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op uzp1_v2dv2dv2d( 0b01001110110[11] : rm[5] : 0b000110[6] : rn[5] : rd[5] );
uzp1_v2dv2dv2d.var format : {char const*} = {"941"};

uzp1_v2dv2dv2d.disasm = {
  sink << "uzp1\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op uzp1_v2sv2sv2s( 0b00001110100[11] : rm[5] : 0b000110[6] : rn[5] : rd[5] );
uzp1_v2sv2sv2s.var format : {char const*} = {"1091"};

uzp1_v2sv2sv2s.disasm = {
  sink << "uzp1\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op uzp1_v4hv4hv4h( 0b00001110010[11] : rm[5] : 0b000110[6] : rn[5] : rd[5] );
uzp1_v4hv4hv4h.var format : {char const*} = {"1141"};

uzp1_v4hv4hv4h.disasm = {
  sink << "uzp1\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op uzp1_v4sv4sv4s( 0b01001110100[11] : rm[5] : 0b000110[6] : rn[5] : rd[5] );
uzp1_v4sv4sv4s.var format : {char const*} = {"1272"};

uzp1_v4sv4sv4s.disasm = {
  sink << "uzp1\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op uzp1_v8bv8bv8b( 0b00001110000[11] : rm[5] : 0b000110[6] : rn[5] : rd[5] );
uzp1_v8bv8bv8b.var format : {char const*} = {"1350"};

uzp1_v8bv8bv8b.disasm = {
  sink << "uzp1\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op uzp1_v8hv8hv8h( 0b01001110010[11] : rm[5] : 0b000110[6] : rn[5] : rd[5] );
uzp1_v8hv8hv8h.var format : {char const*} = {"1454"};

uzp1_v8hv8hv8h.disasm = {
  sink << "uzp1\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op uzp2_v16bv16bv16b( 0b01001110000[11] : rm[5] : 0b010110[6] : rn[5] : rd[5] );
uzp2_v16bv16bv16b.var format : {char const*} = {"877"};

uzp2_v16bv16bv16b.disasm = {
  sink << "uzp2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op uzp2_v2dv2dv2d( 0b01001110110[11] : rm[5] : 0b010110[6] : rn[5] : rd[5] );
uzp2_v2dv2dv2d.var format : {char const*} = {"942"};

uzp2_v2dv2dv2d.disasm = {
  sink << "uzp2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op uzp2_v2sv2sv2s( 0b00001110100[11] : rm[5] : 0b010110[6] : rn[5] : rd[5] );
uzp2_v2sv2sv2s.var format : {char const*} = {"1092"};

uzp2_v2sv2sv2s.disasm = {
  sink << "uzp2\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op uzp2_v4hv4hv4h( 0b00001110010[11] : rm[5] : 0b010110[6] : rn[5] : rd[5] );
uzp2_v4hv4hv4h.var format : {char const*} = {"1142"};

uzp2_v4hv4hv4h.disasm = {
  sink << "uzp2\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op uzp2_v4sv4sv4s( 0b01001110100[11] : rm[5] : 0b010110[6] : rn[5] : rd[5] );
uzp2_v4sv4sv4s.var format : {char const*} = {"1273"};

uzp2_v4sv4sv4s.disasm = {
  sink << "uzp2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op uzp2_v8bv8bv8b( 0b00001110000[11] : rm[5] : 0b010110[6] : rn[5] : rd[5] );
uzp2_v8bv8bv8b.var format : {char const*} = {"1351"};

uzp2_v8bv8bv8b.disasm = {
  sink << "uzp2\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op xtn2_v16b8h( 0b0100111000100001001010[22] : rn[5] : rd[5] );
xtn2_v16b8h.var format : {char const*} = {"2351"};

xtn2_v16b8h.disasm = {
  sink << "xtn2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,8,1);
};

op xtn2_v4s2d( 0b0100111010100001001010[22] : rn[5] : rd[5] );
xtn2_v4s2d.var format : {char const*} = {"2488"};

xtn2_v4s2d.disasm = {
  sink << "xtn2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,2,3);
};

op xtn_v2s2d( 0b0000111010100001001010[22] : rn[5] : rd[5] );
xtn_v2s2d.var format : {char const*} = {"2409"};

xtn_v2s2d.disasm = {
  sink << "xtn\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,3);
};

op xtn_v4h4s( 0b0000111001100001001010[22] : rn[5] : rd[5] );
xtn_v4h4s.var format : {char const*} = {"2478"};

xtn_v4h4s.disasm = {
  sink << "xtn\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,2);
};

op xtn_v8b8h( 0b0000111000100001001010[22] : rn[5] : rd[5] );
xtn_v8b8h.var format : {char const*} = {"2566"};

xtn_v8b8h.disasm = {
  sink << "xtn\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,1);
};

op zip1_v16bv16bv16b( 0b01001110000[11] : rm[5] : 0b001110[6] : rn[5] : rd[5] );
zip1_v16bv16bv16b.var format : {char const*} = {"878"};

zip1_v16bv16bv16b.disasm = {
  sink << "zip1\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op zip1_v2dv2dv2d( 0b01001110110[11] : rm[5] : 0b001110[6] : rn[5] : rd[5] );
zip1_v2dv2dv2d.var format : {char const*} = {"943"};

zip1_v2dv2dv2d.disasm = {
  sink << "zip1\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op zip1_v2sv2sv2s( 0b00001110100[11] : rm[5] : 0b001110[6] : rn[5] : rd[5] );
zip1_v2sv2sv2s.var format : {char const*} = {"1093"};

zip1_v2sv2sv2s.disasm = {
  sink << "zip1\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op zip1_v4hv4hv4h( 0b00001110010[11] : rm[5] : 0b001110[6] : rn[5] : rd[5] );
zip1_v4hv4hv4h.var format : {char const*} = {"1143"};

zip1_v4hv4hv4h.disasm = {
  sink << "zip1\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op zip1_v4sv4sv4s( 0b01001110100[11] : rm[5] : 0b001110[6] : rn[5] : rd[5] );
zip1_v4sv4sv4s.var format : {char const*} = {"1274"};

zip1_v4sv4sv4s.disasm = {
  sink << "zip1\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op zip1_v8bv8bv8b( 0b00001110000[11] : rm[5] : 0b001110[6] : rn[5] : rd[5] );
zip1_v8bv8bv8b.var format : {char const*} = {"1352"};

zip1_v8bv8bv8b.disasm = {
  sink << "zip1\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op zip1_v8hv8hv8h( 0b01001110010[11] : rm[5] : 0b001110[6] : rn[5] : rd[5] );
zip1_v8hv8hv8h.var format : {char const*} = {"1455"};

zip1_v8hv8hv8h.disasm = {
  sink << "zip1\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

op zip2_v16bv16bv16b( 0b01001110000[11] : rm[5] : 0b011110[6] : rn[5] : rd[5] );
zip2_v16bv16bv16b.var format : {char const*} = {"879"};

zip2_v16bv16bv16b.disasm = {
  sink << "zip2\t" << DisasmTV(rd,16,0) << ", " << DisasmTV(rn,16,0) << ", " << DisasmTV(rm,16,0);
};

op zip2_v2dv2dv2d( 0b01001110110[11] : rm[5] : 0b011110[6] : rn[5] : rd[5] );
zip2_v2dv2dv2d.var format : {char const*} = {"944"};

zip2_v2dv2dv2d.disasm = {
  sink << "zip2\t" << DisasmTV(rd,2,3) << ", " << DisasmTV(rn,2,3) << ", " << DisasmTV(rm,2,3);
};

op zip2_v2sv2sv2s( 0b00001110100[11] : rm[5] : 0b011110[6] : rn[5] : rd[5] );
zip2_v2sv2sv2s.var format : {char const*} = {"1094"};

zip2_v2sv2sv2s.disasm = {
  sink << "zip2\t" << DisasmTV(rd,2,2) << ", " << DisasmTV(rn,2,2) << ", " << DisasmTV(rm,2,2);
};

op zip2_v4hv4hv4h( 0b00001110010[11] : rm[5] : 0b011110[6] : rn[5] : rd[5] );
zip2_v4hv4hv4h.var format : {char const*} = {"1144"};

zip2_v4hv4hv4h.disasm = {
  sink << "zip2\t" << DisasmTV(rd,4,1) << ", " << DisasmTV(rn,4,1) << ", " << DisasmTV(rm,4,1);
};

op zip2_v4sv4sv4s( 0b01001110100[11] : rm[5] : 0b011110[6] : rn[5] : rd[5] );
zip2_v4sv4sv4s.var format : {char const*} = {"1275"};

zip2_v4sv4sv4s.disasm = {
  sink << "zip2\t" << DisasmTV(rd,4,2) << ", " << DisasmTV(rn,4,2) << ", " << DisasmTV(rm,4,2);
};

op zip2_v8bv8bv8b( 0b00001110000[11] : rm[5] : 0b011110[6] : rn[5] : rd[5] );
zip2_v8bv8bv8b.var format : {char const*} = {"1353"};

zip2_v8bv8bv8b.disasm = {
  sink << "zip2\t" << DisasmTV(rd,8,0) << ", " << DisasmTV(rn,8,0) << ", " << DisasmTV(rm,8,0);
};

op zip2_v8hv8hv8h( 0b01001110010[11] : rm[5] : 0b011110[6] : rn[5] : rd[5] );
zip2_v8hv8hv8h.var format : {char const*} = {"1456"};

zip2_v8hv8hv8h.disasm = {
  sink << "zip2\t" << DisasmTV(rd,8,1) << ", " << DisasmTV(rn,8,1) << ", " << DisasmTV(rm,8,1);
};

