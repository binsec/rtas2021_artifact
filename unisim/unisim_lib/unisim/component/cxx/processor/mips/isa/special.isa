/*
 *  Copyright (c) 2019-2020,
 *  Commissariat a l'Energie Atomique (CEA)
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without modification,
 *  are permitted provided that the following conditions are met:
 *
 *   - Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *   - Neither the name of CEA nor the names of its contributors may be used to
 *     endorse or promote products derived from this software without specific prior
 *     written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Authors: Yves Lhuillier (yves.lhuillier@cea.fr)
 */

/**** C0 ***/

op tlbr(16[6]:1[1]:0x01[25]);
tlbr.disasm = { sink << "tlbr"; };

op tlbwi(16[6]:1[1]:0x02[25]);
tlbwi.disasm = { sink << "tlbwi"; };

op tlbwr(16[6]:1[1]:0x06[25]);
tlbwr.disasm = { sink << "tlbwr"; };

op tlbp(16[6]:1[1]:0x08[25]);
tlbp.disasm = { sink << "tlbp"; };

op eret(16[6]:1[1]:0x18[25]);
eret.disasm = { sink << "eret"; };

op wait(16[6]:1[1]:0x20[25]);
wait.disasm = { sink << "wait"; };

{false}:                                        \
op sync_p(0x0000040f[32]);
sync_p.disasm = { sink << "sync.p"; };

op pause(0[6]:0[5]:0[5]:0[5]:5[5]:0x00[6]);
pause.disasm = { sink << "pause"; };
