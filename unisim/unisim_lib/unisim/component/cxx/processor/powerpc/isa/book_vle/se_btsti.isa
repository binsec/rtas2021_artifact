/*
 *  Copyright (c) 2007-2018,
 *  Commissariat a l'Energie Atomique (CEA)
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without modification,
 *  are permitted provided that the following conditions are met:
 *
 *   - Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *   - Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *   - Neither the name of CEA nor the names of its contributors may be used to
 *     endorse or promote products derived from this software without specific prior
 *     written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *  DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Authors: Gilles Mouchard (gilles.mouchard@cea.fr)
 *          Yves Lhuillier (yves.lhuillier@cea.fr)
 */

/* Bit Test Immediate */
op se_btsti(25[6]:1[1]:ui5[5]:sext srx[4]);
se_btsti.var rx : {uint8_t} = {srx & 31};

se_btsti.execute = {
	// Read the input operands
	UINT x = cpu->GetGPR(rx);
	
	// Compute the result
	UINT result = x & UINT(0x80000000 >> ui5);
	
	// Generate CR0: CR0[SO]=XER[SO] CR0[LT]=(0) CR0[GT]=(result!=0) CR0[EQ]=(result==0)
	XER& xer = cpu->GetXER();
	CR& cr = cpu->GetCR();
	cr.Set<CR::CR0::SO>(xer.Get<XER::SO>());
	cr.Set<CR::CR0::LT>(0);
	cr.Set<CR::CR0::GT>(UINT(result != UINT(0)));
	cr.Set<CR::CR0::EQ>(UINT(result == UINT(0)));
	
	return true;
};

se_btsti.disasm = {
	os << "se_btsti " << GPRPrint(rx) << ',' << unsigned(ui5);
};

